{
    "docs": [
        {
            "location": "/", 
            "text": "\u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0\n\n\n\u5b66\u4e60\u662f\u4e00\u4e2a\u6e10\u8fd1\u7684\u8fc7\u7a0b\uff0c\u7531\u4e0d\u5f97\u534a\u70b9\u5f04\u865a\u4f5c\u5047\uff0e\n\n\n\u591a\u8bfb\u4e66\uff0c\u591a\u7ec3\u4e60\uff0c\u603b\u4f1a\u51fa\u6210\u7ee9\u3002", 
            "title": "Home"
        }, 
        {
            "location": "/#_1", 
            "text": "\u5b66\u4e60\u662f\u4e00\u4e2a\u6e10\u8fd1\u7684\u8fc7\u7a0b\uff0c\u7531\u4e0d\u5f97\u534a\u70b9\u5f04\u865a\u4f5c\u5047\uff0e  \u591a\u8bfb\u4e66\uff0c\u591a\u7ec3\u4e60\uff0c\u603b\u4f1a\u51fa\u6210\u7ee9\u3002", 
            "title": "\u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/", 
            "text": "\u6392\u5e8f\u7b97\u6cd5\u4ecb\u7ecd\n\n\n\u7b97\u6cd5\u5206\u6790\n\n\nhttps://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#.E7.A9.A9.E5.AE.9A.E6.80.A7\n\n\nhttp://algorithm.yuanbin.me/zh-hans/basics_sorting/\n\n\n\u590d\u6742\u5ea6\n\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\n:\u6267\u884c\u65f6\u95f4(\u6bd4\u8f83\u548c\u4ea4\u6362\u6b21\u6570)\n\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\n:\u6240\u6d88\u8017\u7684\u989d\u5916\u5185\u5b58\u7a7a\u95f4\n\n\n\u4f7f\u7528\u5c0f\u5806\u6808\u6216\u8868\n\n\n\u4f7f\u7528\u94fe\u8868\u6216\u6307\u9488\u3001\u6570\u7ec4\u7d22\u5f15\u6765\u4ee3\u8868\u6570\u636e\n\n\n\u6392\u5e8f\u6570\u636e\u7684\u526f\u672c\n\n\n\n\n\n\n\n\n\u7a33\u5b9a\u6027\n\n\n\u76f8\u540c\u503c\u7684\u9879\u6392\u5e8f\u65f6\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\u5c31\u662f\u7a33\u5b9a\u7684\n\n\n\n\n\n\n\u7a33\u5b9a\u7684\u6392\u5e8f\n\n\n\n\n\u5192\u6ce1\u6392\u5e8f\uff08bubble sort\uff09\u2014 O(n2)\n\n\n\u9e21\u5c3e\u9152\u6392\u5e8f\uff08cocktail sort\uff09\u2014O(n2)\n\n\n\u6876\u6392\u5e8f\uff08bucket sort\uff09\u2014O(n)\uff1b\u9700\u8981O(k)\u989d\u5916\u7a7a\u95f4\n\n\n\u8ba1\u6570\u6392\u5e8f\uff08counting sort\uff09\u2014O(n+k)\uff1b\u9700\u8981O(n+k)\u989d\u5916\u7a7a\u95f4\n\n\n\u5f52\u5e76\u6392\u5e8f\uff08merge sort\uff09\u2014O(n log n)\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4\n\n\n\u539f\u5730\u5f52\u5e76\u6392\u5e8f\u2014 O(n log2 n)\u5982\u679c\u4f7f\u7528\u6700\u4f73\u7684\u73b0\u5728\u7248\u672c\n\n\n\u4e8c\u53c9\u6392\u5e8f\u6811\u6392\u5e8f\uff08binary tree sort\uff09\u2014 O(n log n)\u671f\u671b\u65f6\u95f4\uff1bO(n2)\u6700\u574f\u65f6\u95f4\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4\n\n\n\u9e3d\u5de2\u6392\u5e8f\uff08pigeonhole sort\uff09\u2014O(n+k)\uff1b\u9700\u8981O(k)\u989d\u5916\u7a7a\u95f4\n\n\n\u57fa\u6570\u6392\u5e8f\uff08radix sort\uff09\u2014O(n\u00b7k)\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4\n\n\n\u4f8f\u5112\u6392\u5e8f\uff08gnome sort\uff09\u2014 O(n2)\n\n\n\u56fe\u4e66\u9986\u6392\u5e8f\uff08library sort\uff09\u2014 O(n log n)\u671f\u671b\u65f6\u95f4\uff1bO(n2)\u6700\u574f\u65f6\u95f4\uff1b\u9700\u8981(1+\u03b5)n\u989d\u5916\u7a7a\u95f4\n\n\n\u5757\u6392\u5e8f\uff08block sort\uff09\u2014 O(n log n)\n\n\n\n\n\n\n\n\n\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\n\n\n\n\n\u9009\u62e9\u6392\u5e8f\uff08selection sort\uff09\u2014O(n2)\n\n\n\u63d2\u5165\u6392\u5e8f\uff08insertion sort\uff09\u2014O(n2)\n\n\n\u5e0c\u5c14\u6392\u5e8f\uff08shell sort\uff09\u2014O(n log2 n)\u5982\u679c\u4f7f\u7528\u6700\u4f73\u7684\u73b0\u5728\u7248\u672c\n\n\nClover\u6392\u5e8f\u7b97\u6cd5\uff08Clover sort\uff09\u2014O(n)\u671f\u671b\u65f6\u95f4\uff0cO(n2)\u6700\u574f\u60c5\u51b5\n\n\n\u68b3\u6392\u5e8f\u2014 O(n log n)\n\n\n\u5806\u6392\u5e8f\uff08heap sort\uff09\u2014O(n log n)\n\n\n\u5e73\u6ed1\u6392\u5e8f\uff08smooth sort\uff09\u2014 O(n log n)\n\n\n\u5feb\u901f\u6392\u5e8f\uff08quick sort\uff09\u2014O(n log n)\u671f\u671b\u65f6\u95f4\uff0cO(n2)\u6700\u574f\u60c5\u51b5\uff1b\u5bf9\u4e8e\u5927\u7684\u3001\u968f\u673a\u6570\u5217\u8868\u4e00\u822c\u76f8\u4fe1\u662f\u6700\u5feb\u7684\u5df2\u77e5\u6392\u5e8f\n\n\n\u5185\u7701\u6392\u5e8f\uff08introsort\uff09\u2014O(n log n)\n\n\n\u8010\u5fc3\u6392\u5e8f\uff08patience sort\uff09\u2014O(n log n + k)\u6700\u574f\u60c5\u51b5\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7684O(n + k)\u7a7a\u95f4\uff0c\u4e5f\u9700\u8981\u627e\u5230\u6700\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff08longest increasing subsequence\uff09\n\n\n\n\n\n\n\n\n\u5206\u7c7b", 
            "title": "\u6392\u5e8f\u7b97\u6cd5\u4ecb\u7ecd"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/#_1", 
            "text": "", 
            "title": "\u6392\u5e8f\u7b97\u6cd5\u4ecb\u7ecd"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/#_2", 
            "text": "https://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#.E7.A9.A9.E5.AE.9A.E6.80.A7  http://algorithm.yuanbin.me/zh-hans/basics_sorting/", 
            "title": "\u7b97\u6cd5\u5206\u6790"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/#_3", 
            "text": "\u65f6\u95f4\u590d\u6742\u5ea6 :\u6267\u884c\u65f6\u95f4(\u6bd4\u8f83\u548c\u4ea4\u6362\u6b21\u6570)  \u7a7a\u95f4\u590d\u6742\u5ea6 :\u6240\u6d88\u8017\u7684\u989d\u5916\u5185\u5b58\u7a7a\u95f4  \u4f7f\u7528\u5c0f\u5806\u6808\u6216\u8868  \u4f7f\u7528\u94fe\u8868\u6216\u6307\u9488\u3001\u6570\u7ec4\u7d22\u5f15\u6765\u4ee3\u8868\u6570\u636e  \u6392\u5e8f\u6570\u636e\u7684\u526f\u672c", 
            "title": "\u590d\u6742\u5ea6"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/#_4", 
            "text": "\u76f8\u540c\u503c\u7684\u9879\u6392\u5e8f\u65f6\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\u5c31\u662f\u7a33\u5b9a\u7684    \u7a33\u5b9a\u7684\u6392\u5e8f   \u5192\u6ce1\u6392\u5e8f\uff08bubble sort\uff09\u2014 O(n2)  \u9e21\u5c3e\u9152\u6392\u5e8f\uff08cocktail sort\uff09\u2014O(n2)  \u6876\u6392\u5e8f\uff08bucket sort\uff09\u2014O(n)\uff1b\u9700\u8981O(k)\u989d\u5916\u7a7a\u95f4  \u8ba1\u6570\u6392\u5e8f\uff08counting sort\uff09\u2014O(n+k)\uff1b\u9700\u8981O(n+k)\u989d\u5916\u7a7a\u95f4  \u5f52\u5e76\u6392\u5e8f\uff08merge sort\uff09\u2014O(n log n)\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4  \u539f\u5730\u5f52\u5e76\u6392\u5e8f\u2014 O(n log2 n)\u5982\u679c\u4f7f\u7528\u6700\u4f73\u7684\u73b0\u5728\u7248\u672c  \u4e8c\u53c9\u6392\u5e8f\u6811\u6392\u5e8f\uff08binary tree sort\uff09\u2014 O(n log n)\u671f\u671b\u65f6\u95f4\uff1bO(n2)\u6700\u574f\u65f6\u95f4\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4  \u9e3d\u5de2\u6392\u5e8f\uff08pigeonhole sort\uff09\u2014O(n+k)\uff1b\u9700\u8981O(k)\u989d\u5916\u7a7a\u95f4  \u57fa\u6570\u6392\u5e8f\uff08radix sort\uff09\u2014O(n\u00b7k)\uff1b\u9700\u8981O(n)\u989d\u5916\u7a7a\u95f4  \u4f8f\u5112\u6392\u5e8f\uff08gnome sort\uff09\u2014 O(n2)  \u56fe\u4e66\u9986\u6392\u5e8f\uff08library sort\uff09\u2014 O(n log n)\u671f\u671b\u65f6\u95f4\uff1bO(n2)\u6700\u574f\u65f6\u95f4\uff1b\u9700\u8981(1+\u03b5)n\u989d\u5916\u7a7a\u95f4  \u5757\u6392\u5e8f\uff08block sort\uff09\u2014 O(n log n)     \u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f   \u9009\u62e9\u6392\u5e8f\uff08selection sort\uff09\u2014O(n2)  \u63d2\u5165\u6392\u5e8f\uff08insertion sort\uff09\u2014O(n2)  \u5e0c\u5c14\u6392\u5e8f\uff08shell sort\uff09\u2014O(n log2 n)\u5982\u679c\u4f7f\u7528\u6700\u4f73\u7684\u73b0\u5728\u7248\u672c  Clover\u6392\u5e8f\u7b97\u6cd5\uff08Clover sort\uff09\u2014O(n)\u671f\u671b\u65f6\u95f4\uff0cO(n2)\u6700\u574f\u60c5\u51b5  \u68b3\u6392\u5e8f\u2014 O(n log n)  \u5806\u6392\u5e8f\uff08heap sort\uff09\u2014O(n log n)  \u5e73\u6ed1\u6392\u5e8f\uff08smooth sort\uff09\u2014 O(n log n)  \u5feb\u901f\u6392\u5e8f\uff08quick sort\uff09\u2014O(n log n)\u671f\u671b\u65f6\u95f4\uff0cO(n2)\u6700\u574f\u60c5\u51b5\uff1b\u5bf9\u4e8e\u5927\u7684\u3001\u968f\u673a\u6570\u5217\u8868\u4e00\u822c\u76f8\u4fe1\u662f\u6700\u5feb\u7684\u5df2\u77e5\u6392\u5e8f  \u5185\u7701\u6392\u5e8f\uff08introsort\uff09\u2014O(n log n)  \u8010\u5fc3\u6392\u5e8f\uff08patience sort\uff09\u2014O(n log n + k)\u6700\u574f\u60c5\u51b5\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7684O(n + k)\u7a7a\u95f4\uff0c\u4e5f\u9700\u8981\u627e\u5230\u6700\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff08longest increasing subsequence\uff09", 
            "title": "\u7a33\u5b9a\u6027"
        }, 
        {
            "location": "/data_algorithms/algorithms1_intro/#_5", 
            "text": "", 
            "title": "\u5206\u7c7b"
        }, 
        {
            "location": "/cplus/cplus_win/", 
            "text": "c++\u3000windows\u3000\u73af\u5883\u642d\u5efa\n\n\n\u4e00\u3000\u5b89\u88c5mingw-get-inst\n\n\n\u8fd9\u4e2a\u662fc++\u7684win\u4e0a\u7684\u7f16\u8bd1\u73af\u5883.\u4e0b\u8f7d\u5730\u5740:\nhttp://sourceforge.net/projects/mingw/files/\n\n\n\n\n\n\n\u5b83\u4f1a\u81ea\u52a8\u8054\u7f51\u4e0b\u8f7d\u5305\n\n\n\n\n\u5b89\u88c5\u5b8c\u540e\u914d\u7f6e\u73af\u5883\u53d8\u91cf\n\n\n\n\n\u6253\u5f00\u73af\u5883\u53d8\u91cf\uff0c\u6dfb\u52a0mingw_home\u53d8\u91cf\uff0c\u5185\u5bb9 x:\\Program Files\\MinGW\n\n\n\u8bbe\u7f6epath\u53d8\u91cf\uff0c\u7f16\u8f91path\u53d8\u91cf\u6dfb\u52a0 %mingw_home%\\bin;%mingw_home%\\msys\\1.0\\bin;\n\n\n\u6dfb\u52a0LIBRARY_PATH\u53d8\u91cf\uff0c\u5185\u5bb9 %mingw_home%\\lib\n\n\n\u6dfb\u52a0C_INCLUDE_PATH\u53d8\u91cf\uff0c\u5185\u5bb9 %mingw_home%\\include\n\n\n\n\n\u6539\u540d,\u5c06mingw\u7684bin\u76ee\u5f55\u4e0b\u7684mingw32-make.exe\u62f7\u8d1d\u4e00\u4efd\u6539\u540d\u4e3amake.exe\n\n\n\n\n\u91cd\u542f\u7535\u8111\u3002\n\n\n\u4e8c \u4e0b\u8f7d\u3000eclipse for c/c++\n\n\n\u6211\u4e0b\u8f7d\u7684\u662f eclipse-cpp-juno-SR2-win32 \nhttp://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/junosr2\n\n\n\u89e3\u538b\u4e4b\u540e\u6253\u5f00\uff0c\u914d\u7f6e\u5982\u4e0b.\n\n\n\n\n\u4e09\u3000hello,world\n \u65b0\u5efac++\u5de5\u7a0b,\u9009\u62e9MinGW GCC\n\n\n\n\n\u7f16\u8bd1\u8fd0\u884c.\u7f16\u8bd1\u70b9\u51fb\u9524\u5b50\uff0c\u8fd0\u884c\u70b9\u51fb\u4e09\u89d2\u5f62\u7684\u6309\u94ae\u3002", 
            "title": "c++\u73af\u5883\u642d\u5efa(Win)"
        }, 
        {
            "location": "/cplus/cplus_win/#c-windows", 
            "text": "", 
            "title": "c++\u3000windows\u3000\u73af\u5883\u642d\u5efa"
        }, 
        {
            "location": "/cplus/cplus_win/#mingw-get-inst", 
            "text": "\u8fd9\u4e2a\u662fc++\u7684win\u4e0a\u7684\u7f16\u8bd1\u73af\u5883.\u4e0b\u8f7d\u5730\u5740: http://sourceforge.net/projects/mingw/files/    \u5b83\u4f1a\u81ea\u52a8\u8054\u7f51\u4e0b\u8f7d\u5305   \u5b89\u88c5\u5b8c\u540e\u914d\u7f6e\u73af\u5883\u53d8\u91cf   \u6253\u5f00\u73af\u5883\u53d8\u91cf\uff0c\u6dfb\u52a0mingw_home\u53d8\u91cf\uff0c\u5185\u5bb9 x:\\Program Files\\MinGW  \u8bbe\u7f6epath\u53d8\u91cf\uff0c\u7f16\u8f91path\u53d8\u91cf\u6dfb\u52a0 %mingw_home%\\bin;%mingw_home%\\msys\\1.0\\bin;  \u6dfb\u52a0LIBRARY_PATH\u53d8\u91cf\uff0c\u5185\u5bb9 %mingw_home%\\lib  \u6dfb\u52a0C_INCLUDE_PATH\u53d8\u91cf\uff0c\u5185\u5bb9 %mingw_home%\\include   \u6539\u540d,\u5c06mingw\u7684bin\u76ee\u5f55\u4e0b\u7684mingw32-make.exe\u62f7\u8d1d\u4e00\u4efd\u6539\u540d\u4e3amake.exe   \u91cd\u542f\u7535\u8111\u3002", 
            "title": "\u4e00\u3000\u5b89\u88c5mingw-get-inst"
        }, 
        {
            "location": "/cplus/cplus_win/#eclipse-for-cc", 
            "text": "\u6211\u4e0b\u8f7d\u7684\u662f eclipse-cpp-juno-SR2-win32  http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/junosr2  \u89e3\u538b\u4e4b\u540e\u6253\u5f00\uff0c\u914d\u7f6e\u5982\u4e0b.   \u4e09\u3000hello,world\n \u65b0\u5efac++\u5de5\u7a0b,\u9009\u62e9MinGW GCC   \u7f16\u8bd1\u8fd0\u884c.\u7f16\u8bd1\u70b9\u51fb\u9524\u5b50\uff0c\u8fd0\u884c\u70b9\u51fb\u4e09\u89d2\u5f62\u7684\u6309\u94ae\u3002", 
            "title": "\u4e8c \u4e0b\u8f7d\u3000eclipse for c/c++"
        }, 
        {
            "location": "/cplus/cplus1_grammer/", 
            "text": "c++\u3000\u7b2c\u4e00\u7ae0 \u57fa\u7840\u8bed\u6cd5,\u63a7\u5236\u6d41\u7a0b,\u6570\u636e\u7c7b\u578b\n\n\n\u4e00 \u5b9a\u4e49\u53d8\u91cf:\n\n\ndouble a=2.0\n\n\n\n\n\u4e8c \u63a7\u5236\u6d41\u7a0b:\n\n\n\n\nif ...else \n\n\n\n\n  void control() {\n      int a = 10;\n      if (a \n 5) {\n          cout \n \nok\n \n endl;\n      } else {\n          cout \n \nnot ok\n \n endl;\n      }\n  }\n\n\n\n\n\n\nswitch:\u8868\u8fbe\u5f0f\u53ea\u80fd\u662f\u6574\u578b\uff0c\u5b57\u7b26\u578b\uff0c\u679a\u4e3e\u578b\n\n\n\n\n  void control() {\n      int a = 10;\n      if (a \n 5) {\n          cout \n \nok\n \n endl;\n      } else {\n          cout \n \nnot ok\n \n endl;\n      }\n  }\n\n\n\n\n\n\nfor..i\n\n\n\n\n  for (int i = 0;  i \n 10; ++ i) {\n          cout \nhello\n;\n  }\n\n\n\n\n\n\nwhile\n\n\n\n\n    int test=0;\n    while (test \n 100) {\n      test++;\n      cout \n test\n\\t\n;\n    }\n\n\n\n\n\u4e09 \u6570\u636e\u7c7b\u578b\n\n\nint ,char,bool,float,double,int[],double\namp;,char*,enum\n\n+ \n\u6574\u6570\u7c7b\u578b:int\n\n\n\n\u6240\u6709\u7684c++\u7f16\u8bd1\u5668\u90fd\u5e94\u8be5\u6ee1\u8db3c++\u6807\u51c6\u6240\u89c4\u5b9a\u7684\u6574\u6570\u957f\u5ea6\u5173\u7cfb\u5f0f: \nchar\nshort int\nint\nlong int\n\n\n\n\n\u5b57\u7b26\u578b:char\n\n\n\n\n  char ch = 'A';\n  cout \n ch \n endl;\n\n\n\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662fASCII\u7801\u5e76\u4e0d\u662f\u6700\u7ec8\u6807\u51c6\uff0c\u6240\u4ee5\u4e3a\u4e86\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\uff0c\u4e0d\u8981\u7528\u6570\u5b57\u5bf9\u5b57\u7b26\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002\n\n\n\n\n\u679a\u4e3e\u578b:enum\n\n\n\n\n  enum Week {\n          Mon, Tue, Wed, Thu, Fri, Sta, Sun\n      };\n  Week mon = Tue;\n  cout\nmon\nendl;\n\n\n\n\n\u679a\u4e3e\u4e00\u91cf\u5b9a\u4e49\u4e0d\u80fd\u6539\u53d8\uff0c\u6240\u4ee5\u5e38\u7528\u6765\u4ee3\u66ff\u6574\u6570\u5e38\u91cf\uff0c\u4f5c\u7528\u66f4\u4f18\u7684\u662f\u5e38\u91cf\u9700\u8981\u521d\u59cb\u5316\uff0c\u800c\u679a\u4e3e\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u65e0\u987b\u5b9a\u4e49\u5176\u5b9e\u4f53\u3002\n\n\n\n\n\n\n\u5e03\u5c14\u578b:bool :\u975e0\u4e3a\u771f\n\n\u8fd8\u6709:float,double,int[],double\n,char*\n\n\n\n\n\n\nc-\u4e32\n\nc-\u4e32 :\u4ecec\u8bed\u8a00\u4e2d\u5ef6\u7eed\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u4ee50\u7ed3\u5c3e\u3002\u5b57\u7b26\u957f\u5ea6\u8981\u52a01.\n\n\n\n\n\n\nconst char str=\nHello\n;\nchar str=\nHello\n; //\u5b57\u7b26\u4e32\u5e38\u91cf\u8d4b\u4e88char\u6307\u9488\u9519\u8befdeprecated conversion from string constant to \u2018char\u2019\nchar str=\nHello\n; //\u6307\u9488\u5730\u5740\u8d4b\u4e88char\u7c7b\u578b\u9519\u8befinvalid conversion from \u2018const char\u2019 to \u2018char\u2019\ncout\n*str\nendl;  //Hello\ncout\nstr\nendl;  //Hello\ncout\nstr\nendl; //Hello\nconst char chars= \ns\n,chars1= \ns\n;\ncout\n(chars==chars1)\nendl;   //true\nchar is_char[]=\ns\n,is_char1[] = \ns\n;\ncout\n(is_char==is_char1)\nendl;  //false\nstring s = \nhello\n, s1 = \nhello\n;\ncout\n(s==s1)\nendl;    //true\n\n\n\n\n\n\u5728\u6bd4\u8f83\u540c\u4e2a\u5b57\u7b26\u76f8\u540c\u7684c-\u4e32\u662f\u7528==\u4f1a\u4e0d\u76f8\u7b49\uff0c\u56e0\u4e3a\u662f\u6307\u5411\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u6307\u9488\u3002\u800c\u5e94\u8be5\u7528strcmp\n\n\n\n\nstring:\n\nstring\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u64cd\u4f5c\u3002\u4e0d\u50cf\u5b57\u7b26\u6307\u9488\u4e00\u6837\u86cb\u75bc\u3002\n\n\n\n\n  string a, s1 = \nhello\n;\n  string s2 = \n123\n;\n  //\u6bd4\u8f83\n  cout \n (a == s1) \n endl; //false\n  a = s1;\n  cout \n (a == s1) \n endl; //true\n  //\u8fde\u63a5\n  cout \n (a + s2) \n endl;\n  //\u67e5\u627e\n  cout \n (a.find(\ne\n)) \n endl\n\n\n\n\n\n\n\u6570\u7ec4:\n\n\u5b9a\u4e49\u683c\u5f0f:\n\u7c7b\u578b\u540d \u6570\u7ec4\u540d[\u5e38\u91cf\u8868\u8fbe\u5f0f]\n\n\n\n\n  int arr1[3] = { 1 };\n  int arr2[3];\n  void arrays() {\n      int arr3[3] = { 1 };\n      int arr4[3];\n     static int arr5[3];\n\n      int i = 0;\n      for (i = 0; i \n 3; ++i) {\n          cout \n arr1[i] \n \n\\t\n;\n      }\n      cout \n endl;\n      for (i = 0; i \n 3; ++i) {\n          cout \n arr2[i] \n \n\\t\n;\n      }\n      cout \n endl;\n      for (i = 0; i \n 3; ++i) {\n          cout \n arr3[i] \n \n\\t\n;\n      }\n      cout \n endl;\n      for (i = 0; i \n 3; ++i) {\n          cout \n arr4[i] \n \n\\t\n;\n      }\n      cout \n endl;\n      for (i = 0; i \n 3; ++i) {\n          cout \n arr5[i] \n \n\\t\n;\n      }\n\n\n\n\n\n\n\n\u5168\u5c40\u6570\u7ec4\u548c\u9759\u6001\u6570\u7ec4\u672a\u521d\u59cb\u5316\uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u4e3a\u6e05\u96f6\uff0c\u5c40\u90e8\u6570\u7ec4\u672a\u521d\u59cb\u5316\u4f1a\u51fa\u73b0\u968f\u673a\u6570\u3002\n\n\n\n\nvector\u5bb9\u5668\n\n\n\n\n  void vectors() {\n\n      vector\nint\n ve;\n      for (int i = 0; i \n 10; ++i) {\n          ve.push_back(i);\n      }\n\n      vector\nint\n::iterator p = ve.begin();\n      for (; p\nve.end(); p++) {\n        cout\n*p;\n      }\n\n  }", 
            "title": "\u57fa\u7840\u8bed\u6cd5"
        }, 
        {
            "location": "/cplus/cplus1_grammer/#c", 
            "text": "", 
            "title": "c++\u3000\u7b2c\u4e00\u7ae0 \u57fa\u7840\u8bed\u6cd5,\u63a7\u5236\u6d41\u7a0b,\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/cplus/cplus1_grammer/#_1", 
            "text": "double a=2.0", 
            "title": "\u4e00 \u5b9a\u4e49\u53d8\u91cf:"
        }, 
        {
            "location": "/cplus/cplus1_grammer/#_2", 
            "text": "if ...else      void control() {\n      int a = 10;\n      if (a   5) {\n          cout    ok    endl;\n      } else {\n          cout    not ok    endl;\n      }\n  }   switch:\u8868\u8fbe\u5f0f\u53ea\u80fd\u662f\u6574\u578b\uff0c\u5b57\u7b26\u578b\uff0c\u679a\u4e3e\u578b     void control() {\n      int a = 10;\n      if (a   5) {\n          cout    ok    endl;\n      } else {\n          cout    not ok    endl;\n      }\n  }   for..i     for (int i = 0;  i   10; ++ i) {\n          cout  hello ;\n  }   while       int test=0;\n    while (test   100) {\n      test++;\n      cout   test \\t ;\n    }", 
            "title": "\u4e8c \u63a7\u5236\u6d41\u7a0b:"
        }, 
        {
            "location": "/cplus/cplus1_grammer/#_3", 
            "text": "int ,char,bool,float,double,int[],double amp;,char*,enum \n+  \u6574\u6570\u7c7b\u578b:int  \n\u6240\u6709\u7684c++\u7f16\u8bd1\u5668\u90fd\u5e94\u8be5\u6ee1\u8db3c++\u6807\u51c6\u6240\u89c4\u5b9a\u7684\u6574\u6570\u957f\u5ea6\u5173\u7cfb\u5f0f:  char short int int long int   \u5b57\u7b26\u578b:char     char ch = 'A';\n  cout   ch   endl;  \u503c\u5f97\u6ce8\u610f\u7684\u662fASCII\u7801\u5e76\u4e0d\u662f\u6700\u7ec8\u6807\u51c6\uff0c\u6240\u4ee5\u4e3a\u4e86\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\uff0c\u4e0d\u8981\u7528\u6570\u5b57\u5bf9\u5b57\u7b26\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002   \u679a\u4e3e\u578b:enum     enum Week {\n          Mon, Tue, Wed, Thu, Fri, Sta, Sun\n      };\n  Week mon = Tue;\n  cout mon endl;  \u679a\u4e3e\u4e00\u91cf\u5b9a\u4e49\u4e0d\u80fd\u6539\u53d8\uff0c\u6240\u4ee5\u5e38\u7528\u6765\u4ee3\u66ff\u6574\u6570\u5e38\u91cf\uff0c\u4f5c\u7528\u66f4\u4f18\u7684\u662f\u5e38\u91cf\u9700\u8981\u521d\u59cb\u5316\uff0c\u800c\u679a\u4e3e\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u65e0\u987b\u5b9a\u4e49\u5176\u5b9e\u4f53\u3002    \u5e03\u5c14\u578b:bool :\u975e0\u4e3a\u771f \n\u8fd8\u6709:float,double,int[],double ,char*    c-\u4e32 \nc-\u4e32 :\u4ecec\u8bed\u8a00\u4e2d\u5ef6\u7eed\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u4ee50\u7ed3\u5c3e\u3002\u5b57\u7b26\u957f\u5ea6\u8981\u52a01.    const char str= Hello ;\nchar str= Hello ; //\u5b57\u7b26\u4e32\u5e38\u91cf\u8d4b\u4e88char\u6307\u9488\u9519\u8befdeprecated conversion from string constant to \u2018char\u2019\nchar str= Hello ; //\u6307\u9488\u5730\u5740\u8d4b\u4e88char\u7c7b\u578b\u9519\u8befinvalid conversion from \u2018const char\u2019 to \u2018char\u2019\ncout *str endl;  //Hello\ncout str endl;  //Hello\ncout str endl; //Hello\nconst char chars=  s ,chars1=  s ;\ncout (chars==chars1) endl;   //true\nchar is_char[]= s ,is_char1[] =  s ;\ncout (is_char==is_char1) endl;  //false\nstring s =  hello , s1 =  hello ;\ncout (s==s1) endl;    //true  \n\u5728\u6bd4\u8f83\u540c\u4e2a\u5b57\u7b26\u76f8\u540c\u7684c-\u4e32\u662f\u7528==\u4f1a\u4e0d\u76f8\u7b49\uff0c\u56e0\u4e3a\u662f\u6307\u5411\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u6307\u9488\u3002\u800c\u5e94\u8be5\u7528strcmp   string: \nstring\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u64cd\u4f5c\u3002\u4e0d\u50cf\u5b57\u7b26\u6307\u9488\u4e00\u6837\u86cb\u75bc\u3002     string a, s1 =  hello ;\n  string s2 =  123 ;\n  //\u6bd4\u8f83\n  cout   (a == s1)   endl; //false\n  a = s1;\n  cout   (a == s1)   endl; //true\n  //\u8fde\u63a5\n  cout   (a + s2)   endl;\n  //\u67e5\u627e\n  cout   (a.find( e ))   endl   \u6570\u7ec4: \n\u5b9a\u4e49\u683c\u5f0f: \u7c7b\u578b\u540d \u6570\u7ec4\u540d[\u5e38\u91cf\u8868\u8fbe\u5f0f]     int arr1[3] = { 1 };\n  int arr2[3];\n  void arrays() {\n      int arr3[3] = { 1 };\n      int arr4[3];\n     static int arr5[3];\n\n      int i = 0;\n      for (i = 0; i   3; ++i) {\n          cout   arr1[i]    \\t ;\n      }\n      cout   endl;\n      for (i = 0; i   3; ++i) {\n          cout   arr2[i]    \\t ;\n      }\n      cout   endl;\n      for (i = 0; i   3; ++i) {\n          cout   arr3[i]    \\t ;\n      }\n      cout   endl;\n      for (i = 0; i   3; ++i) {\n          cout   arr4[i]    \\t ;\n      }\n      cout   endl;\n      for (i = 0; i   3; ++i) {\n          cout   arr5[i]    \\t ;\n      }   \u5168\u5c40\u6570\u7ec4\u548c\u9759\u6001\u6570\u7ec4\u672a\u521d\u59cb\u5316\uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u4e3a\u6e05\u96f6\uff0c\u5c40\u90e8\u6570\u7ec4\u672a\u521d\u59cb\u5316\u4f1a\u51fa\u73b0\u968f\u673a\u6570\u3002   vector\u5bb9\u5668     void vectors() {\n\n      vector int  ve;\n      for (int i = 0; i   10; ++i) {\n          ve.push_back(i);\n      }\n\n      vector int ::iterator p = ve.begin();\n      for (; p ve.end(); p++) {\n        cout *p;\n      }\n\n  }", 
            "title": "\u4e09 \u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/cplus/cplus2_class/", 
            "text": "c++ \u7b2c\u4e8c\u7ae0 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\n\n\n\u4e00 \u7c7b\n\n\n\n\n\u7c7b\u540e\u9762\u8981\u52a0\u4e0a\u5206\u53f7\n\n\n\n\nStudent{\nprivate:\n    int age;\n    int sex;\npublic:\n    void setAge(int age);\n    void printAge();\n};\n\n\n\n\n\n\n\u4e00\u822c\u4e3a\u4e86\u66f4\u597d\u7ec4\u7ec7\u4ee3\u7801\uff0c\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7c7b\u58f0\u660e\uff0c\u5728cpp\u4e2d\u5b9e\u73b0\u7c7b\u5b9a\u4e49\nStudent.h\n\n\n\n\nStudent{\nprivate:\n    int age;\n    int sex;\npublic:\n    void setAge(int age);\n    void printAge();\n    void friend  friends(Student \namp;a);\n\n};\n\n\n\n\n#include \nstdio.h\n\n#include \nstdafx.h\n\nvoid  Student::setAge(int ages){\n    age = ages;\n}\nvoid Student::printAge(){\n    printf(\n%d\n,age);\n}\nvoid  friends(Student \namp;stu){\n    printf(\n%d\n,stu.age);\n}\n\n\n\n\n\n\n\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\n\u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c :\u7c7b\u540d();\n\u6790\u6784\u51fd\u6570\u58f0\u660e : ~\u7c7b\u540d();\n\n\n\n\n#ifndef  _SCHOOL_BOY_H_\n#define  _SCHOOL_BOY_H_\n#include \nStudent.h\n\n SchoolBoy: public Student{\npublic:\n     void sayHi();\n     SchoolBoy();\n     ~SchoolBoy();\n\n};\n#endif\n\n\n\n\n#include \nstdafx.h\n\n#include \nSchoolBoy.h\n\n#include \niostream\n\n\nSchoolBoy::SchoolBoy(){\n    printf(\n%s\\n\n,\ninit schoolboy\n);\n}\n\nSchoolBoy::~SchoolBoy(){\n        std::cout\nbye\\n\n;\n}\n\nvoid SchoolBoy::sayHi(){\n    printf(\n%s\\n\n,\nhi\n);\n}\n\n\n\n\n\u4e8c \u53cb\u5143\n\n\n\u662f\u4e00\u79cd\u5b9a\u4e49\u5728\u7c7b\u5916\u90e8\u7684\u666e\u901a\u51fd\u6570\u6216\u7c7b\uff0c\u4f46\u5b83\u9700\u8981\u5728\u7c7b\u4f53\u5185\u8fdb\u884c\u8bf4\u660e\uff0c\u4e3a\u4e86\u4e0e\u8be5\u7c7b\u7684\u6210\u5458\u51fd\u6570\u52a0\u4ee5\u533a\u522b\uff0c\u5728\u8bf4\u660e\u65f6\u524d\u9762\u52a0\u4ee5\u5173\u952e\u5b57friend\u3002\u53cb\u5143\u4e0d\u662f\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\u3002\u53cb\u5143\u7684\u4f5c\u7528\u5728\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u662f\uff0c\u5b83\u7834\u574f\u4e86\u7c7b\u7684\u5c01\u88c5\u6027\u548c\u9690\u85cf\u6027\uff0c\u4f7f\u5f97\u975e\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6210\u5458\n\n\n1.\n\u53cb\u5143\u51fd\u6570\n\n \u8bed\u6cd5\u4e0e\u666e\u901a\u51fd\u6570\u76f8\u540c\uff0c\u8c03\u7528\u4e5f\u76f8\u540c\uff0c\u4e0e\u6210\u5458\u51fd\u6570\u4e0d\u540c\u7684\u662f\u5b83\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b,\u4f46\u5b83\u80fd\u591f\u5f15\u7528\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\u3002\u5982 \nvoid friend friends(Student \namp;a);\n\u8fd9\u4e2a\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95eeStudent\u7684\u79c1\u6709\u6210\u5458age.\n\n\n2.\n\u53cb\u5143\u7c7b\n\n \u53cb\u5143\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u7684\u9690\u85cf\u4fe1\u606f\uff08\u5305\u62ec\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\uff09\u3002\u5f53\u5e0c\u671b\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b58\u53d6\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\u65f6\uff0c\u53ef\u4ee5\u5c06\u8be5\u7c7b\u58f0\u660e\u4e3a\u53e6\u4e00\u7c7b\u7684\u53cb\u5143\u7c7b\u3002\u5b9a\u4e49\u53cb\u5143\u7c7b\u7684\u8bed\u53e5\u683c\u5f0f\u5982\u4e0b\uff1a friend class \u7c7b\u540d;\n \u5176\u4e2d\uff1afriend\u548cclass\u662f\u5173\u952e\u5b57\uff0c\u7c7b\u540d\u5fc5\u987b\u662f\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e2a\u5df2\u5b9a\u4e49\u8fc7\u7684\u7c7b\u3002\n \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8bed\u53e5\u8bf4\u660e\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\u7c7b\uff1a\n\n\n class A\n {\n     public:\n     friend class B;\n };\n\n\n\n\n\u7ecf\u8fc7\u4ee5\u4e0a\u8bf4\u660e\u540e\uff0c\u7c7bB\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u7c7bA\u7684\u53cb\u5143\u51fd\u6570\uff0c\u80fd\u5b58\u53d6\u7c7bA\u7684\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u3002\n\n\n3.\n\u4f7f\u7528\u53cb\u5143\u7c7b\u65f6\u6ce8\u610f\uff1a\n\n\n\n\n\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002\n\n\n\u53cb\u5143\u5173\u7cfb\u662f\u5355\u5411\u7684\uff0c\u4e0d\u5177\u6709\u4ea4\u6362\u6027\u3002\u82e5\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u7c7bA\u4e0d\u4e00\u5b9a\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u8981\u770b\u5728\u7c7b\u4e2d\u662f\u5426\u6709\u76f8\u5e94\u7684\u58f0\u660e\u3002\n\n\n\u53cb\u5143\u5173\u7cfb\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u82e5\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u7c7bC\u662fB\u7684\u53cb\u5143\uff0c\u7c7bC\u4e0d\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u540c\u6837\u8981\u770b\u7c7b\u4e2d\u662f\u5426\u6709\u76f8\u5e94\u7684\u7533\u660e\n\n\n\n\n4.\n\u6210\u5458\u8bbf\u95ee\u63a7\u5236\u7b26\n\n\n\n\npublic\n:\u65e0\u4efb\u4f55\u9650\u5236\n\n\nprivate\n:\u53ea\u80fd\u88ab\u7c7b\u58f0\u660e\u4e2d\u7684\u6210\u5458\u51fd\u6570\u548c\u53cb\u5143\u8bbf\u95ee\u3002\n\n\nprotected\n:\u53ef\u4ee5\u88ab1.\u8be5\u7c7b\u4e2d\u7684\u51fd\u6570\u30012.\u5176\u53cb\u5143\u51fd\u6570\u8bbf\u95ee 3.\u5b50\u7c7b\u7684\u51fd\u6570\u3002\u4f46\u4e0d\u80fd\u88ab\u8be5\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee.\n\n\n\n\n\u4e09 \n\u7ee7\u627f\n\n\n \u4f7f\u7528\n:\n \u6765\u8868\u793a\u7ee7\u627f,\u591a\u91cd\u7ee7\u627f\u7528\n,\n\u53f7\u6765\u9694\u5f00\n\n\n#ifndef  _SCHOOL_BOY_H_\n#define  _SCHOOL_BOY_H_\n#include \nStudent.h\n\n SchoolBoy: public Student{\npublic:\n     void sayHi();\n};\n#endif // _SCHOOL_BOY_H_\n\n\n\n\n\u6d3e\u751f\u7c7b\u7ee7\u627f\u8bbf\u95ee\u6743\u9650\n\n\n1.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fpublic\uff0c\u90a3\u4e48\n\n\n\n\n\u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684public\u6210\u5458\uff0c\u5141\u8bb8\u7c7b\u4ee5\u5916\u7684\u4ee3\u7801\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\n\n\n\u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b\n\n\n\u7236\u7c7b\u7684protected\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b\n\n\n\n\n2.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fprivate\uff0c\u90a3\u4e48\n\n\n\n\n\u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684private\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b\n\n\n\u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b\n\n\n\u7236\u7c7b\u7684protected\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684private\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b\n\n\n\n\n3.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fprotected\uff0c\u90a3\u4e48\n\n\n\n\n\u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b\n\n\n\u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b\n\n\n\u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b", 
            "title": "\u7c7b"
        }, 
        {
            "location": "/cplus/cplus2_class/#c", 
            "text": "", 
            "title": "c++ \u7b2c\u4e8c\u7ae0 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"
        }, 
        {
            "location": "/cplus/cplus2_class/#_1", 
            "text": "\u7c7b\u540e\u9762\u8981\u52a0\u4e0a\u5206\u53f7   Student{\nprivate:\n    int age;\n    int sex;\npublic:\n    void setAge(int age);\n    void printAge();\n};   \u4e00\u822c\u4e3a\u4e86\u66f4\u597d\u7ec4\u7ec7\u4ee3\u7801\uff0c\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7c7b\u58f0\u660e\uff0c\u5728cpp\u4e2d\u5b9e\u73b0\u7c7b\u5b9a\u4e49\nStudent.h   Student{\nprivate:\n    int age;\n    int sex;\npublic:\n    void setAge(int age);\n    void printAge();\n    void friend  friends(Student  amp;a);\n\n};  #include  stdio.h \n#include  stdafx.h \nvoid  Student::setAge(int ages){\n    age = ages;\n}\nvoid Student::printAge(){\n    printf( %d ,age);\n}\nvoid  friends(Student  amp;stu){\n    printf( %d ,stu.age);\n}   \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\n\u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c :\u7c7b\u540d();\n\u6790\u6784\u51fd\u6570\u58f0\u660e : ~\u7c7b\u540d();   #ifndef  _SCHOOL_BOY_H_\n#define  _SCHOOL_BOY_H_\n#include  Student.h \n SchoolBoy: public Student{\npublic:\n     void sayHi();\n     SchoolBoy();\n     ~SchoolBoy();\n\n};\n#endif  #include  stdafx.h \n#include  SchoolBoy.h \n#include  iostream \n\nSchoolBoy::SchoolBoy(){\n    printf( %s\\n , init schoolboy );\n}\n\nSchoolBoy::~SchoolBoy(){\n        std::cout bye\\n ;\n}\n\nvoid SchoolBoy::sayHi(){\n    printf( %s\\n , hi );\n}", 
            "title": "\u4e00 \u7c7b"
        }, 
        {
            "location": "/cplus/cplus2_class/#_2", 
            "text": "\u662f\u4e00\u79cd\u5b9a\u4e49\u5728\u7c7b\u5916\u90e8\u7684\u666e\u901a\u51fd\u6570\u6216\u7c7b\uff0c\u4f46\u5b83\u9700\u8981\u5728\u7c7b\u4f53\u5185\u8fdb\u884c\u8bf4\u660e\uff0c\u4e3a\u4e86\u4e0e\u8be5\u7c7b\u7684\u6210\u5458\u51fd\u6570\u52a0\u4ee5\u533a\u522b\uff0c\u5728\u8bf4\u660e\u65f6\u524d\u9762\u52a0\u4ee5\u5173\u952e\u5b57friend\u3002\u53cb\u5143\u4e0d\u662f\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\u3002\u53cb\u5143\u7684\u4f5c\u7528\u5728\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u662f\uff0c\u5b83\u7834\u574f\u4e86\u7c7b\u7684\u5c01\u88c5\u6027\u548c\u9690\u85cf\u6027\uff0c\u4f7f\u5f97\u975e\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6210\u5458  1. \u53cb\u5143\u51fd\u6570 \n \u8bed\u6cd5\u4e0e\u666e\u901a\u51fd\u6570\u76f8\u540c\uff0c\u8c03\u7528\u4e5f\u76f8\u540c\uff0c\u4e0e\u6210\u5458\u51fd\u6570\u4e0d\u540c\u7684\u662f\u5b83\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b,\u4f46\u5b83\u80fd\u591f\u5f15\u7528\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\u3002\u5982  void friend friends(Student  amp;a); \u8fd9\u4e2a\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95eeStudent\u7684\u79c1\u6709\u6210\u5458age.  2. \u53cb\u5143\u7c7b \n \u53cb\u5143\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u7684\u9690\u85cf\u4fe1\u606f\uff08\u5305\u62ec\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\uff09\u3002\u5f53\u5e0c\u671b\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b58\u53d6\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\u65f6\uff0c\u53ef\u4ee5\u5c06\u8be5\u7c7b\u58f0\u660e\u4e3a\u53e6\u4e00\u7c7b\u7684\u53cb\u5143\u7c7b\u3002\u5b9a\u4e49\u53cb\u5143\u7c7b\u7684\u8bed\u53e5\u683c\u5f0f\u5982\u4e0b\uff1a friend class \u7c7b\u540d;\n \u5176\u4e2d\uff1afriend\u548cclass\u662f\u5173\u952e\u5b57\uff0c\u7c7b\u540d\u5fc5\u987b\u662f\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e2a\u5df2\u5b9a\u4e49\u8fc7\u7684\u7c7b\u3002\n \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8bed\u53e5\u8bf4\u660e\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\u7c7b\uff1a   class A\n {\n     public:\n     friend class B;\n };  \u7ecf\u8fc7\u4ee5\u4e0a\u8bf4\u660e\u540e\uff0c\u7c7bB\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u7c7bA\u7684\u53cb\u5143\u51fd\u6570\uff0c\u80fd\u5b58\u53d6\u7c7bA\u7684\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u3002  3. \u4f7f\u7528\u53cb\u5143\u7c7b\u65f6\u6ce8\u610f\uff1a   \u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002  \u53cb\u5143\u5173\u7cfb\u662f\u5355\u5411\u7684\uff0c\u4e0d\u5177\u6709\u4ea4\u6362\u6027\u3002\u82e5\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u7c7bA\u4e0d\u4e00\u5b9a\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u8981\u770b\u5728\u7c7b\u4e2d\u662f\u5426\u6709\u76f8\u5e94\u7684\u58f0\u660e\u3002  \u53cb\u5143\u5173\u7cfb\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u82e5\u7c7bB\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u7c7bC\u662fB\u7684\u53cb\u5143\uff0c\u7c7bC\u4e0d\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143\uff0c\u540c\u6837\u8981\u770b\u7c7b\u4e2d\u662f\u5426\u6709\u76f8\u5e94\u7684\u7533\u660e   4. \u6210\u5458\u8bbf\u95ee\u63a7\u5236\u7b26   public :\u65e0\u4efb\u4f55\u9650\u5236  private :\u53ea\u80fd\u88ab\u7c7b\u58f0\u660e\u4e2d\u7684\u6210\u5458\u51fd\u6570\u548c\u53cb\u5143\u8bbf\u95ee\u3002  protected :\u53ef\u4ee5\u88ab1.\u8be5\u7c7b\u4e2d\u7684\u51fd\u6570\u30012.\u5176\u53cb\u5143\u51fd\u6570\u8bbf\u95ee 3.\u5b50\u7c7b\u7684\u51fd\u6570\u3002\u4f46\u4e0d\u80fd\u88ab\u8be5\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee.", 
            "title": "\u4e8c \u53cb\u5143"
        }, 
        {
            "location": "/cplus/cplus2_class/#_3", 
            "text": "\u4f7f\u7528 :  \u6765\u8868\u793a\u7ee7\u627f,\u591a\u91cd\u7ee7\u627f\u7528 , \u53f7\u6765\u9694\u5f00  #ifndef  _SCHOOL_BOY_H_\n#define  _SCHOOL_BOY_H_\n#include  Student.h \n SchoolBoy: public Student{\npublic:\n     void sayHi();\n};\n#endif // _SCHOOL_BOY_H_", 
            "title": "\u4e09 \u7ee7\u627f"
        }, 
        {
            "location": "/cplus/cplus2_class/#_4", 
            "text": "1.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fpublic\uff0c\u90a3\u4e48   \u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684public\u6210\u5458\uff0c\u5141\u8bb8\u7c7b\u4ee5\u5916\u7684\u4ee3\u7801\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458  \u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b  \u7236\u7c7b\u7684protected\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b   2.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fprivate\uff0c\u90a3\u4e48   \u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684private\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b  \u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b  \u7236\u7c7b\u7684protected\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684private\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b   3.\u5982\u679c\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65f6\u4f7f\u7528\u7684\u7ee7\u627f\u9650\u5b9a\u7b26\u662fprotected\uff0c\u90a3\u4e48   \u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b  \u7236\u7c7b\u7684private\u6210\u5458\u4ecd\u65e7\u662f\u7236\u7c7b\u7684private\u6210\u5458\uff0c\u5b50\u7c7b\u6210\u5458\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff1b  \u7236\u7c7b\u7684public\u6210\u5458\u6210\u4e3a\u5b50\u7c7b\u7684protected\u6210\u5458\uff0c\u53ea\u5141\u8bb8\u5b50\u7c7b\u6210\u5458\u8bbf\u95ee\uff1b", 
            "title": "\u6d3e\u751f\u7c7b\u7ee7\u627f\u8bbf\u95ee\u6743\u9650"
        }, 
        {
            "location": "/cplus/cplus3_memory/", 
            "text": "C++ \u7b2c\u4e09\u7ae0 \u5185\u5b58\u5206\u914d\u65b9\u5f0f\u53ca\u6307\u9488\n\n\n\u4e00  c++\u5185\u5b58\u5206\u914d\u65b9\u5f0f\n\n\n\u5728c++\u4e2d\uff0c\u5185\u5b58\u5206\u914d\u4e3a5\u4e2a\u533a,\u5206\u522b\u4e3a\u6808,\u5806,\u81ea\u7531\u5b58\u50a8\u533a,\u9759\u6001\u6570\u636e\u533a,\u5e38\u91cf\u5b58\u50a8\u533a. \n\u6808\n\uff0c\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e,\u91cc\u9762\u7684\u53d8\u91cf\u901a\u5e38\u662f\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u7b49\u3002\n\n\n\n\n\u5806\n\uff0c\u5c31\u662f\u90a3\u4e9b\u7531 \nnew\n\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u4eec\u7684\u91ca\u653e\u7f16\u8bd1\u5668\u4e0d\u53bb\u7ba1\uff0c\u7531\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53bb\u63a7\u5236\uff0c\u4e00\u822c\u4e00\u4e2a\nnew\n\u5c31\u8981\u5bf9\u5e94\u4e00\u4e2a \ndelete\n\u3002\u5982\u679c\u7a0b\u5e8f\u5458\u6ca1\u6709\u91ca\u653e\u6389\uff0c\u90a3\u4e48\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u6536\u3002\u5806\u53ef\u4ee5\u52a8\u6001\u5730\u6269\u5c55\u548c\u6536\u7f29\u3002\n\n\n\u81ea\u7531\u5b58\u50a8\u533a\n\uff0c\u5c31\u662f\u90a3\u4e9b\u7531\nmalloc\n\u7b49\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u548c\u5806\u662f\u5341\u5206\u76f8\u4f3c\u7684\uff0c\u4e0d\u8fc7\u5b83\u662f\u7528\nfree\n \u6765\u7ed3\u675f\u81ea\u5df1\u7684\u751f\u547d\u7684\n\n\n\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\n\uff0c\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u88ab\u5206\u914d\u5230\u540c\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u5728\u4ee5\u524d\u7684 C \u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff08\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\uff0c\u540c\u65f6\u672a\u88ab\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u5b58\u50a8\u533a\u53ef\u4ee5\u901a\u8fc7 \nvoid*\n\u6765\u8bbf\u95ee\u548c\u64cd\u7eb5\uff0c\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u81ea\u884c\u91ca\u653e\uff09\uff0c\u5728 C++ \u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002\n\n\n\u5e38\u91cf\u5b58\u50a8\u533a\n\uff0c\u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u4ed6\u4eec\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\uff08\u5f53\u7136\uff0c\u4f60\u8981\u901a\u8fc7\u975e\u6b63\u5f53\u624b\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539\uff0c\u800c\u4e14\u65b9\u6cd5\u5f88\u591a\uff09\n\n\n\n\n\u4e8c \u5806\u548c\u6808\u7a76\u7adf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\n\n\u4e3b\u8981\u7684\u533a\u522b\u7531\u4ee5\u4e0b\u51e0\u70b9:\n\n\n\n\n\u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c\n\n\n\u7a7a\u95f4\u5927\u5c0f\u4e0d\u540c\n\n\n\u80fd\u5426\u4ea7\u751f\u788e\u7247\u4e0d\u540c\n\n\n\u751f\u957f\u65b9\u5411\u4e0d\u540c\n\n\n\u5206\u914d\u65b9\u5f0f\u4e0d\u540c\n\n\n\n\n\u5206\u914d\u6548\u7387\u4e0d\u540c\n\n\n\n\n\n\n\u7ba1\u7406\u65b9\u5f0f\n\uff1a\n\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u63a7\u5236\uff1b\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u91ca\u653e\u5de5\u4f5c\u7531\u7a0b\u5e8f\u5458\u63a7\u5236\uff0c\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u6cc4\u9732.\n\n\n\n\n\u7a7a\u95f4\u5927\u5c0f\n\uff1a\u5806\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u57fa\u672c\u65e0\u9650\u5236\uff0c\u6808\u7684\u7533\u8bf7\u5185\u5b58\u57281M\u5de6\u53f3\n\n\n\u788e\u7247\u95ee\u9898\n\uff1a\u5806\u4e0a\u7684\u5185\u5b58\u5206\u914d\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u6bcf\u6b21\nnew\n\u548c\ndelete\n\u4f1a\u5bfc\u81f4\u7a7a\u95f4\u7684\u4e0d\u8fde\u7eed\uff0c\u800c\u6808\u7ed3\u6784\u662f\u5148\u8fdb\u540e\u51fa\u4e0d\u4f1a\u6709\u8fd9\u79cd\u7ed3\u679c\u3002\n\n\n\u751f\u957f\u65b9\u5411\n\uff1a\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u589e\u52a0\u7684\u65b9\u5411\uff1b\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5b83\u7684\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411\u589e\u957f\u3002\n\n\n\u5206\u914d\u65b9\u5f0f\n\uff1a\u5806\u90fd\u662f\u52a8\u6001\u5206\u914d\u7684\uff0c\u6ca1\u6709\u9759\u6001\u5206\u914d\u7684\u5806\u3002\u6808\u67092\u79cd\u5206\u914d\u65b9\u5f0f\uff1a\u9759\u6001\u5206\u914d\u548c\u52a8\u6001\u5206\u914d\u3002\u9759\u6001\u5206\u914d\u662f\u7f16\u8bd1\u5668\u5b8c\u6210\u7684\uff0c\u6bd4\u5982\u5c40\u90e8\u53d8\u91cf\u7684\u5206\u914d\u3002\u52a8\u6001\u5206\u914d\u7531 \nmalloc\n \u51fd\u6570\u8fdb\u884c\u5206\u914d\uff0c\u4f46\u662f\u6808\u7684\u52a8\u6001\u5206\u914d\u548c\u5806\u662f\u4e0d\u540c\u7684\uff0c\u4ed6\u7684\u52a8\u6001\u5206\u914d\u662f\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u91ca\u653e\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u5b9e\u73b0\u3002\n\n\n\u5206\u914d\u6548\u7387\n\uff1a\u6808\u662f\u673a\u5668\u7cfb\u7edf\u63d0\u4f9b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba1\u7b97\u673a\u4f1a\u5728\u5e95\u5c42\u5bf9\u6808\u63d0\u4f9b\u652f\u6301\uff1a\u5206\u914d\u4e13\u95e8\u7684\u5bc4\u5b58\u5668\u5b58\u653e\u6808\u7684\u5730\u5740\uff0c\u538b\u6808\u51fa\u6808\u90fd\u6709\u4e13\u95e8\u7684\u6307\u4ee4\u6267\u884c\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u6808\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\u5806\u5219\u662f C/C++ \u51fd\u6570\u5e93\u63d0\u4f9b\u7684\uff0c\u5b83\u7684\u673a\u5236\u662f\u5f88\u590d\u6742\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u5e93\u51fd\u6570\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u7b97\u6cd5\uff08\u5177\u4f53\u7684\u7b97\u6cd5\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u7ed3\u6784/\u64cd\u4f5c\u7cfb\u7edf\uff09\u5728\u5806\u5185\u5b58\u4e2d\u641c\u7d22\u53ef\u7528\u7684\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff08\u53ef\u80fd\u662f\u7531\u4e8e\u5185\u5b58\u788e\u7247\u592a\u591a\uff09\uff0c\u5c31\u6709\u53ef\u80fd\u8c03\u7528\u7cfb\u7edf\u529f\u80fd\u53bb\u589e\u52a0\u7a0b\u5e8f\u6570\u636e\u6bb5\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u6709\u673a\u4f1a\u5206\u5230\u8db3\u591f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7136\u540e\u8fdb\u884c\u8fd4\u56de\u3002\u663e\u7136\uff0c\u5806\u7684\u6548\u7387\u6bd4\u6808\u8981\u4f4e\u5f97\u591a\u3002\n\n\n\n\n\u4e09  \u6307\u9488 \u5f15\u7528 \u503c\n\n\n\u5b9a\u4e49\n\n\n\n\n\u6307\u9488\u5b9a\u4e49: \nint * p;\n\n\n\u5b9a\u4e49\u53d8\u91cf: \nint p;\n\n\n\u5b9a\u4e49\u5f15\u7528:\n\n\n\n\nint p=p;int a=6; int b; //\u6307\u9488\nb=\na; //\u5730\u5740\u4f20\u9012\ncout\na\nendl; //\u5730\u57400034FBBC\ncout\na\nendl; //\u503c 6\ncout\nb\nendl; //\u5730\u57400034FBBC\ncout\nb\nendl;//\u503c 6\ncout\n(b==\na)\nendl; //true \u5730\u5740\u76f8\u540c\nb=7; //\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u7a7a\u95f4\u7684\u503c\ncout\na\nendl; //\u503c 7\ncout\nb\nendl;//\u503c 7\nint \nc= a; //\u5b9a\u4e49\u5f15\u7528\ncout\nc\nendl;//\u503c7\ncout\nc\nendl; //\u5730\u57400034FBBC\nint d=0; b=\nd;\ncout\n*b\nendl;//\u503c0\ncout\nb\nendl; //\u5730\u57400038FBC0\n\n\n\n\n \u5f15\u7528\u4e0e\u6307\u9488\u533a\u522b\n\n\n\n\n\u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c\u6307\u9488\u53ef\u4ee5\u5148\u58f0\u660e\u540e\u521d\u59cb\u5316\u3002\n\n\n\u5f15\u7528\u4e0d\u80fd\u6709NULL\u5f15\u7528\uff0c\u6307\u9488\u53ef\u4ee5\u4e3aNULL\n\n\n\u5f15\u7528\u4e00\u5b9a\u521d\u59cb\u5316\u4e0d\u80fd\u518d\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u5bf9\u8c61\u3002\n\n\n\u5f15\u7528\u4e0d\u5360\u5185\u5b58\uff0c\u53ea\u662f\u53d8\u91cf\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u6307\u9488\u4f1a\u5728\u6808\u533a\u5f00\u8f9f\u4e00\u4e2a4byte\u7684\u5185\u5b58\u533a\u3002\n\n\n\n\n\u56fe\u793a\u6307\u9488\u5185\u5b58\u5206\u5e03:\n\n\n\n\nc++ \u4f20\u503c\uff0c\u4f20\u5740\uff0c\u4f20\u5f15\u7528\n\n\nvoid swap(int a,int b);\nvoid swap2(int \namp;x,int \namp;y);\nvoid swap3(int*  a,int* b);\nint _tmain(int argc, _TCHAR* argv[])\n{\n\n    int a=1,b=2;\n    swap(a,b); //\u4f20\u503c ,\u53c2\u6570\u4e3a\u503c\u62f7\u8d1d,\u5916\u90e8\u53d8\u91cf\u4e0d\u4f1a\u6539\u53d8\u503c\n    cout\na\nendl; //1\n    cout\nb\nendl;//2\n    int \namp;m= a;\n    int  \namp;n = b;\n    swap2(m,n); //\u4f20\u5f15\u7528,\u503c\u6539\u53d8\n    cout\na\nendl; //2\n    cout\nb\nendl; //1\n    int *k= \namp;a;\n    int  *j = \namp;b;\n    swap3(k,j);//\u4f20\u6307\u9488,\u503c\u6539\u53d8\n    cout\na\nendl;//1\n    cout\nb\nendl;//2\n\n    return 0;\n}\n\nvoid swap(int a,int b){\n    int temp = a;\n    a = b;\n    b=a;\n}\nvoid swap2(int \namp;x,int \namp;y)\n{\n    int temp;\n    temp=x;\n    x=y;\n    y=temp;\n}\nvoid swap3(int*  a,int* b){\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\n\n\n\njava\u7684\u4f20\u503c\uff0c\u4f20\u5f15\u7528\n\n\npublic class Test {\n\n    /**\n     * @param ss\n     */\n    public static void main(String[] ss) {\n        int a = 1;\n        int b = 2;\n        change(a, b);\n        System.out.println(a);//1\n        System.out.println(b);//2\n\n        String m = new String(\nm\n);\n        String n = new String(\nn\n);\n        change2(m, n);\n        System.out.println(m);//m\n        System.out.println(n);//n\n    }\n\n    private static void change2(String pa1, String pa2) {\n        String temp = pa1;\n        pa1= pa2;\n        pa2= temp;\n    }\n\n    private static void change(int a, int b) {\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n}\n\n\n\n\njava\u7684\u4f20\u503c\u4f20\u5f15\u7528\u90fd\u4e0d\u4f1a\u6539\u53d8,\u4ea4\u6362\u4e24\u4e2a\u5f15\u7528\u53c2\u6570\u4e0d\u53d8\u539f\u56e0\u5982\u4e0b:\n\n\n\n\nm,n\u4e3a\u5916\u90e8\u53d8\u91cfnew\u4e4b\u540e\u5728\u5806\u533a\u4ea7\u751f\u4e24\u4e2a\u5185\u5b58\u533a\u3002chang2\u65b9\u6cd5\u6240\u505a\u7684\u662f\u590d\u5236\u5f15\u7528\uff0c\u5c06\u590d\u5236\u7684\u5f15\u7528\u6307\u5411\u5bf9\u8c61\u6539\u53d8\u4e86\uff0c\u5916\u90e8\u53d8\u91cfm,n\u5374\u6ca1\u6709\u53d1\u751f\u6307\u5411\u6539\u53d8.\n\n\n\u56db c++\u5e38\u89c1\u5185\u5b58\u9519\u8bef\n\n\n\n\n\u5185\u5b58\u5206\u914d\u672a\u6210\u529f\uff0c\u5374\u4f7f\u7528\u4e86\u5b83 ,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u5185\u5b58\u4e4b\u524d\u662f\u68c0\u6d4b\u4e00\u4e0b\u6307\u9488\u662f\u5426\u4e3aNULL\n\n\n\n\nt = (struct btree *)malloc(sizeof(struct btree));\nif (t == NULL) {\n    printf(\n\u5185\u5b58\u5206\u914d\u5931\u8d25!\\n\n);\n    exit(EXIT_FAILURE);\n}\n\n\n\n\n\n\n\u6ca1\u6709\u521d\u59cb\u5316\u7684\u6982\u5ff5\n\n\n\u8bef\u8ba4\u4e3a\u5185\u5b58\u7684\u7f3a\u7701\u521d\u503c\u5168\u4e3a0,\u5bfc\u81f4\u5f15\u7528\u521d\u503c\u9519\u8bef ,java\u7684\u4f1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6210\u5458\u53d1\u751f\u4f1a\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u503c\u3002\n\n\n\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff0c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\n\n\n\u542b\u6709\u8fd9\u79cd\u9519\u8bef\u7684\u51fd\u6570\u6bcf\u88ab\u8c03\u7528\u4e00\u6b21\u5c31\u4e22\u5931\u4e00\u5757\u5185\u5b58\u3002\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5185\u5b58\u5145\u8db3\uff0c\u4f60\u770b\u4e0d\u5230\u9519\u8bef\u3002\u7ec8\u6709\u4e00\u6b21\u7a0b\u5e8f\u7a81\u7136\u6b7b\u6389\uff0c\u7cfb\u7edf\u51fa\u73b0\u63d0\u793a:\u5185\u5b58\u8017\u5c3d\n \u52a8\u6001\u5185\u5b58\u7684\u7533\u8bf7\u4e0e\u91ca\u653e\u5fc5\u987b\u914d\u5bf9\uff0c\u7a0b\u5e8f\u4e2dmalloc\u548cfree\u7684\u4f7f\u7528\u6b21\u6570\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u80af\u5b9a\u6709\u9519\u8bef\n\n\n\u91ca\u653e\u4e86\u5185\u5b58\u5374\u7ee7\u7eed\u4f7f\u7528\u5b83\n \u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u8c03\u7528\u5173\u7cfb\u8fc7\u4e8e\u590d\u6742\uff0c\u5b9e\u5728\u96be\u4ee5\u641e\u6e05\u695a\u67d0\u4e2a\u5bf9\u8c61\u7a76\u7adf\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u6b64\u65f6\u5e94\u8be5\u91cd\u65b0\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u5bf9\u8c61\u7ba1\u7406\u7684\u6df7\u4e71\u5c40\u9762\n\n\n\u51fd\u6570\u7684reture\u8bed\u53e5\u5199\u9519\u4e86\uff0c\u6ce8\u610f\u4e0d\u8981\u8fd4\u56de\u6307\u5411\"\u6808\u5185\u5b58\"\u7684\u201c\u6307\u9488\u201d\u6216\u8005\u201c\u5f15\u7528\u201d\uff0c\u56e0\u4e3a\u8be5\u5185\u5b58\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u65f6\u88ab\u81ea\u52a8\u9500\u6bc1\n\n\n\n\n// ConsoleApplication2.cpp : \u5b9a\u4e49\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\n//\n\n#include \nstdafx.h\n\n#include \nvld.h\n\n#include \nStudent.h\n\n#include \niostream\n\nusing namespace std;\n\nStudent* func3();\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    Student*  dss = func3();\n    cout\n(dss==NULL)\nendl;  delete dss;//\u6307\u9488ptr\u6307\u5411\u4e86\u4e00\u4e2a\u53ef\u80fd\u5df2\u7ecf\u65e0\u6548\u7684\u5730\u5740\uff0c\u5371\u9669\n    return 0;\n}\n\nStudent* func3()\n{\n    Student my;        //\u5bf9\u8c61my\u5b58\u653e\u5728\u685f\u4e0a\uff0c\u9000\u51fa\u51fd\u6570\u4f53\u4ee5\u540e\u6539\u5730\u5740\u5c31\u53ef\u80fd\u65e0\u6548\u4e86\u3002  Student* ptr = \namp;my;   //\u6307\u9488ptr\u6307\u5411\u4e86\u4e00\u4e2a\u53ef\u80fd\u5df2\u7ecf\u65e0\u6548\u7684\u5730\u5740\uff0c\u5371\u9669\u3002  //cout\nptr\nendl;\n    return ptr;\n}\n\n\n\n\n\n\n\u4f7f\u7528\nfree\n\u6216\ndelete\n\u91ca\u653e\u4e86\u5185\u5b58\u540e\uff0c\u6ca1\u6709\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\u3002\u5bfc\u81f4\u4ea7\u751f\u201c\u91ce\u6307\u9488\u201d\n\u89c4\u5219\n\n\n\u7528\nmalloc\n\u6216\nnew\n\u7533\u8bf7\u5185\u5b58\u4e4b\u540e\uff0c\u5e94\u8be5\u7acb\u5373\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3aNULL\u3002\u9632\u6b62\u4f7f\u7528\u6307\u9488\u4e3aNULL\u7684\u5185\u5b58\n\n\n\u4e0d\u8981\u5fd8\u8bb0\u4e3a\u6570\u7ec4\u548c\u52a8\u6001\u5185\u5b58\u8d4b\u521d\u503c\u3002\u9632\u6b62\u5c06\u672a\u88ab\u521d\u59cb\u5316\u7684\u5185\u5b58\u4f5c\u4e3a\u53f3\u503c\u4f7f\u7528\n\n\n\u907f\u514d\u6570\u7ec4\u6216\u8005\u6307\u9488\u7684\u4e0b\u6807\u8d8a\u754c\uff0c\u7279\u522b\u8981\u5f53\u5fc3\u53d1\u751f\u201c\u591a1\u201d\u6216\u8005\u201c\u5c111\u201d\u7684\u64cd\u4f5c\n\n\n\u52a8\u6001\u5185\u5b58\u7684\u7533\u8bf7\u4e0e\u91ca\u653e\u5fc5\u987b\u914d\u5bf9\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\n\n\n\u7528\nfree\n\u6216\ndelete\n\u91ca\u653e\u5185\u5b58\u4e4b\u540e\uff0c\u7acb\u5373\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\uff0c\u9632\u6b62\u4ea7\u751f\u201c\u91ce\u6307\u9488\u201d", 
            "title": "\u5185\u5b58\u5206\u914d"
        }, 
        {
            "location": "/cplus/cplus3_memory/#c", 
            "text": "", 
            "title": "C++ \u7b2c\u4e09\u7ae0 \u5185\u5b58\u5206\u914d\u65b9\u5f0f\u53ca\u6307\u9488"
        }, 
        {
            "location": "/cplus/cplus3_memory/#c_1", 
            "text": "\u5728c++\u4e2d\uff0c\u5185\u5b58\u5206\u914d\u4e3a5\u4e2a\u533a,\u5206\u522b\u4e3a\u6808,\u5806,\u81ea\u7531\u5b58\u50a8\u533a,\u9759\u6001\u6570\u636e\u533a,\u5e38\u91cf\u5b58\u50a8\u533a.  \u6808 \uff0c\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e,\u91cc\u9762\u7684\u53d8\u91cf\u901a\u5e38\u662f\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u7b49\u3002   \u5806 \uff0c\u5c31\u662f\u90a3\u4e9b\u7531  new \u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u4eec\u7684\u91ca\u653e\u7f16\u8bd1\u5668\u4e0d\u53bb\u7ba1\uff0c\u7531\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53bb\u63a7\u5236\uff0c\u4e00\u822c\u4e00\u4e2a new \u5c31\u8981\u5bf9\u5e94\u4e00\u4e2a  delete \u3002\u5982\u679c\u7a0b\u5e8f\u5458\u6ca1\u6709\u91ca\u653e\u6389\uff0c\u90a3\u4e48\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u6536\u3002\u5806\u53ef\u4ee5\u52a8\u6001\u5730\u6269\u5c55\u548c\u6536\u7f29\u3002  \u81ea\u7531\u5b58\u50a8\u533a \uff0c\u5c31\u662f\u90a3\u4e9b\u7531 malloc \u7b49\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u548c\u5806\u662f\u5341\u5206\u76f8\u4f3c\u7684\uff0c\u4e0d\u8fc7\u5b83\u662f\u7528 free  \u6765\u7ed3\u675f\u81ea\u5df1\u7684\u751f\u547d\u7684  \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \uff0c\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u88ab\u5206\u914d\u5230\u540c\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u5728\u4ee5\u524d\u7684 C \u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff08\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\uff0c\u540c\u65f6\u672a\u88ab\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u5b58\u50a8\u533a\u53ef\u4ee5\u901a\u8fc7  void* \u6765\u8bbf\u95ee\u548c\u64cd\u7eb5\uff0c\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u81ea\u884c\u91ca\u653e\uff09\uff0c\u5728 C++ \u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002  \u5e38\u91cf\u5b58\u50a8\u533a \uff0c\u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u4ed6\u4eec\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\uff08\u5f53\u7136\uff0c\u4f60\u8981\u901a\u8fc7\u975e\u6b63\u5f53\u624b\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539\uff0c\u800c\u4e14\u65b9\u6cd5\u5f88\u591a\uff09", 
            "title": "\u4e00  c++\u5185\u5b58\u5206\u914d\u65b9\u5f0f"
        }, 
        {
            "location": "/cplus/cplus3_memory/#_1", 
            "text": "\u4e3b\u8981\u7684\u533a\u522b\u7531\u4ee5\u4e0b\u51e0\u70b9:   \u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c  \u7a7a\u95f4\u5927\u5c0f\u4e0d\u540c  \u80fd\u5426\u4ea7\u751f\u788e\u7247\u4e0d\u540c  \u751f\u957f\u65b9\u5411\u4e0d\u540c  \u5206\u914d\u65b9\u5f0f\u4e0d\u540c   \u5206\u914d\u6548\u7387\u4e0d\u540c    \u7ba1\u7406\u65b9\u5f0f \uff1a\n\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u63a7\u5236\uff1b\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u91ca\u653e\u5de5\u4f5c\u7531\u7a0b\u5e8f\u5458\u63a7\u5236\uff0c\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u6cc4\u9732.   \u7a7a\u95f4\u5927\u5c0f \uff1a\u5806\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u57fa\u672c\u65e0\u9650\u5236\uff0c\u6808\u7684\u7533\u8bf7\u5185\u5b58\u57281M\u5de6\u53f3  \u788e\u7247\u95ee\u9898 \uff1a\u5806\u4e0a\u7684\u5185\u5b58\u5206\u914d\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u6bcf\u6b21 new \u548c delete \u4f1a\u5bfc\u81f4\u7a7a\u95f4\u7684\u4e0d\u8fde\u7eed\uff0c\u800c\u6808\u7ed3\u6784\u662f\u5148\u8fdb\u540e\u51fa\u4e0d\u4f1a\u6709\u8fd9\u79cd\u7ed3\u679c\u3002  \u751f\u957f\u65b9\u5411 \uff1a\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u589e\u52a0\u7684\u65b9\u5411\uff1b\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5b83\u7684\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411\u589e\u957f\u3002  \u5206\u914d\u65b9\u5f0f \uff1a\u5806\u90fd\u662f\u52a8\u6001\u5206\u914d\u7684\uff0c\u6ca1\u6709\u9759\u6001\u5206\u914d\u7684\u5806\u3002\u6808\u67092\u79cd\u5206\u914d\u65b9\u5f0f\uff1a\u9759\u6001\u5206\u914d\u548c\u52a8\u6001\u5206\u914d\u3002\u9759\u6001\u5206\u914d\u662f\u7f16\u8bd1\u5668\u5b8c\u6210\u7684\uff0c\u6bd4\u5982\u5c40\u90e8\u53d8\u91cf\u7684\u5206\u914d\u3002\u52a8\u6001\u5206\u914d\u7531  malloc  \u51fd\u6570\u8fdb\u884c\u5206\u914d\uff0c\u4f46\u662f\u6808\u7684\u52a8\u6001\u5206\u914d\u548c\u5806\u662f\u4e0d\u540c\u7684\uff0c\u4ed6\u7684\u52a8\u6001\u5206\u914d\u662f\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u91ca\u653e\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u5b9e\u73b0\u3002  \u5206\u914d\u6548\u7387 \uff1a\u6808\u662f\u673a\u5668\u7cfb\u7edf\u63d0\u4f9b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba1\u7b97\u673a\u4f1a\u5728\u5e95\u5c42\u5bf9\u6808\u63d0\u4f9b\u652f\u6301\uff1a\u5206\u914d\u4e13\u95e8\u7684\u5bc4\u5b58\u5668\u5b58\u653e\u6808\u7684\u5730\u5740\uff0c\u538b\u6808\u51fa\u6808\u90fd\u6709\u4e13\u95e8\u7684\u6307\u4ee4\u6267\u884c\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u6808\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\u5806\u5219\u662f C/C++ \u51fd\u6570\u5e93\u63d0\u4f9b\u7684\uff0c\u5b83\u7684\u673a\u5236\u662f\u5f88\u590d\u6742\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u5e93\u51fd\u6570\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u7b97\u6cd5\uff08\u5177\u4f53\u7684\u7b97\u6cd5\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u7ed3\u6784/\u64cd\u4f5c\u7cfb\u7edf\uff09\u5728\u5806\u5185\u5b58\u4e2d\u641c\u7d22\u53ef\u7528\u7684\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff08\u53ef\u80fd\u662f\u7531\u4e8e\u5185\u5b58\u788e\u7247\u592a\u591a\uff09\uff0c\u5c31\u6709\u53ef\u80fd\u8c03\u7528\u7cfb\u7edf\u529f\u80fd\u53bb\u589e\u52a0\u7a0b\u5e8f\u6570\u636e\u6bb5\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u6709\u673a\u4f1a\u5206\u5230\u8db3\u591f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7136\u540e\u8fdb\u884c\u8fd4\u56de\u3002\u663e\u7136\uff0c\u5806\u7684\u6548\u7387\u6bd4\u6808\u8981\u4f4e\u5f97\u591a\u3002", 
            "title": "\u4e8c \u5806\u548c\u6808\u7a76\u7adf\u6709\u4ec0\u4e48\u533a\u522b\uff1f"
        }, 
        {
            "location": "/cplus/cplus3_memory/#_2", 
            "text": "\u5b9a\u4e49   \u6307\u9488\u5b9a\u4e49:  int * p;  \u5b9a\u4e49\u53d8\u91cf:  int p;  \u5b9a\u4e49\u5f15\u7528:   int p=p;int a=6; int b; //\u6307\u9488\nb= a; //\u5730\u5740\u4f20\u9012\ncout a endl; //\u5730\u57400034FBBC\ncout a endl; //\u503c 6\ncout b endl; //\u5730\u57400034FBBC\ncout b endl;//\u503c 6\ncout (b== a) endl; //true \u5730\u5740\u76f8\u540c\nb=7; //\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u7a7a\u95f4\u7684\u503c\ncout a endl; //\u503c 7\ncout b endl;//\u503c 7\nint  c= a; //\u5b9a\u4e49\u5f15\u7528\ncout c endl;//\u503c7\ncout c endl; //\u5730\u57400034FBBC\nint d=0; b= d;\ncout *b endl;//\u503c0\ncout b endl; //\u5730\u57400038FBC0   \u5f15\u7528\u4e0e\u6307\u9488\u533a\u522b   \u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff0c\u6307\u9488\u53ef\u4ee5\u5148\u58f0\u660e\u540e\u521d\u59cb\u5316\u3002  \u5f15\u7528\u4e0d\u80fd\u6709NULL\u5f15\u7528\uff0c\u6307\u9488\u53ef\u4ee5\u4e3aNULL  \u5f15\u7528\u4e00\u5b9a\u521d\u59cb\u5316\u4e0d\u80fd\u518d\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u5bf9\u8c61\u3002  \u5f15\u7528\u4e0d\u5360\u5185\u5b58\uff0c\u53ea\u662f\u53d8\u91cf\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u6307\u9488\u4f1a\u5728\u6808\u533a\u5f00\u8f9f\u4e00\u4e2a4byte\u7684\u5185\u5b58\u533a\u3002   \u56fe\u793a\u6307\u9488\u5185\u5b58\u5206\u5e03:   c++ \u4f20\u503c\uff0c\u4f20\u5740\uff0c\u4f20\u5f15\u7528  void swap(int a,int b);\nvoid swap2(int  amp;x,int  amp;y);\nvoid swap3(int*  a,int* b);\nint _tmain(int argc, _TCHAR* argv[])\n{\n\n    int a=1,b=2;\n    swap(a,b); //\u4f20\u503c ,\u53c2\u6570\u4e3a\u503c\u62f7\u8d1d,\u5916\u90e8\u53d8\u91cf\u4e0d\u4f1a\u6539\u53d8\u503c\n    cout a endl; //1\n    cout b endl;//2\n    int  amp;m= a;\n    int   amp;n = b;\n    swap2(m,n); //\u4f20\u5f15\u7528,\u503c\u6539\u53d8\n    cout a endl; //2\n    cout b endl; //1\n    int *k=  amp;a;\n    int  *j =  amp;b;\n    swap3(k,j);//\u4f20\u6307\u9488,\u503c\u6539\u53d8\n    cout a endl;//1\n    cout b endl;//2\n\n    return 0;\n}\n\nvoid swap(int a,int b){\n    int temp = a;\n    a = b;\n    b=a;\n}\nvoid swap2(int  amp;x,int  amp;y)\n{\n    int temp;\n    temp=x;\n    x=y;\n    y=temp;\n}\nvoid swap3(int*  a,int* b){\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}  java\u7684\u4f20\u503c\uff0c\u4f20\u5f15\u7528  public class Test {\n\n    /**\n     * @param ss\n     */\n    public static void main(String[] ss) {\n        int a = 1;\n        int b = 2;\n        change(a, b);\n        System.out.println(a);//1\n        System.out.println(b);//2\n\n        String m = new String( m );\n        String n = new String( n );\n        change2(m, n);\n        System.out.println(m);//m\n        System.out.println(n);//n\n    }\n\n    private static void change2(String pa1, String pa2) {\n        String temp = pa1;\n        pa1= pa2;\n        pa2= temp;\n    }\n\n    private static void change(int a, int b) {\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n}  java\u7684\u4f20\u503c\u4f20\u5f15\u7528\u90fd\u4e0d\u4f1a\u6539\u53d8,\u4ea4\u6362\u4e24\u4e2a\u5f15\u7528\u53c2\u6570\u4e0d\u53d8\u539f\u56e0\u5982\u4e0b:   m,n\u4e3a\u5916\u90e8\u53d8\u91cfnew\u4e4b\u540e\u5728\u5806\u533a\u4ea7\u751f\u4e24\u4e2a\u5185\u5b58\u533a\u3002chang2\u65b9\u6cd5\u6240\u505a\u7684\u662f\u590d\u5236\u5f15\u7528\uff0c\u5c06\u590d\u5236\u7684\u5f15\u7528\u6307\u5411\u5bf9\u8c61\u6539\u53d8\u4e86\uff0c\u5916\u90e8\u53d8\u91cfm,n\u5374\u6ca1\u6709\u53d1\u751f\u6307\u5411\u6539\u53d8.", 
            "title": "\u4e09  \u6307\u9488 \u5f15\u7528 \u503c"
        }, 
        {
            "location": "/cplus/cplus3_memory/#c_2", 
            "text": "\u5185\u5b58\u5206\u914d\u672a\u6210\u529f\uff0c\u5374\u4f7f\u7528\u4e86\u5b83 ,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u5185\u5b58\u4e4b\u524d\u662f\u68c0\u6d4b\u4e00\u4e0b\u6307\u9488\u662f\u5426\u4e3aNULL   t = (struct btree *)malloc(sizeof(struct btree));\nif (t == NULL) {\n    printf( \u5185\u5b58\u5206\u914d\u5931\u8d25!\\n );\n    exit(EXIT_FAILURE);\n}   \u6ca1\u6709\u521d\u59cb\u5316\u7684\u6982\u5ff5  \u8bef\u8ba4\u4e3a\u5185\u5b58\u7684\u7f3a\u7701\u521d\u503c\u5168\u4e3a0,\u5bfc\u81f4\u5f15\u7528\u521d\u503c\u9519\u8bef ,java\u7684\u4f1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6210\u5458\u53d1\u751f\u4f1a\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u503c\u3002  \u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff0c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f  \u542b\u6709\u8fd9\u79cd\u9519\u8bef\u7684\u51fd\u6570\u6bcf\u88ab\u8c03\u7528\u4e00\u6b21\u5c31\u4e22\u5931\u4e00\u5757\u5185\u5b58\u3002\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5185\u5b58\u5145\u8db3\uff0c\u4f60\u770b\u4e0d\u5230\u9519\u8bef\u3002\u7ec8\u6709\u4e00\u6b21\u7a0b\u5e8f\u7a81\u7136\u6b7b\u6389\uff0c\u7cfb\u7edf\u51fa\u73b0\u63d0\u793a:\u5185\u5b58\u8017\u5c3d\n \u52a8\u6001\u5185\u5b58\u7684\u7533\u8bf7\u4e0e\u91ca\u653e\u5fc5\u987b\u914d\u5bf9\uff0c\u7a0b\u5e8f\u4e2dmalloc\u548cfree\u7684\u4f7f\u7528\u6b21\u6570\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u80af\u5b9a\u6709\u9519\u8bef  \u91ca\u653e\u4e86\u5185\u5b58\u5374\u7ee7\u7eed\u4f7f\u7528\u5b83\n \u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u8c03\u7528\u5173\u7cfb\u8fc7\u4e8e\u590d\u6742\uff0c\u5b9e\u5728\u96be\u4ee5\u641e\u6e05\u695a\u67d0\u4e2a\u5bf9\u8c61\u7a76\u7adf\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u6b64\u65f6\u5e94\u8be5\u91cd\u65b0\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u5bf9\u8c61\u7ba1\u7406\u7684\u6df7\u4e71\u5c40\u9762  \u51fd\u6570\u7684reture\u8bed\u53e5\u5199\u9519\u4e86\uff0c\u6ce8\u610f\u4e0d\u8981\u8fd4\u56de\u6307\u5411\"\u6808\u5185\u5b58\"\u7684\u201c\u6307\u9488\u201d\u6216\u8005\u201c\u5f15\u7528\u201d\uff0c\u56e0\u4e3a\u8be5\u5185\u5b58\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u65f6\u88ab\u81ea\u52a8\u9500\u6bc1   // ConsoleApplication2.cpp : \u5b9a\u4e49\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\n//\n\n#include  stdafx.h \n#include  vld.h \n#include  Student.h \n#include  iostream \nusing namespace std;\n\nStudent* func3();\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    Student*  dss = func3();\n    cout (dss==NULL) endl;  delete dss;//\u6307\u9488ptr\u6307\u5411\u4e86\u4e00\u4e2a\u53ef\u80fd\u5df2\u7ecf\u65e0\u6548\u7684\u5730\u5740\uff0c\u5371\u9669\n    return 0;\n}\n\nStudent* func3()\n{\n    Student my;        //\u5bf9\u8c61my\u5b58\u653e\u5728\u685f\u4e0a\uff0c\u9000\u51fa\u51fd\u6570\u4f53\u4ee5\u540e\u6539\u5730\u5740\u5c31\u53ef\u80fd\u65e0\u6548\u4e86\u3002  Student* ptr =  amp;my;   //\u6307\u9488ptr\u6307\u5411\u4e86\u4e00\u4e2a\u53ef\u80fd\u5df2\u7ecf\u65e0\u6548\u7684\u5730\u5740\uff0c\u5371\u9669\u3002  //cout ptr endl;\n    return ptr;\n}   \u4f7f\u7528 free \u6216 delete \u91ca\u653e\u4e86\u5185\u5b58\u540e\uff0c\u6ca1\u6709\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\u3002\u5bfc\u81f4\u4ea7\u751f\u201c\u91ce\u6307\u9488\u201d\n\u89c4\u5219  \u7528 malloc \u6216 new \u7533\u8bf7\u5185\u5b58\u4e4b\u540e\uff0c\u5e94\u8be5\u7acb\u5373\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3aNULL\u3002\u9632\u6b62\u4f7f\u7528\u6307\u9488\u4e3aNULL\u7684\u5185\u5b58  \u4e0d\u8981\u5fd8\u8bb0\u4e3a\u6570\u7ec4\u548c\u52a8\u6001\u5185\u5b58\u8d4b\u521d\u503c\u3002\u9632\u6b62\u5c06\u672a\u88ab\u521d\u59cb\u5316\u7684\u5185\u5b58\u4f5c\u4e3a\u53f3\u503c\u4f7f\u7528  \u907f\u514d\u6570\u7ec4\u6216\u8005\u6307\u9488\u7684\u4e0b\u6807\u8d8a\u754c\uff0c\u7279\u522b\u8981\u5f53\u5fc3\u53d1\u751f\u201c\u591a1\u201d\u6216\u8005\u201c\u5c111\u201d\u7684\u64cd\u4f5c  \u52a8\u6001\u5185\u5b58\u7684\u7533\u8bf7\u4e0e\u91ca\u653e\u5fc5\u987b\u914d\u5bf9\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f  \u7528 free \u6216 delete \u91ca\u653e\u5185\u5b58\u4e4b\u540e\uff0c\u7acb\u5373\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\uff0c\u9632\u6b62\u4ea7\u751f\u201c\u91ce\u6307\u9488\u201d", 
            "title": "\u56db c++\u5e38\u89c1\u5185\u5b58\u9519\u8bef"
        }, 
        {
            "location": "/cplus/cplus4_complier/", 
            "text": "c++ \u7b2c\u56db\u7ae0  \u7f16\u8bd1\u8fc7\u7a0b\n\n\n\u4e00 \n\u8bed\u8a00\u7c7b\u578b\u6982\u5ff5\n\n\n\n\n\u89e3\u91ca\u578b\u8bed\u8a00\n:\u5728\u8fd0\u884c\u671f\u9010\u884c\u89e3\u91ca\u6e90\u7801\u4e3a\u673a\u5668\u7801,\u5982javascript.\n\n\n\u7f16\u8bd1\u578b\u8bed\u8a00\n:\u5728\u7f16\u8bd1\u671f\u4e00\u6b21\u6027\u5c06\u6e90\u7801\u8f6c\u6362\u6210\u673a\u5668\u7801\u7684\u8bed\u8a00\uff0c\u5e73\u53f0\u4f9d\u8d56\u6027\u8f83\u9ad8\u3002\u5982c,c++.\n\n\n\n\n\u50cfjava,actionscript\u3002\u8fd9\u79cd\u5219\u5c5e\u4e8e\u6df7\u5408\u578b\u7684\u8bed\u8a00\u4e86\uff0cjava\u7f16\u8bd1\u6210\u7684\u5e76\u975e\u673a\u5668\u7801\uff0c\u7531jvm\u53bb\u89e3\u91ca\u6240\u751f\u6210\u7684java\u5b57\u8282\u7801\uff0c\u800cactioncript\u4e5f\u6709avm\u7c7b\u4f3c\u7684\u89e3\u91ca\u5668\u3002\n\n\n\n\n\u52a8\u6001\u8bed\u8a00\n:\u5728\u8fd0\u884c\u671f\u624d\u53bb\u68c0\u6d4b\u6570\u636e\u7c7b\u578b\u7684\u8bed\u8a00\u3002\u50cfjavascript.\n\n\n\u9759\u6001\u8bed\u8a00\n:\u5728\u7f16\u8bd1\u671f\u68c0\u67e5\u6570\u636e\u7c7b\u578b,\u5982c,c++\u7b49.\n\n\n\n\n\u4e8c \nc++\u7f16\u8bd1\u8fc7\u7a0b\n\n\n\n\n\n\n\u9884\u5904\u7406\n: \u5bf9\u9884\u5904\u7406\u6307\u4ee4\u4f5c\u4e00\u4e9b\u66ff\u6362\u64cd\u4f5c,\u5904\u7406#include,#define,#if\u7b49\uff0c\u8fd8\u6709\u6ce8\u91ca\u7684\u5220\u9664\u5de5\u4f5c.\n\n\n\u7f16\u8bd1\n:\u5c06\u9884\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8fdb\u884c\u4e00\u7cfb\u5217\n\u8bcd\u6cd5\u5206\u6790\n\uff08\nlex\n\uff09\u3001\n\u8bed\u6cd5\u5206\u6790\n\uff08\nyacc\n\uff09\u3001\n\u8bed\u4e49\u5206\u6790\n\u53ca\n\u4f18\u5316\n\u540e\u751f\u6210\u6c47\u7f16\u4ee3\u7801\n\n\n\n\n\u6c47\u7f16\n:\u6c47\u7f16\u4ee3\u7801\u5230\u76ee\u6807\u6587\u4ef6,\n\u76ee\u6807\u6587\u4ef6\n\u4ee5\u673a\u5668\u7801\u7684\u5f62\u5f0f\u5305\u542b\u4e86\n\u7f16\u8bd1\u5355\u5143\n(\u6bcf\u4e00\u4e2acpp\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143)\u91cc\u6240\u6709\u7684\u4ee3\u7801\u548c\u6570\u636e\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684\u4fe1\u606f.\n\u76ee\u6807\u6587\u4ef6\u9664\u4e86\u81ea\u5df1\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u5916\u8fd8\u63d0\u4f9b\u4e09\u4e2a\u8868:\n\n\n\n\n\u672a\u89e3\u51b3\u7b26\u53f7\u8868\n:\u88ab\u7f16\u8bd1\u5355\u5143\u5f15\u7528\u5374\u4e0d\u5b9a\u4e49\u5728\u5176\u4e2d\u7684\u7b26\u53f7\u548c\u5730\u5740.\n\n\n\u5bfc\u51fa\u7b26\u53f7\u8868\n: \u5b9a\u4e49\u5728\u4e9b\u7f16\u8bd1\u5355\u5143\u5e76\u63d0\u4f9b\u7ed9\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u7b26\u53f7\u548c\u5730\u5740.\n\n\n\u5730\u5740\u91cd\u5b9a\u5411\u8868\n:\u672c\u7f16\u8bd1\u5355\u5143\u5bf9\u81ea\u8eab\u5f15\u7528\u7684\u8bb0\u5f55.\n\n\n\n\n\n\n\n\n\u94fe\u63a5\n:\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6,\u5e93\uff0c\u94fe\u63a5\u4e3a\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\n\n\n\n\n\n\n\n\n\u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u65f6\uff0c\u5148\u786e\u5b9a\u5404\u4e2a\u7f16\u8bd1\u5355\u5143\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u904d\u5386\u7f16\u8bd1\u5355\u5143\u7684\u672a\u89e3\u51b3\u7b26\u53f7\u8868\uff0c\u5e76\u4e14\u5728\u6240\u6709\u5bfc\u51fa\u7b26\u53f7\u8868\u65f6\u67e5\u627e\u5339\u914d\u7684\u7b26\u53f7\u5e76\u586b\u4e0a\u5730\u5740\u3002\u6700\u540e\u5c06\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\u5199\u5728\u5404\u81ea\u7684\u4f4d\u7f6e\u4e0a\u3002\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u5c31\u94fe\u63a5\u5b8c\u6210\u4e86\u3002\n\n\n\u4e09 \njava\u7f16\u8bd1\u8fc7\u7a0b\u4e0ec++\u7684\u533a\u522b\n\n\nc++\u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u4f9d\u636e\u7279\u5b9a\u5e73\u53f0\u5c06\u672a\u89e3\u51b3\u7b26\u8868\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u7684\u5185\u5b58\u504f\u79fb\u91cf\uff0c\u5e73\u53f0\u4f9d\u8d56\u6027\u8f83\u5f3a.\n\n\njava\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u5668\u5374\u4e0d\u786e\u5b9a\u5185\u5b58\u5e03\u5c40\u3002\u800c\u662f\u5728\u8fd0\u884c\u671f\uff0c\u5728\u4ee3\u7801\u901a\u7528classLoader\u8f7d\u5165\u5b8c\u6210\uff0c\u6821\u9a8c\u5b8c\u4ee3\u7801\u540e\u624d\u786e\u5b9a\u4e86\u5185\u5b58\u5e03\u5c40.\u5728\u8fd0\u884c\u671f\u901a\u8fc7\u67e5\u8868\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\u4e00\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u5730\u5740\u3002\u8fd9\u624d\u662fjava\u4e00\u6b21\u7f16\u8bd1\uff0c\u5230\u5904\u8fd0\u884c\u7684\u539f\u56e0.\n\n\nhttp://www.cnblogs.com/hongfenglee/archive/2012/02/18/2356808.html\n\n\nhttp://www.xue5.com/Developer/C++/738463_2.html\n\n\nhttp://blog.163.com/zhaoxin851055@126/blog/static/81129298200987112318323/\n\n\nhttp://developer.51cto.com/art/201009/226884.htm", 
            "title": "\u7f16\u8bd1\u8fc7\u7a0b"
        }, 
        {
            "location": "/cplus/cplus4_complier/#c", 
            "text": "", 
            "title": "c++ \u7b2c\u56db\u7ae0  \u7f16\u8bd1\u8fc7\u7a0b"
        }, 
        {
            "location": "/cplus/cplus4_complier/#_1", 
            "text": "\u89e3\u91ca\u578b\u8bed\u8a00 :\u5728\u8fd0\u884c\u671f\u9010\u884c\u89e3\u91ca\u6e90\u7801\u4e3a\u673a\u5668\u7801,\u5982javascript.  \u7f16\u8bd1\u578b\u8bed\u8a00 :\u5728\u7f16\u8bd1\u671f\u4e00\u6b21\u6027\u5c06\u6e90\u7801\u8f6c\u6362\u6210\u673a\u5668\u7801\u7684\u8bed\u8a00\uff0c\u5e73\u53f0\u4f9d\u8d56\u6027\u8f83\u9ad8\u3002\u5982c,c++.   \u50cfjava,actionscript\u3002\u8fd9\u79cd\u5219\u5c5e\u4e8e\u6df7\u5408\u578b\u7684\u8bed\u8a00\u4e86\uff0cjava\u7f16\u8bd1\u6210\u7684\u5e76\u975e\u673a\u5668\u7801\uff0c\u7531jvm\u53bb\u89e3\u91ca\u6240\u751f\u6210\u7684java\u5b57\u8282\u7801\uff0c\u800cactioncript\u4e5f\u6709avm\u7c7b\u4f3c\u7684\u89e3\u91ca\u5668\u3002   \u52a8\u6001\u8bed\u8a00 :\u5728\u8fd0\u884c\u671f\u624d\u53bb\u68c0\u6d4b\u6570\u636e\u7c7b\u578b\u7684\u8bed\u8a00\u3002\u50cfjavascript.  \u9759\u6001\u8bed\u8a00 :\u5728\u7f16\u8bd1\u671f\u68c0\u67e5\u6570\u636e\u7c7b\u578b,\u5982c,c++\u7b49.", 
            "title": "\u4e00 \u8bed\u8a00\u7c7b\u578b\u6982\u5ff5"
        }, 
        {
            "location": "/cplus/cplus4_complier/#c_1", 
            "text": "\u9884\u5904\u7406 : \u5bf9\u9884\u5904\u7406\u6307\u4ee4\u4f5c\u4e00\u4e9b\u66ff\u6362\u64cd\u4f5c,\u5904\u7406#include,#define,#if\u7b49\uff0c\u8fd8\u6709\u6ce8\u91ca\u7684\u5220\u9664\u5de5\u4f5c.  \u7f16\u8bd1 :\u5c06\u9884\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8fdb\u884c\u4e00\u7cfb\u5217 \u8bcd\u6cd5\u5206\u6790 \uff08 lex \uff09\u3001 \u8bed\u6cd5\u5206\u6790 \uff08 yacc \uff09\u3001 \u8bed\u4e49\u5206\u6790 \u53ca \u4f18\u5316 \u540e\u751f\u6210\u6c47\u7f16\u4ee3\u7801   \u6c47\u7f16 :\u6c47\u7f16\u4ee3\u7801\u5230\u76ee\u6807\u6587\u4ef6, \u76ee\u6807\u6587\u4ef6 \u4ee5\u673a\u5668\u7801\u7684\u5f62\u5f0f\u5305\u542b\u4e86 \u7f16\u8bd1\u5355\u5143 (\u6bcf\u4e00\u4e2acpp\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143)\u91cc\u6240\u6709\u7684\u4ee3\u7801\u548c\u6570\u636e\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684\u4fe1\u606f.\n\u76ee\u6807\u6587\u4ef6\u9664\u4e86\u81ea\u5df1\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u5916\u8fd8\u63d0\u4f9b\u4e09\u4e2a\u8868:   \u672a\u89e3\u51b3\u7b26\u53f7\u8868 :\u88ab\u7f16\u8bd1\u5355\u5143\u5f15\u7528\u5374\u4e0d\u5b9a\u4e49\u5728\u5176\u4e2d\u7684\u7b26\u53f7\u548c\u5730\u5740.  \u5bfc\u51fa\u7b26\u53f7\u8868 : \u5b9a\u4e49\u5728\u4e9b\u7f16\u8bd1\u5355\u5143\u5e76\u63d0\u4f9b\u7ed9\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u7b26\u53f7\u548c\u5730\u5740.  \u5730\u5740\u91cd\u5b9a\u5411\u8868 :\u672c\u7f16\u8bd1\u5355\u5143\u5bf9\u81ea\u8eab\u5f15\u7528\u7684\u8bb0\u5f55.     \u94fe\u63a5 :\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6,\u5e93\uff0c\u94fe\u63a5\u4e3a\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6     \u94fe\u63a5\u5668\u8fdb\u884c\u94fe\u63a5\u65f6\uff0c\u5148\u786e\u5b9a\u5404\u4e2a\u7f16\u8bd1\u5355\u5143\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u904d\u5386\u7f16\u8bd1\u5355\u5143\u7684\u672a\u89e3\u51b3\u7b26\u53f7\u8868\uff0c\u5e76\u4e14\u5728\u6240\u6709\u5bfc\u51fa\u7b26\u53f7\u8868\u65f6\u67e5\u627e\u5339\u914d\u7684\u7b26\u53f7\u5e76\u586b\u4e0a\u5730\u5740\u3002\u6700\u540e\u5c06\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\u5199\u5728\u5404\u81ea\u7684\u4f4d\u7f6e\u4e0a\u3002\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u5c31\u94fe\u63a5\u5b8c\u6210\u4e86\u3002", 
            "title": "\u4e8c c++\u7f16\u8bd1\u8fc7\u7a0b"
        }, 
        {
            "location": "/cplus/cplus4_complier/#javac", 
            "text": "c++\u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u4f9d\u636e\u7279\u5b9a\u5e73\u53f0\u5c06\u672a\u89e3\u51b3\u7b26\u8868\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u7684\u5185\u5b58\u504f\u79fb\u91cf\uff0c\u5e73\u53f0\u4f9d\u8d56\u6027\u8f83\u5f3a.  java\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u5668\u5374\u4e0d\u786e\u5b9a\u5185\u5b58\u5e03\u5c40\u3002\u800c\u662f\u5728\u8fd0\u884c\u671f\uff0c\u5728\u4ee3\u7801\u901a\u7528classLoader\u8f7d\u5165\u5b8c\u6210\uff0c\u6821\u9a8c\u5b8c\u4ee3\u7801\u540e\u624d\u786e\u5b9a\u4e86\u5185\u5b58\u5e03\u5c40.\u5728\u8fd0\u884c\u671f\u901a\u8fc7\u67e5\u8868\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\u4e00\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u5730\u5740\u3002\u8fd9\u624d\u662fjava\u4e00\u6b21\u7f16\u8bd1\uff0c\u5230\u5904\u8fd0\u884c\u7684\u539f\u56e0.  http://www.cnblogs.com/hongfenglee/archive/2012/02/18/2356808.html  http://www.xue5.com/Developer/C++/738463_2.html  http://blog.163.com/zhaoxin851055@126/blog/static/81129298200987112318323/  http://developer.51cto.com/art/201009/226884.htm", 
            "title": "\u4e09 java\u7f16\u8bd1\u8fc7\u7a0b\u4e0ec++\u7684\u533a\u522b"
        }, 
        {
            "location": "/cplus/cplus5_const/", 
            "text": "c++ \u7b2c\u4e94\u7ae0 const\n\n\n1 \u4fee\u9970\u666e\u901a\u53d8\u91cf\u548c\u6307\u9488\n\n\ndouble d1 = 2;\ndouble d2 = 4;\nconst double cptr=\nd1;\ncptr =\nd2; //\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u503c\uff0c\u800c\u53ef\u4ee5\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u5730\u5740\ndouble const cptr1 = \nd1;\ncptr1 = d2;//\u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u503c\uff0c\u4e0d\u53ef\u4ee5\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u5730\u5740\nconst double const cptr2 = \nd1; //\u4e24\u4e2a\u90fd\u4e0d\u80fd\u4fee\u6539\n\n\n\n\n\u5982\u679cconst\u4f4d\u4e8e\n\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b \n\n\u5982\u679cconst\u4f4d\u4e8e\n\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002\n\n\n2 const\u4fee\u9970\u51fd\u6570\u53c2\u6570\n\n\nconst\u4fee\u9970\u51fd\u6570\u53c2\u6570\u662f\u5b83\u6700\u5e7f\u6cdb\u7684\u4e00\u79cd\u7528\u9014\uff0c\u5b83\u8868\u793a\u51fd\u6570\u4f53\u4e2d\u4e0d\u80fd\u4fee\u6539\u53c2\u6570\u7684\u503c(\u5305\u62ec\u53c2\u6570\u672c\u8eab\u7684\u503c\u6216\u8005\u53c2\u6570\u5176\u4e2d\u5305\u542b\u7684\u503c)\n\n\n\n\nvoid function(const int Var);\n //\u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e0d\u53ef\u4ee5\u6539\u53d8(\u65e0\u610f\u4e49\uff0c\u56e0\u4e3aVar\u672c\u8eab\u5c31\u662f\u5f62\u53c2\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u51fd\u6570\u5185\u4e0d\u6539\u53d8\u4f20\u9012\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u6ca1\u6709\u8fbe\u5230\u76ee\u7684\uff0c\u4f1a\u4e34\u65f6\u590d\u5236\u4e00\u4e2a_Var\u53d8\u91cf\uff0c\u539f\u59cb\u53d8\u91cf\u6839\u672c\u4e0d\u4f1a\u6539\u53d8\u7684)   \n\n\nvoid function(const char* Var);\n //\u53c2\u6570\u6307\u9488\u6240\u6307\u5185\u5bb9\u4e3a\u5e38\u91cf\u4e0d\u53ef\u53d8   \n\n\nvoid function(char* const Var);\n //\u53c2\u6570\u6307\u9488\u672c\u8eab\u4e3a\u5e38\u91cf\u4e0d\u53ef\u53d8(\u4e5f\u65e0\u610f\u4e49,\u56e0\u4e3achar* Var\u4e5f\u662f\u5f62\u53c2\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u51fd\u6570\u5185\u4e0d\u6539\u53d8\u4f20\u9012\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u6ca1\u6709\u8fbe\u5230\u76ee\u7684\uff0c\u8fd8\u662f\u53ef\u4ee5\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5bb9)\n\n\n\n\n\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570\u800c\u8a00\uff0c\u8c61\nvoid function(A a)\n\u8fd9\u6837\u58f0\u660e\u7684\u51fd\u6570\u6ce8\u5b9a\u6548\u7387\u6bd4\u8f83\u5e95\u3002\u56e0\u4e3a\u51fd\u6570\u4f53\u5185\u5c06\u4ea7\u751fA \u7c7b\u578b\u7684\u4e34\u65f6\u5bf9\u8c61\u7528\u4e8e\u590d\u5236\u53c2\u6570a\uff0c\u800c\u4e34\u65f6\u5bf9\u8c61\u7684\u6784\u9020\u3001\u590d\u5236\u3001\u6790\u6784\u8fc7\u7a0b\u90fd\u5c06\u6d88\u8017\u65f6\u95f4\u3002\n\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u58f0\u660e\u6539\u4e3avoid function(A a)\uff0c\u56e0\u4e3a\u201c\u5f15\u7528\u4f20\u9012\u201d\u4ec5\u501f\u7528\u4e00\u4e0b\u53c2\u6570\u7684\u522b\u540d\u800c\u5df2\uff0c\u4e0d\u9700\u8981\u4ea7\u751f\u4e34\u65f6\u5bf9\u8c61\u3002\u4f46\u662f\u51fd\u6570void function(A a) \u5b58\u5728\u4e00\u4e2a\u7f3a\u70b9\uff1a\n\u201c\u5f15\u7528\u4f20\u9012\u201d\u6709\u53ef\u80fd\u6539\u53d8\u53c2\u6570a\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u671f\u671b\u7684\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5f88\u5bb9\u6613\uff0c\u52a0const\u4fee\u9970\u5373\u53ef void function(const A a);\n\n\n3 const\u4fee\u9970\u7c7b\u5bf9\u8c61/\u5bf9\u8c61\u6307\u9488/\u5bf9\u8c61\u5f15\u7528\n\n\nconst\u4fee\u9970\u7c7b\u5bf9\u8c61\u8868\u793a\u8be5\u5bf9\u8c61\u4e3a\u5e38\u91cf\u5bf9\u8c61\uff0c\u5176\u4e2d\u7684\u4efb\u4f55\u6210\u5458\u90fd\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u5bf9\u4e8e\u5bf9\u8c61\u6307\u9488\u548c\u5bf9\u8c61\u5f15\u7528\u4e5f\u662f\u4e00\u6837\u3002const\u4fee\u9970\u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7684\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u90fd\u4e0d\u80fd\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u4f1a\u6709\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u4f01\u56fe\u3002\u4f8b\u5982\uff1a\n\n\nclass AAA\n{\n   void func1();\n   void func2()  const;\n};\nconstAAA aObj;\naObj.func1(); \u00d7\naObj.func2(); \u6b63\u786e\n\nconst AAA aObj = new AAA();\naObj-\nfunc1(); \u00d7\naObj-\nfunc2(); \u6b63\u786e\n\n\n\n\n4 const\u4fee\u9970\u6210\u5458\u53d8\u91cf\n\n\nconst\u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u6210\u5458\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u540c\u65f6\u5b83\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8d4b\u503c\u3002\n\n\nclass A\n{\n   const int nValue;       //\u6210\u5458\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539\n   A(int x):nValue(x) {}; //\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8d4b\u503c  \uff0c\u8fd9\u4e2a\u9700\u8981\u6ce8\u610f\n};\n\n\n\n\n5 const\u4fee\u9970\u6210\u5458\u51fd\u6570\n\n\nconst\u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5219\u8be5\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u3002\u4e00\u822c\u5199\u5728\u51fd\u6570\u7684\u6700\u540e\u6765\u4fee\u9970\u3002\n\n\nclass A\n{\n    void function() const;\n};\n\n\n\n\n\u5bf9\u4e8econst\u7c7b\u5bf9\u8c61/\u6307\u9488/\u5f15\u7528\uff0c\u53ea\u80fd\u8c03\u7528\u7c7b\u7684const\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\uff0cconst\u4fee\u9970\u6210\u5458\u51fd\u6570\u7684\u6700\u91cd\u8981\u4f5c\u7528\u5c31\u662f\u9650\u5236\u5bf9\u4e8econst\u5bf9\u8c61\u7684\u4f7f\u7528\u3002\n\n\n6 const\u5e38\u91cf\u4e0edefine\u5b8f\u5b9a\u4e49\u7684\u533a\u522b\n\n\n\n\n\u7f16\u8bd1\u5668\u5904\u7406\u65b9\u5f0f\u4e0d\u540cdefine\u5b8f\u662f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c55\u5f00\u3002const\u5e38\u91cf\u662f\u7f16\u8bd1\u8fd0\u884c\u9636\u6bb5\u4f7f\u7528\u3002\n\n\n\u7c7b\u578b\u548c\u5b89\u5168\u68c0\u67e5\u4e0d\u540cdefine\u5b8f\u6ca1\u6709\u7c7b\u578b\uff0c\u4e0d\u505a\u4efb\u4f55\u7c7b\u578b\u68c0\u67e5\uff0c\u4ec5\u4ec5\u662f\u5c55\u5f00\u3002const\u5e38\u91cf\u6709\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u6267\u884c\u7c7b\u578b\u68c0\u67e5\u3002\n\n\n\u5b58\u50a8\u65b9\u5f0f\u4e0d\u540cdefine\u5b8f\u4ec5\u4ec5\u662f\u5c55\u5f00\uff0c\u6709\u591a\u5c11\u5730\u65b9\u4f7f\u7528\uff0c\u5c31\u5c55\u5f00\u591a\u5c11\u6b21\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u3002const\u5e38\u91cf\u4f1a\u5728\u5185\u5b58\u4e2d\u5206\u914d(\u53ef\u4ee5\u662f\u5806\u4e2d\u4e5f\u53ef\u4ee5\u662f\u6808\u4e2d)\u3002", 
            "title": "\u5e38\u91cf\u4fee\u9970\u7b26"
        }, 
        {
            "location": "/cplus/cplus5_const/#c-const", 
            "text": "", 
            "title": "c++ \u7b2c\u4e94\u7ae0 const"
        }, 
        {
            "location": "/cplus/cplus5_const/#1", 
            "text": "double d1 = 2;\ndouble d2 = 4;\nconst double cptr= d1;\ncptr = d2; //\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u503c\uff0c\u800c\u53ef\u4ee5\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u5730\u5740\ndouble const cptr1 =  d1;\ncptr1 = d2;//\u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u503c\uff0c\u4e0d\u53ef\u4ee5\u66f4\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u5730\u5740\nconst double const cptr2 =  d1; //\u4e24\u4e2a\u90fd\u4e0d\u80fd\u4fee\u6539  \u5982\u679cconst\u4f4d\u4e8e \u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b  \n\u5982\u679cconst\u4f4d\u4e8e \u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", 
            "title": "1 \u4fee\u9970\u666e\u901a\u53d8\u91cf\u548c\u6307\u9488"
        }, 
        {
            "location": "/cplus/cplus5_const/#2-const", 
            "text": "const\u4fee\u9970\u51fd\u6570\u53c2\u6570\u662f\u5b83\u6700\u5e7f\u6cdb\u7684\u4e00\u79cd\u7528\u9014\uff0c\u5b83\u8868\u793a\u51fd\u6570\u4f53\u4e2d\u4e0d\u80fd\u4fee\u6539\u53c2\u6570\u7684\u503c(\u5305\u62ec\u53c2\u6570\u672c\u8eab\u7684\u503c\u6216\u8005\u53c2\u6570\u5176\u4e2d\u5305\u542b\u7684\u503c)   void function(const int Var);  //\u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e0d\u53ef\u4ee5\u6539\u53d8(\u65e0\u610f\u4e49\uff0c\u56e0\u4e3aVar\u672c\u8eab\u5c31\u662f\u5f62\u53c2\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u51fd\u6570\u5185\u4e0d\u6539\u53d8\u4f20\u9012\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u6ca1\u6709\u8fbe\u5230\u76ee\u7684\uff0c\u4f1a\u4e34\u65f6\u590d\u5236\u4e00\u4e2a_Var\u53d8\u91cf\uff0c\u539f\u59cb\u53d8\u91cf\u6839\u672c\u4e0d\u4f1a\u6539\u53d8\u7684)     void function(const char* Var);  //\u53c2\u6570\u6307\u9488\u6240\u6307\u5185\u5bb9\u4e3a\u5e38\u91cf\u4e0d\u53ef\u53d8     void function(char* const Var);  //\u53c2\u6570\u6307\u9488\u672c\u8eab\u4e3a\u5e38\u91cf\u4e0d\u53ef\u53d8(\u4e5f\u65e0\u610f\u4e49,\u56e0\u4e3achar* Var\u4e5f\u662f\u5f62\u53c2\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u51fd\u6570\u5185\u4e0d\u6539\u53d8\u4f20\u9012\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u6ca1\u6709\u8fbe\u5230\u76ee\u7684\uff0c\u8fd8\u662f\u53ef\u4ee5\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5bb9)   \u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570\u800c\u8a00\uff0c\u8c61 void function(A a) \u8fd9\u6837\u58f0\u660e\u7684\u51fd\u6570\u6ce8\u5b9a\u6548\u7387\u6bd4\u8f83\u5e95\u3002\u56e0\u4e3a\u51fd\u6570\u4f53\u5185\u5c06\u4ea7\u751fA \u7c7b\u578b\u7684\u4e34\u65f6\u5bf9\u8c61\u7528\u4e8e\u590d\u5236\u53c2\u6570a\uff0c\u800c\u4e34\u65f6\u5bf9\u8c61\u7684\u6784\u9020\u3001\u590d\u5236\u3001\u6790\u6784\u8fc7\u7a0b\u90fd\u5c06\u6d88\u8017\u65f6\u95f4\u3002 \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u58f0\u660e\u6539\u4e3avoid function(A a)\uff0c\u56e0\u4e3a\u201c\u5f15\u7528\u4f20\u9012\u201d\u4ec5\u501f\u7528\u4e00\u4e0b\u53c2\u6570\u7684\u522b\u540d\u800c\u5df2\uff0c\u4e0d\u9700\u8981\u4ea7\u751f\u4e34\u65f6\u5bf9\u8c61\u3002\u4f46\u662f\u51fd\u6570void function(A a) \u5b58\u5728\u4e00\u4e2a\u7f3a\u70b9\uff1a \u201c\u5f15\u7528\u4f20\u9012\u201d\u6709\u53ef\u80fd\u6539\u53d8\u53c2\u6570a\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u671f\u671b\u7684\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5f88\u5bb9\u6613\uff0c\u52a0const\u4fee\u9970\u5373\u53ef void function(const A a);", 
            "title": "2 const\u4fee\u9970\u51fd\u6570\u53c2\u6570"
        }, 
        {
            "location": "/cplus/cplus5_const/#3-const", 
            "text": "const\u4fee\u9970\u7c7b\u5bf9\u8c61\u8868\u793a\u8be5\u5bf9\u8c61\u4e3a\u5e38\u91cf\u5bf9\u8c61\uff0c\u5176\u4e2d\u7684\u4efb\u4f55\u6210\u5458\u90fd\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u5bf9\u4e8e\u5bf9\u8c61\u6307\u9488\u548c\u5bf9\u8c61\u5f15\u7528\u4e5f\u662f\u4e00\u6837\u3002const\u4fee\u9970\u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7684\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u90fd\u4e0d\u80fd\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u4f1a\u6709\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u4f01\u56fe\u3002\u4f8b\u5982\uff1a  class AAA\n{\n   void func1();\n   void func2()  const;\n};\nconstAAA aObj;\naObj.func1(); \u00d7\naObj.func2(); \u6b63\u786e\n\nconst AAA aObj = new AAA();\naObj- func1(); \u00d7\naObj- func2(); \u6b63\u786e", 
            "title": "3 const\u4fee\u9970\u7c7b\u5bf9\u8c61/\u5bf9\u8c61\u6307\u9488/\u5bf9\u8c61\u5f15\u7528"
        }, 
        {
            "location": "/cplus/cplus5_const/#4-const", 
            "text": "const\u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u6210\u5458\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u540c\u65f6\u5b83\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8d4b\u503c\u3002  class A\n{\n   const int nValue;       //\u6210\u5458\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539\n   A(int x):nValue(x) {}; //\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8d4b\u503c  \uff0c\u8fd9\u4e2a\u9700\u8981\u6ce8\u610f\n};", 
            "title": "4 const\u4fee\u9970\u6210\u5458\u53d8\u91cf"
        }, 
        {
            "location": "/cplus/cplus5_const/#5-const", 
            "text": "const\u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5219\u8be5\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u4efb\u4f55\u975econst\u6210\u5458\u51fd\u6570\u3002\u4e00\u822c\u5199\u5728\u51fd\u6570\u7684\u6700\u540e\u6765\u4fee\u9970\u3002  class A\n{\n    void function() const;\n};  \u5bf9\u4e8econst\u7c7b\u5bf9\u8c61/\u6307\u9488/\u5f15\u7528\uff0c\u53ea\u80fd\u8c03\u7528\u7c7b\u7684const\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\uff0cconst\u4fee\u9970\u6210\u5458\u51fd\u6570\u7684\u6700\u91cd\u8981\u4f5c\u7528\u5c31\u662f\u9650\u5236\u5bf9\u4e8econst\u5bf9\u8c61\u7684\u4f7f\u7528\u3002", 
            "title": "5 const\u4fee\u9970\u6210\u5458\u51fd\u6570"
        }, 
        {
            "location": "/cplus/cplus5_const/#6-constdefine", 
            "text": "\u7f16\u8bd1\u5668\u5904\u7406\u65b9\u5f0f\u4e0d\u540cdefine\u5b8f\u662f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c55\u5f00\u3002const\u5e38\u91cf\u662f\u7f16\u8bd1\u8fd0\u884c\u9636\u6bb5\u4f7f\u7528\u3002  \u7c7b\u578b\u548c\u5b89\u5168\u68c0\u67e5\u4e0d\u540cdefine\u5b8f\u6ca1\u6709\u7c7b\u578b\uff0c\u4e0d\u505a\u4efb\u4f55\u7c7b\u578b\u68c0\u67e5\uff0c\u4ec5\u4ec5\u662f\u5c55\u5f00\u3002const\u5e38\u91cf\u6709\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u6267\u884c\u7c7b\u578b\u68c0\u67e5\u3002  \u5b58\u50a8\u65b9\u5f0f\u4e0d\u540cdefine\u5b8f\u4ec5\u4ec5\u662f\u5c55\u5f00\uff0c\u6709\u591a\u5c11\u5730\u65b9\u4f7f\u7528\uff0c\u5c31\u5c55\u5f00\u591a\u5c11\u6b21\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u3002const\u5e38\u91cf\u4f1a\u5728\u5185\u5b58\u4e2d\u5206\u914d(\u53ef\u4ee5\u662f\u5806\u4e2d\u4e5f\u53ef\u4ee5\u662f\u6808\u4e2d)\u3002", 
            "title": "6 const\u5e38\u91cf\u4e0edefine\u5b8f\u5b9a\u4e49\u7684\u533a\u522b"
        }, 
        {
            "location": "/python/py1_intro/", 
            "text": "Python 3 \u5165\u95e8\u4ecb\u7ecd\n\n\npython \u7b80\u4ecb\n\n\nPython\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u3001\u9762\u5411\u5bf9\u8c61\u3001\u52a8\u6001\u6570\u636e\u7c7b\u578b\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00.\u8bbe\u8ba1\u8005\u5f00\u53d1\u65f6\u603b\u7684\u6307\u5bfc\u601d\u60f3\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u6700\u597d\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u5c31\u597d\u4e86.Python\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u51fd\u6570\u3001\u6a21\u5757\u3001\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u90fd\u662f\u5bf9\u8c61\u3002\u5e76\u4e14\u5b8c\u5168\u652f\u6301\u7ee7\u627f\u3001\u91cd\u8f7d\u3001\u6d3e\u751f\u3001\u591a\u7ee7\u627f\uff0c\u6709\u76ca\u4e8e\u589e\u5f3a\u6e90\u4ee3\u7801\u7684\u590d\u7528\u6027\u3002Python\u652f\u6301\u91cd\u8f7d\u8fd0\u7b97\u7b26\u548c\u52a8\u6001\u7c7b\u578b,python\u5e94\u7528\u5f88\u5e7f\u6cdb(\u7cfb\u7edf\u7f16\u7a0b \u56fe\u5f62\u5904\u7406 \u6570\u5b66\u5904\u7406 \u6587\u672c\u5904\u7406 \u6570\u636e\u5e93\u7f16\u7a0b \u7f51\u7edc\u7f16\u7a0b Web\u7f16\u7a0b \u591a\u5a92\u4f53\u5e94\u7528).\n\n\npython 3 \u7684\u53d8\u5316\n\n\nhttps://gist.github.com/scturtle/3060332\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\n\npython: \nhttp://www.python.org/getit/\n\n\nIDE : eclipse + pydev\n\n\n\n\n\u5b89\u88c5\u5b8cpydev\u540e \u914d\u7f6epython\u89e3\u91ca\u5668\n\n\n\n\n\u8bed\u6cd5\n\n\n\u7f29\u8fdb\n\n\nPython\u5f00\u53d1\u8005\u6709\u610f\u8ba9\u8fdd\u53cd\u4e86\u7f29\u8fdb\u89c4\u5219\u7684\u7a0b\u5e8f\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u4ee5\u6b64\u6765\u5f3a\u5236\u7a0b\u5e8f\u5458\u517b\u6210\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002\u5e76\u4e14\u5728Python\u8bed\u8a00\u91cc\uff0c\u7f29\u8fdb\u800c\u975e\u82b1\u62ec\u53f7\u6216\u8005\u67d0\u79cd\u5173\u952e\u5b57\uff0c\u88ab\u7528\u4e8e\u8868\u793a\u8bed\u53e5\u5757\u7684\u5f00\u59cb\u548c\u9000\u51fa\u3002\u589e\u52a0\u7f29\u8fdb\u8868\u793a\u8bed\u53e5\u5757\u7684\u5f00\u59cb\uff0c\u800c\u51cf\u5c11\u7f29\u8fdb\u5219\u8868\u793a\u8bed\u53e5\u5757\u7684\u9000\u51fa\u3002\u7f29\u8fdb\u6210\u4e3a\u4e86\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982\n\n\nif age \n 21:\n    print(\n\u4f60\u4e0d\u80fd\u8cb7\u9152\u3002\n)\n    print(\n\u4e0d\u904e\u4f60\u80fd\u8cb7\u53e3\u9999\u7cd6\u3002\n)\n    print(\n\u9019\u53e5\u8a71\u8655\u65bcif\u8a9e\u53e5\u584a\u7684\u5916\u9762\u3002\n)\n\n\n\n\n\u6839\u636ePEP\u7684\u89c4\u5b9a\uff0c\u5fc5\u987b\u4f7f\u75284\u4e2a\u7a7a\u683c\u6765\u8868\u793a\u6bcf\u7ea7\u7f29\u8fdb\u3002\u4f7f\u7528Tab\u5b57\u7b26\u548c\u5176\u5b83\u6570\u76ee\u7684\u7a7a\u683c\u867d\u7136\u90fd\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff0c\u4f46\u4e0d\u7b26\u5408\u7f16\u7801\u89c4\u8303\u3002\u652f\u6301Tab\u5b57\u7b26\u548c\u5176\u5b83\u6570\u76ee\u7684\u7a7a\u683c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u517c\u5bb9\u5f88\u65e7\u7684Python\u7a0b\u5e8f\u548c\u67d0\u4e9b\u6709\u95ee\u9898\u7684\u7f16\u8f91\u5668\u3002\n\n\n\u6ce8\u91ca\n\n\n\u6807\u793a\u6ce8\u91ca:\u4ee5\n#\n\u53f7\u5f00\u5934\uff0c\u4e00\u884c\u90fd\u4e3a\u6ce8\u91ca\u5185\u5bb9\n\u6587\u6863\u6ce8\u91ca:\n\u2018\u2018\u2018\n \u4e09\u4e2a\u5355\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5355\u5f15\u53f7\u7ed3\u5c3e\n\n\n\u8f93\u5165\u8f93\u51fa\n\n\n\u8f93\u51fa:\nprint\n\n\n#\u591a\u53c2\u6570\u8f93\u51fa\nprint(\nhello\n,\nworld\n)\n#\u683c\u5f0f\u8f93\u51fa\npi=3.14\nprint(\n%d,haha\n%3)\n\n\n\n\n\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u8f6c\u6362\u7c7b\u578b\n\n\n\n\n\n\n\n\n\u8f6c\u6362\u7c7b\u578b\n\n\n\u542b\u4e49\n\n\n\n\n\n\n\n\n\n\nd,i\n\n\n\u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236\u6574\u6570\n\n\n\n\n\n\no\n\n\n\u4e0d\u5e26\u7b26\u53f7\u7684\u516b\u8fdb\u5236\n\n\n\n\n\n\nu\n\n\n\u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236\n\n\n\n\n\n\nx\n\n\n\u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u516d\u8fdb\u5236\uff08\u5c0f\u5199\uff09\n\n\n\n\n\n\nX\n\n\n\u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u516d\u8fdb\u5236\uff08\u5927\u5199\uff09\n\n\n\n\n\n\ne\n\n\n\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff08\u5c0f\u5199\uff09\n\n\n\n\n\n\nE\n\n\n\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff08\u5927\u5199\uff09\n\n\n\n\n\n\nf,F\n\n\n\u5341\u8fdb\u5236\u6d6e\u70b9\u6570\n\n\n\n\n\n\ng\n\n\n\u5982\u679c\u6307\u6570\u5927\u4e8e-4\u6216\u8005\u5c0f\u4e8e\u7cbe\u5ea6\u503c\u5219\u548ce\u76f8\u540c\uff0c\u5176\u4ed6\u60c5\u51b5\u548cf\u76f8\u540c\n\n\n\n\n\n\nG\n\n\n\u5982\u679c\u6307\u6570\u5927\u4e8e-4\u6216\u8005\u5c0f\u4e8e\u7cbe\u5ea6\u503c\u5219\u548cE\u76f8\u540c\uff0c\u5176\u4ed6\u60c5\u51b5\u548cF\u76f8\u540c\n\n\n\n\n\n\nC\n\n\n\u5355\u5b57\u7b26\uff08\u63a5\u53d7\u6574\u6570\u6216\u8005\u5355\u5b57\u7b26\u5b57\u7b26\u4e32\uff09\n\n\n\n\n\n\nr\n\n\n\u5b57\u7b26\u4e32\uff08\u4f7f\u7528repr\u8f6c\u6362\u4efb\u610fpython\u5bf9\u8c61)\n\n\n\n\n\n\n\n\n|s        |           \u5b57\u7b26\u4e32\uff08\u4f7f\u7528str\u8f6c\u6362\u4efb\u610fpython\u5bf9\u8c61\uff09|\n\n\n\u8f93\u5165:\ninput\n\n\nname = input('please enter your name:')\nprint(\nhello\n,name)", 
            "title": "\u8bed\u8a00\u7b80\u4ecb"
        }, 
        {
            "location": "/python/py1_intro/#python-3", 
            "text": "", 
            "title": "Python 3 \u5165\u95e8\u4ecb\u7ecd"
        }, 
        {
            "location": "/python/py1_intro/#python", 
            "text": "Python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u3001\u9762\u5411\u5bf9\u8c61\u3001\u52a8\u6001\u6570\u636e\u7c7b\u578b\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00.\u8bbe\u8ba1\u8005\u5f00\u53d1\u65f6\u603b\u7684\u6307\u5bfc\u601d\u60f3\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u6700\u597d\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u5c31\u597d\u4e86.Python\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u51fd\u6570\u3001\u6a21\u5757\u3001\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u90fd\u662f\u5bf9\u8c61\u3002\u5e76\u4e14\u5b8c\u5168\u652f\u6301\u7ee7\u627f\u3001\u91cd\u8f7d\u3001\u6d3e\u751f\u3001\u591a\u7ee7\u627f\uff0c\u6709\u76ca\u4e8e\u589e\u5f3a\u6e90\u4ee3\u7801\u7684\u590d\u7528\u6027\u3002Python\u652f\u6301\u91cd\u8f7d\u8fd0\u7b97\u7b26\u548c\u52a8\u6001\u7c7b\u578b,python\u5e94\u7528\u5f88\u5e7f\u6cdb(\u7cfb\u7edf\u7f16\u7a0b \u56fe\u5f62\u5904\u7406 \u6570\u5b66\u5904\u7406 \u6587\u672c\u5904\u7406 \u6570\u636e\u5e93\u7f16\u7a0b \u7f51\u7edc\u7f16\u7a0b Web\u7f16\u7a0b \u591a\u5a92\u4f53\u5e94\u7528).", 
            "title": "python \u7b80\u4ecb"
        }, 
        {
            "location": "/python/py1_intro/#python-3_1", 
            "text": "https://gist.github.com/scturtle/3060332", 
            "title": "python 3 \u7684\u53d8\u5316"
        }, 
        {
            "location": "/python/py1_intro/#_1", 
            "text": "python:  http://www.python.org/getit/  IDE : eclipse + pydev   \u5b89\u88c5\u5b8cpydev\u540e \u914d\u7f6epython\u89e3\u91ca\u5668", 
            "title": "\u5f00\u53d1\u73af\u5883"
        }, 
        {
            "location": "/python/py1_intro/#_2", 
            "text": "", 
            "title": "\u8bed\u6cd5"
        }, 
        {
            "location": "/python/py1_intro/#_3", 
            "text": "Python\u5f00\u53d1\u8005\u6709\u610f\u8ba9\u8fdd\u53cd\u4e86\u7f29\u8fdb\u89c4\u5219\u7684\u7a0b\u5e8f\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u4ee5\u6b64\u6765\u5f3a\u5236\u7a0b\u5e8f\u5458\u517b\u6210\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002\u5e76\u4e14\u5728Python\u8bed\u8a00\u91cc\uff0c\u7f29\u8fdb\u800c\u975e\u82b1\u62ec\u53f7\u6216\u8005\u67d0\u79cd\u5173\u952e\u5b57\uff0c\u88ab\u7528\u4e8e\u8868\u793a\u8bed\u53e5\u5757\u7684\u5f00\u59cb\u548c\u9000\u51fa\u3002\u589e\u52a0\u7f29\u8fdb\u8868\u793a\u8bed\u53e5\u5757\u7684\u5f00\u59cb\uff0c\u800c\u51cf\u5c11\u7f29\u8fdb\u5219\u8868\u793a\u8bed\u53e5\u5757\u7684\u9000\u51fa\u3002\u7f29\u8fdb\u6210\u4e3a\u4e86\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982  if age   21:\n    print( \u4f60\u4e0d\u80fd\u8cb7\u9152\u3002 )\n    print( \u4e0d\u904e\u4f60\u80fd\u8cb7\u53e3\u9999\u7cd6\u3002 )\n    print( \u9019\u53e5\u8a71\u8655\u65bcif\u8a9e\u53e5\u584a\u7684\u5916\u9762\u3002 )  \u6839\u636ePEP\u7684\u89c4\u5b9a\uff0c\u5fc5\u987b\u4f7f\u75284\u4e2a\u7a7a\u683c\u6765\u8868\u793a\u6bcf\u7ea7\u7f29\u8fdb\u3002\u4f7f\u7528Tab\u5b57\u7b26\u548c\u5176\u5b83\u6570\u76ee\u7684\u7a7a\u683c\u867d\u7136\u90fd\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff0c\u4f46\u4e0d\u7b26\u5408\u7f16\u7801\u89c4\u8303\u3002\u652f\u6301Tab\u5b57\u7b26\u548c\u5176\u5b83\u6570\u76ee\u7684\u7a7a\u683c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u517c\u5bb9\u5f88\u65e7\u7684Python\u7a0b\u5e8f\u548c\u67d0\u4e9b\u6709\u95ee\u9898\u7684\u7f16\u8f91\u5668\u3002", 
            "title": "\u7f29\u8fdb"
        }, 
        {
            "location": "/python/py1_intro/#_4", 
            "text": "\u6807\u793a\u6ce8\u91ca:\u4ee5 # \u53f7\u5f00\u5934\uff0c\u4e00\u884c\u90fd\u4e3a\u6ce8\u91ca\u5185\u5bb9\n\u6587\u6863\u6ce8\u91ca: \u2018\u2018\u2018  \u4e09\u4e2a\u5355\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5355\u5f15\u53f7\u7ed3\u5c3e", 
            "title": "\u6ce8\u91ca"
        }, 
        {
            "location": "/python/py1_intro/#_5", 
            "text": "", 
            "title": "\u8f93\u5165\u8f93\u51fa"
        }, 
        {
            "location": "/python/py1_intro/#print", 
            "text": "#\u591a\u53c2\u6570\u8f93\u51fa\nprint( hello , world )\n#\u683c\u5f0f\u8f93\u51fa\npi=3.14\nprint( %d,haha %3)", 
            "title": "\u8f93\u51fa:print"
        }, 
        {
            "location": "/python/py1_intro/#_6", 
            "text": "\u8f6c\u6362\u7c7b\u578b  \u542b\u4e49      d,i  \u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236\u6574\u6570    o  \u4e0d\u5e26\u7b26\u53f7\u7684\u516b\u8fdb\u5236    u  \u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236    x  \u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u516d\u8fdb\u5236\uff08\u5c0f\u5199\uff09    X  \u4e0d\u5e26\u7b26\u53f7\u7684\u5341\u516d\u8fdb\u5236\uff08\u5927\u5199\uff09    e  \u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff08\u5c0f\u5199\uff09    E  \u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff08\u5927\u5199\uff09    f,F  \u5341\u8fdb\u5236\u6d6e\u70b9\u6570    g  \u5982\u679c\u6307\u6570\u5927\u4e8e-4\u6216\u8005\u5c0f\u4e8e\u7cbe\u5ea6\u503c\u5219\u548ce\u76f8\u540c\uff0c\u5176\u4ed6\u60c5\u51b5\u548cf\u76f8\u540c    G  \u5982\u679c\u6307\u6570\u5927\u4e8e-4\u6216\u8005\u5c0f\u4e8e\u7cbe\u5ea6\u503c\u5219\u548cE\u76f8\u540c\uff0c\u5176\u4ed6\u60c5\u51b5\u548cF\u76f8\u540c    C  \u5355\u5b57\u7b26\uff08\u63a5\u53d7\u6574\u6570\u6216\u8005\u5355\u5b57\u7b26\u5b57\u7b26\u4e32\uff09    r  \u5b57\u7b26\u4e32\uff08\u4f7f\u7528repr\u8f6c\u6362\u4efb\u610fpython\u5bf9\u8c61)     |s        |           \u5b57\u7b26\u4e32\uff08\u4f7f\u7528str\u8f6c\u6362\u4efb\u610fpython\u5bf9\u8c61\uff09|", 
            "title": "\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u8f6c\u6362\u7c7b\u578b"
        }, 
        {
            "location": "/python/py1_intro/#input", 
            "text": "name = input('please enter your name:')\nprint( hello ,name)", 
            "title": "\u8f93\u5165:input"
        }, 
        {
            "location": "/python/py2_data/", 
            "text": "Python \u6570\u636e\u7c7b\u578b\n\n\n\u53d8\u91cf\n\n\n\u58f0\u660e\u53d8\u91cf,\u53d8\u91cf\u5b9a\u4e49\u65e0\u9700\u5173\u952e\u5b57,\u5fc5\u987b\u8d4b\u503c\uff0c\u4e0ejs\u4e00\u6837,\u53d8\u91cf\u4e3a\u52a8\u6001\u7c7b\u578b\uff0c\u53d8\u91cf\u7c7b\u578b\u53ef\u53d8\u5316\n\n\nx=1\nx=True\nprint(x)\n\n\n\n\n\u591a\u5143\u8d4b\u503c\n\n\nx,y,z = 1,2,3\n\n\n\n\n\u53d8\u91cf\u4ea4\u6362\u503c\n\n\nx,y=y,x\n\n\n\n\n\u6570\u636e\u7c7b\u578b\n\n\npython\u6570\u636e\u7c7b\u578b\u6709\u5f88\u591a\u79cd,\u5e38\u89c1\n\n\n\n\nBooleans\n \uff3b\u5e03\u5c14\u578b\uff3d\u6216\u4e3aTrue\uff3b\u771f\uff3d\u6216\u4e3aFalse\uff3b\u5047\uff3d\u3002\n\n\nNumbers\n \uff3b\u6570\u503c\u578b\uff3d\u53ef\u4ee5\u662fIntegers\uff3b\u6574\u6570\uff3dFloats\uff3b\u6d6e\u70b9\u6570\uff3dFractions\uff3b\u5206\u6570\uff3d(1/2)\u751a\u81f3\u662fComplexNumber\uff3b\u590d\u6570\uff3d\u3002\n\n\nLists\n \uff3b\u5217\u8868\uff3d\u662f\u503c\u7684\u6709\u5e8f\u5e8f\u5217\u3002\n\n\nTuples\n \uff3b\u5143\u7ec4\uff3d\u662f\u6709\u5e8f\u800c\u4e0d\u53ef\u53d8\u7684\u503c\u5e8f\u5217\u3002\n\n\nSets\uff3b\n \u96c6\u5408\uff3d\u662f\u88c5\u6ee1\u65e0\u5e8f\u503c\u7684\u5305\u88f9\u3002\n\n\nDictionaries\n \uff3b\u5b57\u5178\uff3d\u662f\u952e\u503c\u5bf9\u7684\u65e0\u5e8f\u5305\u88f9\u3002\n\n\nStrings\n \uff3b\u5b57\u7b26\u4e32\u578b\uff3d\u662fUnicode\u5b57\u7b26\u5e8f\u5217\n\n\nBytes\n \uff3b\u5b57\u8282\uff3d\u548cByteArrays\uff3b\u5b57\u8282\u6570\u7ec4\uff3d\uff0c\u4f8b\u5982:\u4e00\u4efdJPEG\u56fe\u50cf\u6587\u4ef6\u3002\n\n\nNone\n\n\n\n\n\u5e03\u5c14\u7c7b\u578b\n\n\nTrue\n\u548c\nFalse\n,\u5e03\u5c14\u503c\u53ef\u4ee5\u7528\nand\n\u3001\nor\n\u548c\nnot\n\u8fd0\u7b97\n\n\nthree = True\n\n\n\n\n True and True\nTrue\n\n True and False\nFalse\n\n False and False\nFalse\n\n 5 \n 3 and 3 \n 1\nTrue\n\n\n\n\n\u6570\u503c\u7c7b\u578b\n\n\npython\u7684\u6570\u503c\u7c7b\u578b\u5305\u62ecint,float,\u5206\u6570\u7b49,int\u548cfloat\u4ec5\u901a\u8fc7\u5c0f\u6570\u70b9\u6765\u533a\u5206\u5b83\u4eec.\n\n\n#\u5224\u65ad\u6570\u636e\u7c7b\u578b\none = 1\ntwo = 2.0\nprint(type(one))\nprint(type(two))\n#\u5224\u65ad\u662f\u5426\u662fint\u7c7b\u578b\nprint(isinstance(one, float))\n# \u5206\u6570\nimport fractions\nprint(fractions.Fraction(1, 2))\n\n\n\n\n\u5217\u8868(\u6570\u7ec4) :\u53ef\u4ee5\u6709\u76f8\u540c\u5143\u7d20,\u6709\u5e8f\n\n\na =['a','b','c','d','e']\n#\u7b2c\u4e00\u4e2a\nprint(a[0])\n#\u5012\u6570\u7b2c\u4e00\u4e2a\nprint(a[-1])\n#\u7b2c\u4e8c\u4e2a\u5230\u7b2c\u56db\u4e2a\uff0c(\u5305\u62ec\u524d\u4e0d\u5305\u62ec\u672b\u5c3e)\nprint(a[1:3])\n#\u7b2c\u4e00\u4e2a\u5230\u7b2c\u56db\u4e2a\nprint(a[:3])\n#\u7b2c\u4e8c\u4e2a\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\nprint(a[1:-1])\n#\u7b2c\u56db\u4e2a\u5230\u6700\u540e\nprint(a[3:])\n#rang,a=[0,1,2,3,4]\na=list(range(5))\n\n\n\n\n\u8f93\u51fa:\n\n\na\ne\n['b', 'c']\n['a', 'b', 'c']\n['b', 'c', 'd']\n['d', 'e']\n\n\n\n\n\u5217\u8868\u904d\u5386\n\n\nx = [ 2,5,8]\nfor y in x:\n    print (y)\n\n\n\n\n\u5217\u8868\u6dfb\u52a0\u9879 :\n\n\na =['a','b','c','d','e']\na = a+['f']\nprint(a)\na.append(True)\nprint(a)\na.insert(0,'g')\nprint(a)\na.extend(['h'])\nprint(a)\na.append(['j']);\nprint(a)\n\n\n\n\n\u8f93\u51fa:\n\n\n['a', 'b', 'c', 'd', 'e', 'f']\n['a', 'b', 'c', 'd', 'e', 'f', True]\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True]\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True, 'h']\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True, 'h', ['j']]\n\n\n\n\n\n\n\u52a0\u53f7\u8fde\u63a5\u7b26\n:\u4e0d\u9002\u5408\u5904\u7406\u5927\u578b\u5217\u8868\uff0c\u5e94\u8be5\u4ed6\u662f\u521b\u5efa\u65b0\u7684\u5217\u8868\u7136\u540e\u8d4b\u503c\uff0c\u6d88\u8017\u5185\u5b58\n\n\ninsert\n:\u662f\u624d\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u524d\u63d2\u5165\n\n\nextend\n:\u53ea\u53ef\u63a5\u53d7\u5217\u8868\n\n\nappend\n:\u53ef\u63a5\u53d7\u5217\u8868\u548c\u5355\u72ec\u5143\u7d20\n\n\n\n\n\u5217\u8868\u68c0\u7d22\u503c\n\n\n  a = ['a','a', 'b', 'c', 'd', 'e']\n  print(a.count('a'))\n  print(a.index('a'))\n  print('a' in a)\n\n\n\n\n\n\ncount\n:\u8ba1\u7b97\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\n\n\nindex\n:\u8fd4\u56de\u5143\u7d20\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u4e0d\u5728\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38\n\n\nin\n :\u7528\u4e8e\u641c\u7d22\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u6b64\u5217\u8868\u4e2d\uff0c\u6bd4count\u901f\u5ea6\u5feb\n\n\n\n\n\u5217\u8868\u5220\u9664\u5143\u7d20:\n\n\na = ['a', 'b', 'c', 'd', 'e']\na.remove('a')\nprint(a)\na.pop()\nprint(a)\na.pop(0)\nprint(a)\n\n\n\n\n\n\nremove\n:\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u5143\u7d20\u4e0d\u5728\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38\n\n\npop\n:\u4e0d\u5e26\u53c2\u6570\u65f6 \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u7a7a\u5217\u8868\u5f15\u53d1\u5f02\u5e38\n\n\n\n\n\u5143\u7ec4 :\u4e0d\u53ef\u6539\u53d8\u7684\u5217\u8868\uff0c\u7528\u4e8e\u5e38\u91cf\n\n\narr=(1,2,3)\na=list(arr)\nprint(a)\nb= tuple(a)\nprint(b)\n\n\n\n\n\n\nlist\n:\u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868\n\n\ntuple\n:\u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4\n\n\n\n\n\u96c6\u5408:\u65e0\u5e8f\uff0c\u552f\u4e00\n\n\nsets = {1, 2, 3, 4}\n\n\n\n\n\u4fee\u6539\u96c6\u5408\n\n\n\n\nadd\n:\u53ea\u53ef\u6dfb\u52a0\u4e00\u4e2a\u53c2\u6570,\u4e0d\u80fd\u662f\u96c6\u5408,\u5217\u8868\n\n\nupdate\n:\u53ea\u80fd\u662f\u96c6\u5408\u6216\u5217\u8868,\u53ef\u591a\u4e2a\u53c2\u6570\n\n\n\n\narr  = [5,6,7]\nsets = {1, 2, 3, 4}\nsets.add(8)\nprint(sets)\nsets.update(arr);\nprint(sets)\n\n\n\n\n\u5220\u9664\u96c6\u5408\n\n\n\n\ndiscard\n: \u63a5\u53d7\u4e00\u4e2a\u53c2\u6570,\u4e0d\u4f1a\u5f15\u53d1\u5f02\u5e38\n\n\nremove\n:\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570,\u4f1a\u5f15\u53d1\u5f02\u5e38\n\n\npop\n:\u968f\u673a\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20,\u4f1a\u5f15\u53d1\u5f02\u5e38\n\n\nclear\n:\u6e05\u9664\u6240\u6709\u503c\uff0c\u76f8\u5f53\u4e8e\u91cd\u7f6e\u96c6\u5408\n\n\n\n\nsets = {1, 2, 3, 4}\nsets.discard(1)\nprint(sets)\nsets.remove(2)\nprint(sets)\nsets.pop()\nprint(sets)\nsets.clear()\nprint(sets)\n\n\n\n\n\u5e38\u89c1\u96c6\u5408\u64cd\u4f5c\n\n\nsets = {1, 2, 3, 4}\nsetsA = {4,5,6,7}\n\n'''\u5e76\u96c6'''\nsetsB =sets.union(setsA)\nprint(setsB)\n\n'''\u4ea4\u96c6'''\nsetsC = sets.intersection(setsA)\nprint(setsC)\n\n'''\u53ea\u51fa\u73b0\u5728sets\u4e0d\u5728setsA\u4e2d\u7684\u5143\u7d20'''\nsetsD = sets.difference(setsA)\nprint(setsD)\n\n'''\u4e24\u4e2a\u96c6\u5408\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u96c6\u5408'''\nsetsE = sets.symmetric_difference(setsA)\nprint(setsE)\n\n'''sets\u662f\u5426\u662fsetsA\u7684\u5b50\u96c6(sets\u5143\u7d20\u5728setsA\u4e2d\u5168\u6709)'''\nprint(sets.issubset(setsA))\n'''sets\u662f\u5426\u662fsetsA\u7684\u8d85\u96c6'''\nprint(sets.issuperset(setsA))\n\n\n\n\n\u5b57\u5178:\u6709\u952e\u503c\u5bf9\u7684\u65e0\u5e8f\u96c6\u5408\n\n\n\u64cd\u4f5c\n\n\ndic = {1000:1, 2000:2}\nprint(dic[1000])\ndic[1000]=3\nprint(dic[1000])\n\n\n\n\n\u5b57\u5178\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u503c\uff0c\u5bf9\u73b0\u6709\u952e\u7684\u8d4b\u503c\u4f1a\u8986\u76d6\u65e7\u503c\u3002 \u6dfb\u52a0\u65b0\u952e\u503c\u548c\u4fee\u6539\u503c\u8bed\u6cd5\u4e00\u6837\n\n\n\u904d\u5386\u5b57\u5178\n\n\ndict={\na\n:\napple\n,\nb\n:\nbanana\n,\no\n:\norange\n}\nfor i in dict:\n        print (\ndict[%s]=\n % i,dict[i] )\nfor (k,v) in  dict.items():\n        print (\ndict[%s]=\n % k,v  )\n\n\n\n\n\u5b57\u7b26\u4e32\n\n\n\u683c\u5f0f\u5316\n\n\nstr = 'myname is {0}'\nprint(str.format('wujiyu'))\n\ndics =['kb','mb']\n'''\u53c2\u6570\u53ef\u4ee5\u662f\u590d\u5408\u5143\u7d201mb=1024kb'''\nstrarr = '1{0[1]}=1024{0[0]}'\nprint(strarr.format(dics))\n\n'''.1 \u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u7b2c\u4e00\u4f4d'''\nprint('{0:.1f}{1}'.format(698.24,'GB'))\n\n\n\n\n\u5176\u4ed6\n\n\nstr = 'Myname=2\npas=3'\n'''\u5c0f\u5199'''\nprint(str.lower())\n'''\u5206\u6bb5'''\nprint(str.split('\n'))\n'''\u8ba1\u6570'''\nprint(str.count('a'))\n'''\u5207\u7247'''\nprint(str[0:3])\n\n\n\n\nByte\n\n\nx = b'ABC'", 
            "title": "\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/python/py2_data/#python", 
            "text": "", 
            "title": "Python \u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/python/py2_data/#_1", 
            "text": "\u58f0\u660e\u53d8\u91cf,\u53d8\u91cf\u5b9a\u4e49\u65e0\u9700\u5173\u952e\u5b57,\u5fc5\u987b\u8d4b\u503c\uff0c\u4e0ejs\u4e00\u6837,\u53d8\u91cf\u4e3a\u52a8\u6001\u7c7b\u578b\uff0c\u53d8\u91cf\u7c7b\u578b\u53ef\u53d8\u5316  x=1\nx=True\nprint(x)  \u591a\u5143\u8d4b\u503c  x,y,z = 1,2,3  \u53d8\u91cf\u4ea4\u6362\u503c  x,y=y,x", 
            "title": "\u53d8\u91cf"
        }, 
        {
            "location": "/python/py2_data/#_2", 
            "text": "python\u6570\u636e\u7c7b\u578b\u6709\u5f88\u591a\u79cd,\u5e38\u89c1   Booleans  \uff3b\u5e03\u5c14\u578b\uff3d\u6216\u4e3aTrue\uff3b\u771f\uff3d\u6216\u4e3aFalse\uff3b\u5047\uff3d\u3002  Numbers  \uff3b\u6570\u503c\u578b\uff3d\u53ef\u4ee5\u662fIntegers\uff3b\u6574\u6570\uff3dFloats\uff3b\u6d6e\u70b9\u6570\uff3dFractions\uff3b\u5206\u6570\uff3d(1/2)\u751a\u81f3\u662fComplexNumber\uff3b\u590d\u6570\uff3d\u3002  Lists  \uff3b\u5217\u8868\uff3d\u662f\u503c\u7684\u6709\u5e8f\u5e8f\u5217\u3002  Tuples  \uff3b\u5143\u7ec4\uff3d\u662f\u6709\u5e8f\u800c\u4e0d\u53ef\u53d8\u7684\u503c\u5e8f\u5217\u3002  Sets\uff3b  \u96c6\u5408\uff3d\u662f\u88c5\u6ee1\u65e0\u5e8f\u503c\u7684\u5305\u88f9\u3002  Dictionaries  \uff3b\u5b57\u5178\uff3d\u662f\u952e\u503c\u5bf9\u7684\u65e0\u5e8f\u5305\u88f9\u3002  Strings  \uff3b\u5b57\u7b26\u4e32\u578b\uff3d\u662fUnicode\u5b57\u7b26\u5e8f\u5217  Bytes  \uff3b\u5b57\u8282\uff3d\u548cByteArrays\uff3b\u5b57\u8282\u6570\u7ec4\uff3d\uff0c\u4f8b\u5982:\u4e00\u4efdJPEG\u56fe\u50cf\u6587\u4ef6\u3002  None", 
            "title": "\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/python/py2_data/#_3", 
            "text": "True \u548c False ,\u5e03\u5c14\u503c\u53ef\u4ee5\u7528 and \u3001 or \u548c not \u8fd0\u7b97  three = True   True and True\nTrue  True and False\nFalse  False and False\nFalse  5   3 and 3   1\nTrue", 
            "title": "\u5e03\u5c14\u7c7b\u578b"
        }, 
        {
            "location": "/python/py2_data/#_4", 
            "text": "python\u7684\u6570\u503c\u7c7b\u578b\u5305\u62ecint,float,\u5206\u6570\u7b49,int\u548cfloat\u4ec5\u901a\u8fc7\u5c0f\u6570\u70b9\u6765\u533a\u5206\u5b83\u4eec.  #\u5224\u65ad\u6570\u636e\u7c7b\u578b\none = 1\ntwo = 2.0\nprint(type(one))\nprint(type(two))\n#\u5224\u65ad\u662f\u5426\u662fint\u7c7b\u578b\nprint(isinstance(one, float))\n# \u5206\u6570\nimport fractions\nprint(fractions.Fraction(1, 2))", 
            "title": "\u6570\u503c\u7c7b\u578b"
        }, 
        {
            "location": "/python/py2_data/#_5", 
            "text": "a =['a','b','c','d','e']\n#\u7b2c\u4e00\u4e2a\nprint(a[0])\n#\u5012\u6570\u7b2c\u4e00\u4e2a\nprint(a[-1])\n#\u7b2c\u4e8c\u4e2a\u5230\u7b2c\u56db\u4e2a\uff0c(\u5305\u62ec\u524d\u4e0d\u5305\u62ec\u672b\u5c3e)\nprint(a[1:3])\n#\u7b2c\u4e00\u4e2a\u5230\u7b2c\u56db\u4e2a\nprint(a[:3])\n#\u7b2c\u4e8c\u4e2a\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\nprint(a[1:-1])\n#\u7b2c\u56db\u4e2a\u5230\u6700\u540e\nprint(a[3:])\n#rang,a=[0,1,2,3,4]\na=list(range(5))  \u8f93\u51fa:  a\ne\n['b', 'c']\n['a', 'b', 'c']\n['b', 'c', 'd']\n['d', 'e']", 
            "title": "\u5217\u8868(\u6570\u7ec4) :\u53ef\u4ee5\u6709\u76f8\u540c\u5143\u7d20,\u6709\u5e8f"
        }, 
        {
            "location": "/python/py2_data/#_6", 
            "text": "x = [ 2,5,8]\nfor y in x:\n    print (y)", 
            "title": "\u5217\u8868\u904d\u5386"
        }, 
        {
            "location": "/python/py2_data/#_7", 
            "text": "a =['a','b','c','d','e']\na = a+['f']\nprint(a)\na.append(True)\nprint(a)\na.insert(0,'g')\nprint(a)\na.extend(['h'])\nprint(a)\na.append(['j']);\nprint(a)  \u8f93\u51fa:  ['a', 'b', 'c', 'd', 'e', 'f']\n['a', 'b', 'c', 'd', 'e', 'f', True]\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True]\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True, 'h']\n['g', 'a', 'b', 'c', 'd', 'e', 'f', True, 'h', ['j']]   \u52a0\u53f7\u8fde\u63a5\u7b26 :\u4e0d\u9002\u5408\u5904\u7406\u5927\u578b\u5217\u8868\uff0c\u5e94\u8be5\u4ed6\u662f\u521b\u5efa\u65b0\u7684\u5217\u8868\u7136\u540e\u8d4b\u503c\uff0c\u6d88\u8017\u5185\u5b58  insert :\u662f\u624d\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u524d\u63d2\u5165  extend :\u53ea\u53ef\u63a5\u53d7\u5217\u8868  append :\u53ef\u63a5\u53d7\u5217\u8868\u548c\u5355\u72ec\u5143\u7d20", 
            "title": "\u5217\u8868\u6dfb\u52a0\u9879 :"
        }, 
        {
            "location": "/python/py2_data/#_8", 
            "text": "a = ['a','a', 'b', 'c', 'd', 'e']\n  print(a.count('a'))\n  print(a.index('a'))\n  print('a' in a)   count :\u8ba1\u7b97\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570  index :\u8fd4\u56de\u5143\u7d20\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u4e0d\u5728\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38  in  :\u7528\u4e8e\u641c\u7d22\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u6b64\u5217\u8868\u4e2d\uff0c\u6bd4count\u901f\u5ea6\u5feb", 
            "title": "\u5217\u8868\u68c0\u7d22\u503c"
        }, 
        {
            "location": "/python/py2_data/#_9", 
            "text": "a = ['a', 'b', 'c', 'd', 'e']\na.remove('a')\nprint(a)\na.pop()\nprint(a)\na.pop(0)\nprint(a)   remove :\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u5143\u7d20\u4e0d\u5728\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38  pop :\u4e0d\u5e26\u53c2\u6570\u65f6 \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20,\u7a7a\u5217\u8868\u5f15\u53d1\u5f02\u5e38", 
            "title": "\u5217\u8868\u5220\u9664\u5143\u7d20:"
        }, 
        {
            "location": "/python/py2_data/#_10", 
            "text": "arr=(1,2,3)\na=list(arr)\nprint(a)\nb= tuple(a)\nprint(b)   list :\u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868  tuple :\u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4", 
            "title": "\u5143\u7ec4 :\u4e0d\u53ef\u6539\u53d8\u7684\u5217\u8868\uff0c\u7528\u4e8e\u5e38\u91cf"
        }, 
        {
            "location": "/python/py2_data/#_11", 
            "text": "sets = {1, 2, 3, 4}", 
            "title": "\u96c6\u5408:\u65e0\u5e8f\uff0c\u552f\u4e00"
        }, 
        {
            "location": "/python/py2_data/#_12", 
            "text": "add :\u53ea\u53ef\u6dfb\u52a0\u4e00\u4e2a\u53c2\u6570,\u4e0d\u80fd\u662f\u96c6\u5408,\u5217\u8868  update :\u53ea\u80fd\u662f\u96c6\u5408\u6216\u5217\u8868,\u53ef\u591a\u4e2a\u53c2\u6570   arr  = [5,6,7]\nsets = {1, 2, 3, 4}\nsets.add(8)\nprint(sets)\nsets.update(arr);\nprint(sets)", 
            "title": "\u4fee\u6539\u96c6\u5408"
        }, 
        {
            "location": "/python/py2_data/#_13", 
            "text": "discard : \u63a5\u53d7\u4e00\u4e2a\u53c2\u6570,\u4e0d\u4f1a\u5f15\u53d1\u5f02\u5e38  remove :\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570,\u4f1a\u5f15\u53d1\u5f02\u5e38  pop :\u968f\u673a\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20,\u4f1a\u5f15\u53d1\u5f02\u5e38  clear :\u6e05\u9664\u6240\u6709\u503c\uff0c\u76f8\u5f53\u4e8e\u91cd\u7f6e\u96c6\u5408   sets = {1, 2, 3, 4}\nsets.discard(1)\nprint(sets)\nsets.remove(2)\nprint(sets)\nsets.pop()\nprint(sets)\nsets.clear()\nprint(sets)", 
            "title": "\u5220\u9664\u96c6\u5408"
        }, 
        {
            "location": "/python/py2_data/#_14", 
            "text": "sets = {1, 2, 3, 4}\nsetsA = {4,5,6,7}\n\n'''\u5e76\u96c6'''\nsetsB =sets.union(setsA)\nprint(setsB)\n\n'''\u4ea4\u96c6'''\nsetsC = sets.intersection(setsA)\nprint(setsC)\n\n'''\u53ea\u51fa\u73b0\u5728sets\u4e0d\u5728setsA\u4e2d\u7684\u5143\u7d20'''\nsetsD = sets.difference(setsA)\nprint(setsD)\n\n'''\u4e24\u4e2a\u96c6\u5408\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u96c6\u5408'''\nsetsE = sets.symmetric_difference(setsA)\nprint(setsE)\n\n'''sets\u662f\u5426\u662fsetsA\u7684\u5b50\u96c6(sets\u5143\u7d20\u5728setsA\u4e2d\u5168\u6709)'''\nprint(sets.issubset(setsA))\n'''sets\u662f\u5426\u662fsetsA\u7684\u8d85\u96c6'''\nprint(sets.issuperset(setsA))", 
            "title": "\u5e38\u89c1\u96c6\u5408\u64cd\u4f5c"
        }, 
        {
            "location": "/python/py2_data/#_15", 
            "text": "", 
            "title": "\u5b57\u5178:\u6709\u952e\u503c\u5bf9\u7684\u65e0\u5e8f\u96c6\u5408"
        }, 
        {
            "location": "/python/py2_data/#_16", 
            "text": "dic = {1000:1, 2000:2}\nprint(dic[1000])\ndic[1000]=3\nprint(dic[1000])  \u5b57\u5178\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u503c\uff0c\u5bf9\u73b0\u6709\u952e\u7684\u8d4b\u503c\u4f1a\u8986\u76d6\u65e7\u503c\u3002 \u6dfb\u52a0\u65b0\u952e\u503c\u548c\u4fee\u6539\u503c\u8bed\u6cd5\u4e00\u6837", 
            "title": "\u64cd\u4f5c"
        }, 
        {
            "location": "/python/py2_data/#_17", 
            "text": "dict={ a : apple , b : banana , o : orange }\nfor i in dict:\n        print ( dict[%s]=  % i,dict[i] )\nfor (k,v) in  dict.items():\n        print ( dict[%s]=  % k,v  )", 
            "title": "\u904d\u5386\u5b57\u5178"
        }, 
        {
            "location": "/python/py2_data/#_18", 
            "text": "", 
            "title": "\u5b57\u7b26\u4e32"
        }, 
        {
            "location": "/python/py2_data/#_19", 
            "text": "str = 'myname is {0}'\nprint(str.format('wujiyu'))\n\ndics =['kb','mb']\n'''\u53c2\u6570\u53ef\u4ee5\u662f\u590d\u5408\u5143\u7d201mb=1024kb'''\nstrarr = '1{0[1]}=1024{0[0]}'\nprint(strarr.format(dics))\n\n'''.1 \u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u7b2c\u4e00\u4f4d'''\nprint('{0:.1f}{1}'.format(698.24,'GB'))", 
            "title": "\u683c\u5f0f\u5316"
        }, 
        {
            "location": "/python/py2_data/#_20", 
            "text": "str = 'Myname=2 pas=3'\n'''\u5c0f\u5199'''\nprint(str.lower())\n'''\u5206\u6bb5'''\nprint(str.split(' '))\n'''\u8ba1\u6570'''\nprint(str.count('a'))\n'''\u5207\u7247'''\nprint(str[0:3])", 
            "title": "\u5176\u4ed6"
        }, 
        {
            "location": "/python/py2_data/#byte", 
            "text": "x = b'ABC'", 
            "title": "Byte"
        }, 
        {
            "location": "/python/py3_controller/", 
            "text": "python\u63a7\u5236\u6d41\u7a0b\n\n\n\u6761\u4ef6\u5224\u65ad\n\n\nif\n\u5224\u65ad\n\n\n# if\nif True:\n    print(\nIt is True\n)\n\n#if ..else\nage =18\nif age\n=18:\n    print(\nadlut\n)\nelse:\n    print(\nchild\n)\n\n#if ..elif..else\nv=1\nif v==1:\n    print(\nv1\n)\nelif v==2:\n    print(\nv2\n)\nelse:\n    print(\nvother\n)\n\n\n\n\n\u5faa\u73af\n\n\npython \u5faa\u73af\u4f5c\u7528\u5bf9\u8c61:\nlist\n ,\ntuple\n,\ndict\n,\nset\n,\nstr\n,\ngenerator\n,\u8fd9\u4e9b\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8efor\u5faa\u73af\u7684\u5bf9\u8c61\u7edf\u79f0\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61:\nIterable\n\n\nfor\n\u5faa\u73af\n\n\n#for...in\nnames = ['a', 'b', 'c']\nfor name in names:\n    print(name)\n\n# \u52a0\u7d22\u5f15\nfor index,name in enumerate(names):\n    print(index,name)\n\n# \u591a\u4e2a\u53d8\u91cf\nfor x, y in [(1, 1), (2, 4), (3, 9)]:\n    print(x,y)\n\n#\u5faa\u73af\u5b57\u7b26\u4e32\nfo_str = \nhello\n\nfor word in fo_str:\n    print(word)\n\n\n\n\n\nwhile\n\u5faa\u73af\n\n\nn = 0\nwhile n \n5:\n    n = n +1\n\n\n\n\n\u8868\u8fbe\u5f0f\n\n\n  print(11/2) #5.5\n  print(11//2)#5\n  print(-11//2)#-6\n  print(11.0//2)#5.0\n  print(11**2)#121\n  print(11%2)#1\n\n\n\n\n\n\n/ \u8fd0\u7b97\u7b26\u6267\u884c\u6d6e\u70b9\u9664\u6cd5\u3002\u5373\u4fbf\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f int\uff0c\u5b83\u4e5f\u8fd4\u56de\u4e00\u4e2a float \u6d6e\u70b9\u6570\u3002\n\n\n// \u8fd0\u7b97\u7b26\u6267\u884c\u53e4\u602a\u7684\u6574\u6570\u9664\u6cd5\u3002\u5982\u679c\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u53ef\u5c06\u5176\u89c6\u4e3a\u671d\u5411\u5c0f\u6570\u4f4d\u53d6\u6574\uff08\u4e0d\u662f\u56db\u820d\u4e94\u5165\uff09\uff0c\u4f46\u662f\u8981\u5c0f\u5fc3\u8fd9\u4e00\u70b9\u3002\n\n\n\u5f53\u6574\u6570\u9664\u4ee5\u8d1f\u6570\uff0c // \u8fd0\u7b97\u7b26\u5c06\u7ed3\u679c\u671d\u7740\u6700\u8fd1\u7684\u6574\u6570\u201c\u5411\u4e0a\u201d\u56db\u820d\u4e94\u5165\u3002\u4ece\u6570\u5b66\u89d2\u5ea6\u6765\u8bf4\uff0c\u7531\u4e8e \u22126 \u6bd4 \u22125 \u8981\u5c0f\uff0c\u5b83\u662f\u201c\u5411\u4e0b\u201d\u56db\u820d\u4e94\u5165\uff0c\u5982\u679c\u671f\u671b\u5c06\u7ed3\u679c\u53d6\u6574\u4e3a \u22125\uff0c\u5b83\u5c06\u4f1a\u8bef\u5bfc\u4f60\u3002\n\n\n// \u8fd0\u7b97\u7b26\u5e76\u975e\u603b\u662f\u8fd4\u56de\u6574\u6570\u7ed3\u679c\u3002\u5982\u679c\u5206\u5b50\u6216\u8005\u5206\u6bcd\u662f float\uff0c\u5b83\u4ecd\u5c06\u671d\u7740\u6700\u8fd1\u7684\u6574\u6570\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u4f46\u5b9e\u9645\u8fd4\u56de\u7684\u503c\u5c06\u4f1a\u662f float \u7c7b\u578b\u3002\n\n\n** \u8fd0\u7b97\u7b26\u7684\u610f\u601d\u662f\u201c\u8ba1\u7b97\u5e42\u201d\uff0c112\u7ed3\u679c\u4e3a 121 \u3002\n\n\n% \u8fd0\u7b97\u7b26\u7ed9\u51fa\u4e86\u8fdb\u884c\u6574\u9664\u4e4b\u540e\u7684\u4f59\u6570\u300211 \u9664\u4ee5 2 \u7ed3\u679c\u4e3a 5 \u4ee5\u53ca\u4f59\u6570 1\uff0c\u56e0\u6b64\u6b64\u5904\u7684\u7ed3\u679c\u4e3a 1\u3002 7  \u4e0d\u652f\u6301\u81ea\u589e(++)\u81ea\u51cf(\u2014)", 
            "title": "\u63a7\u5236\u6d41\u7a0b"
        }, 
        {
            "location": "/python/py3_controller/#python", 
            "text": "", 
            "title": "python\u63a7\u5236\u6d41\u7a0b"
        }, 
        {
            "location": "/python/py3_controller/#_1", 
            "text": "", 
            "title": "\u6761\u4ef6\u5224\u65ad"
        }, 
        {
            "location": "/python/py3_controller/#if", 
            "text": "# if\nif True:\n    print( It is True )\n\n#if ..else\nage =18\nif age =18:\n    print( adlut )\nelse:\n    print( child )\n\n#if ..elif..else\nv=1\nif v==1:\n    print( v1 )\nelif v==2:\n    print( v2 )\nelse:\n    print( vother )", 
            "title": "if\u5224\u65ad"
        }, 
        {
            "location": "/python/py3_controller/#_2", 
            "text": "python \u5faa\u73af\u4f5c\u7528\u5bf9\u8c61: list  , tuple , dict , set , str , generator ,\u8fd9\u4e9b\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8efor\u5faa\u73af\u7684\u5bf9\u8c61\u7edf\u79f0\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61: Iterable", 
            "title": "\u5faa\u73af"
        }, 
        {
            "location": "/python/py3_controller/#for", 
            "text": "#for...in\nnames = ['a', 'b', 'c']\nfor name in names:\n    print(name)\n\n# \u52a0\u7d22\u5f15\nfor index,name in enumerate(names):\n    print(index,name)\n\n# \u591a\u4e2a\u53d8\u91cf\nfor x, y in [(1, 1), (2, 4), (3, 9)]:\n    print(x,y)\n\n#\u5faa\u73af\u5b57\u7b26\u4e32\nfo_str =  hello \nfor word in fo_str:\n    print(word)", 
            "title": "for\u5faa\u73af"
        }, 
        {
            "location": "/python/py3_controller/#while", 
            "text": "n = 0\nwhile n  5:\n    n = n +1", 
            "title": "while\u5faa\u73af"
        }, 
        {
            "location": "/python/py3_controller/#_3", 
            "text": "print(11/2) #5.5\n  print(11//2)#5\n  print(-11//2)#-6\n  print(11.0//2)#5.0\n  print(11**2)#121\n  print(11%2)#1   / \u8fd0\u7b97\u7b26\u6267\u884c\u6d6e\u70b9\u9664\u6cd5\u3002\u5373\u4fbf\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f int\uff0c\u5b83\u4e5f\u8fd4\u56de\u4e00\u4e2a float \u6d6e\u70b9\u6570\u3002  // \u8fd0\u7b97\u7b26\u6267\u884c\u53e4\u602a\u7684\u6574\u6570\u9664\u6cd5\u3002\u5982\u679c\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u53ef\u5c06\u5176\u89c6\u4e3a\u671d\u5411\u5c0f\u6570\u4f4d\u53d6\u6574\uff08\u4e0d\u662f\u56db\u820d\u4e94\u5165\uff09\uff0c\u4f46\u662f\u8981\u5c0f\u5fc3\u8fd9\u4e00\u70b9\u3002  \u5f53\u6574\u6570\u9664\u4ee5\u8d1f\u6570\uff0c // \u8fd0\u7b97\u7b26\u5c06\u7ed3\u679c\u671d\u7740\u6700\u8fd1\u7684\u6574\u6570\u201c\u5411\u4e0a\u201d\u56db\u820d\u4e94\u5165\u3002\u4ece\u6570\u5b66\u89d2\u5ea6\u6765\u8bf4\uff0c\u7531\u4e8e \u22126 \u6bd4 \u22125 \u8981\u5c0f\uff0c\u5b83\u662f\u201c\u5411\u4e0b\u201d\u56db\u820d\u4e94\u5165\uff0c\u5982\u679c\u671f\u671b\u5c06\u7ed3\u679c\u53d6\u6574\u4e3a \u22125\uff0c\u5b83\u5c06\u4f1a\u8bef\u5bfc\u4f60\u3002  // \u8fd0\u7b97\u7b26\u5e76\u975e\u603b\u662f\u8fd4\u56de\u6574\u6570\u7ed3\u679c\u3002\u5982\u679c\u5206\u5b50\u6216\u8005\u5206\u6bcd\u662f float\uff0c\u5b83\u4ecd\u5c06\u671d\u7740\u6700\u8fd1\u7684\u6574\u6570\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u4f46\u5b9e\u9645\u8fd4\u56de\u7684\u503c\u5c06\u4f1a\u662f float \u7c7b\u578b\u3002  ** \u8fd0\u7b97\u7b26\u7684\u610f\u601d\u662f\u201c\u8ba1\u7b97\u5e42\u201d\uff0c112\u7ed3\u679c\u4e3a 121 \u3002  % \u8fd0\u7b97\u7b26\u7ed9\u51fa\u4e86\u8fdb\u884c\u6574\u9664\u4e4b\u540e\u7684\u4f59\u6570\u300211 \u9664\u4ee5 2 \u7ed3\u679c\u4e3a 5 \u4ee5\u53ca\u4f59\u6570 1\uff0c\u56e0\u6b64\u6b64\u5904\u7684\u7ed3\u679c\u4e3a 1\u3002 7  \u4e0d\u652f\u6301\u81ea\u589e(++)\u81ea\u51cf(\u2014)", 
            "title": "\u8868\u8fbe\u5f0f"
        }, 
        {
            "location": "/python/py4_func/", 
            "text": "\u51fd\u6570\n\n\n\u51fd\u6570\u7b80\u4ecb\n\n\n\u51fd\u6570\u5176\u5b9e\u5c31\u662f\u529f\u80fd\u7684\u62bd\u8c61,\u7528\u4e8e\u5c01\u88c5\u4ee3\u7801.python\u7684\n\u5185\u7f6e\u51fd\u6570\u5217\u8868\n:\n\n\n\u5b9a\u4e49\u51fd\u6570\n\n\n#\u5b9a\u4e49\u57fa\u672c\u51fd\u6570\ndef mymax(a,b):\n    if not isinstance(a, (int, float)) or not isinstance(b, (int, float)):\n        raise TypeError('bad operand type')\n    return a\nb and a or b\n    pass\nprint(mymax(2,1))\n\n\n\n\n\u8fd4\u56de\u591a\u4e2a\u503c\n\n\n#\u8fd4\u56de\u591a\u4e2a\u503c,\u5176\u5b9e\u53ea\u662f\u591a\u4e2a\u503c\u6253\u5305\u5728\u4e00\u8d77\u8fd4\u56de,\u5c31\u662f\u4e00\u4e2atuple\ndef returnmulti(a,b):\n    return a,b\n\nc,d=returnmulti(1,2)\nprint(c,d)\n\n\n\n\n\u51fd\u6570\u53c2\u6570\n\n\n\u9ed8\u8ba4\u53c2\u6570\n\n\n\u9ed8\u8ba4\u53c2\u6570\u5728\u4f7f\u7528\u662f\u65e0\u9700\u4f20\u5165,\u51cf\u5c11\u8c03\u7528\u7684\u590d\u6742\u6027.\n\n\ndef power(x, n=2):\n    s = 1\n    while n \n 0:\n        n = n - 1\n        s = s * x\n    return s\n#power(5),\u76f8\u5f53\u4e8e\u8c03\u7528\u4e86power(5,2)\npower(5)\n\n\n\n\n\u4fdd\u6301\u9ed8\u8ba4\u53c2\u6570\u4e3a\u4e0d\u53d8\u5bf9\u8c61,\u6216\u8005\u662f\u5728\u5185\u90e8\u4f5c\u5224\u65ad\n\n\n\u9ed8\u8ba4\u53c2\u6570\u5728\u5185\u5b58\u4e2d\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61,\u6240\u4ee5\u5982\u679c\u662f\u8bbe\u7f6e\u4e3a\u53ef\u53d8\u5bf9\u8c61\u7684\u8bdd,\u4f1a\u51fa\u73b0\u53c2\u6570\u4e00\u76f4\u7d2f\u52a0\u7684\u60c5\u51b5\n\n\ndef de_func(a=[]):\n    a.append(\ntest\n)\n    return a\n\nprint(de_func())\nprint(de_func())\n\n\n\n\n\n\u53ef\u53d8\u53c2\u6570\n\n\n\u53ef\u53d8\u53c2\u6570\u662f\u5728\u53c2\u6570\u4e2a\u6570\u4e0d\u786e\u5b9a\u4e2a\u6570\u4e0b\u4f7f\u7528,\u7528\n*\n\u53f7\u4ee3\u8868\u53ef\u53d8\u53c2\u6570,\u63a5\u6536\u7684\u662f\u4e00\u4e2a\ntuple\n\n\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\nprint(calc(1,2))\nprint(calc(1,2,3))\n\n\n\n\n\u5173\u952e\u5b57\u53c2\u6570\n\n\n\u81ea\u52a8\u5c06\u53c2\u6570\u5c01\u88c5\u6210\ndict\n\n\ndef dict_params(**kw):\n    print(kw)\ndict_params(a=1)\n#output: {'a': 1}\n\n\n\n\n\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n\n\n#\u9650\u5b9a\u53c2\u6570\u7528*\u53f7\u5206\u5272\ndef person( *, city, job):\n    print( city, job)\n#\u53ea\u80fd\u4f20city,job\u4e24\u4e2a\u53c2\u6570\nperson(city=\nguangzhou\n,job=\ngamedevelop\n)\n\n#\u5982\u679c\u6709\u53ef\u53d8\u53c2\u6570,*\u53f7\u53ef\u7701\u7565\ndef person1( *info, city, job):\n    print(info,city, job)\n\nperson1(1,2,city=\nguangzhou\n,job=\ngamedevelop\n)\n\n\n\n\n\u53c2\u6570\u987a\u5e8f\n\n\n\u591a\u79cd\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u6df7\u7528,\u4f46\u662f\u53c2\u6570\u5b9a\u4e49\u7684\u987a\u5e8f\u5fc5\u987b\u662f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\n\n\ndef f1(a, b, c=0, *args, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'args =', args, 'kw =', kw)\n\ndef f2(a, b, c=0, *, d, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'd =', d, 'kw =', kw)\n\n\n\n\n\u9012\u5f52\u51fd\u6570\n\n\n\u51fd\u6570\u8c03\u7528\u5176\u672c\u8eab\u5c31\u662f\u9012\u5f52\n\n\n#\u8ba1\u7b97\u9636\u4e58\ndef fact(n):\n    if n==1:\n        return 1\n    return n * fact(n - 1)\n\nprint(fact(5))\n\n#\u8ba1\u7b97\u8fc7\u7a0b\n'''\n===\n fact(5)\n===\n 5 * fact(4)\n===\n 5 * (4 * fact(3))\n===\n 5 * (4 * (3 * fact(2)))\n===\n 5 * (4 * (3 * (2 * fact(1))))\n===\n 5 * (4 * (3 * (2 * 1)))\n===\n 5 * (4 * (3 * 2))\n===\n 5 * (4 * 6)\n===\n 5 * 24\n===\n 120\n'''\n\n\n\n\n\u533f\u540d\u51fd\u6570\nlambda\n\n\n\u8bed\u6cd5:\u5192\u53f7\u524d\u662f\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u9694\u5f00\uff0c\u5192\u53f7\u53f3\u8fb9\u7684\u8fd4\u56de\u503c\n\n\n#\u666e\u901a\u51fd\u6570\ndef f(x):\n    return x*2\nf(2)\n#lambda\nf=lambda x:x*2\nf(2)", 
            "title": "\u51fd\u6570"
        }, 
        {
            "location": "/python/py4_func/#_1", 
            "text": "", 
            "title": "\u51fd\u6570"
        }, 
        {
            "location": "/python/py4_func/#_2", 
            "text": "\u51fd\u6570\u5176\u5b9e\u5c31\u662f\u529f\u80fd\u7684\u62bd\u8c61,\u7528\u4e8e\u5c01\u88c5\u4ee3\u7801.python\u7684 \u5185\u7f6e\u51fd\u6570\u5217\u8868 :", 
            "title": "\u51fd\u6570\u7b80\u4ecb"
        }, 
        {
            "location": "/python/py4_func/#_3", 
            "text": "#\u5b9a\u4e49\u57fa\u672c\u51fd\u6570\ndef mymax(a,b):\n    if not isinstance(a, (int, float)) or not isinstance(b, (int, float)):\n        raise TypeError('bad operand type')\n    return a b and a or b\n    pass\nprint(mymax(2,1))", 
            "title": "\u5b9a\u4e49\u51fd\u6570"
        }, 
        {
            "location": "/python/py4_func/#_4", 
            "text": "#\u8fd4\u56de\u591a\u4e2a\u503c,\u5176\u5b9e\u53ea\u662f\u591a\u4e2a\u503c\u6253\u5305\u5728\u4e00\u8d77\u8fd4\u56de,\u5c31\u662f\u4e00\u4e2atuple\ndef returnmulti(a,b):\n    return a,b\n\nc,d=returnmulti(1,2)\nprint(c,d)", 
            "title": "\u8fd4\u56de\u591a\u4e2a\u503c"
        }, 
        {
            "location": "/python/py4_func/#_5", 
            "text": "", 
            "title": "\u51fd\u6570\u53c2\u6570"
        }, 
        {
            "location": "/python/py4_func/#_6", 
            "text": "", 
            "title": "\u9ed8\u8ba4\u53c2\u6570"
        }, 
        {
            "location": "/python/py4_func/#_7", 
            "text": "def power(x, n=2):\n    s = 1\n    while n   0:\n        n = n - 1\n        s = s * x\n    return s\n#power(5),\u76f8\u5f53\u4e8e\u8c03\u7528\u4e86power(5,2)\npower(5)", 
            "title": "\u9ed8\u8ba4\u53c2\u6570\u5728\u4f7f\u7528\u662f\u65e0\u9700\u4f20\u5165,\u51cf\u5c11\u8c03\u7528\u7684\u590d\u6742\u6027."
        }, 
        {
            "location": "/python/py4_func/#_8", 
            "text": "\u9ed8\u8ba4\u53c2\u6570\u5728\u5185\u5b58\u4e2d\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61,\u6240\u4ee5\u5982\u679c\u662f\u8bbe\u7f6e\u4e3a\u53ef\u53d8\u5bf9\u8c61\u7684\u8bdd,\u4f1a\u51fa\u73b0\u53c2\u6570\u4e00\u76f4\u7d2f\u52a0\u7684\u60c5\u51b5  def de_func(a=[]):\n    a.append( test )\n    return a\n\nprint(de_func())\nprint(de_func())", 
            "title": "\u4fdd\u6301\u9ed8\u8ba4\u53c2\u6570\u4e3a\u4e0d\u53d8\u5bf9\u8c61,\u6216\u8005\u662f\u5728\u5185\u90e8\u4f5c\u5224\u65ad"
        }, 
        {
            "location": "/python/py4_func/#_9", 
            "text": "\u53ef\u53d8\u53c2\u6570\u662f\u5728\u53c2\u6570\u4e2a\u6570\u4e0d\u786e\u5b9a\u4e2a\u6570\u4e0b\u4f7f\u7528,\u7528 * \u53f7\u4ee3\u8868\u53ef\u53d8\u53c2\u6570,\u63a5\u6536\u7684\u662f\u4e00\u4e2a tuple  def calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\nprint(calc(1,2))\nprint(calc(1,2,3))", 
            "title": "\u53ef\u53d8\u53c2\u6570"
        }, 
        {
            "location": "/python/py4_func/#_10", 
            "text": "\u81ea\u52a8\u5c06\u53c2\u6570\u5c01\u88c5\u6210 dict  def dict_params(**kw):\n    print(kw)\ndict_params(a=1)\n#output: {'a': 1}", 
            "title": "\u5173\u952e\u5b57\u53c2\u6570"
        }, 
        {
            "location": "/python/py4_func/#_11", 
            "text": "#\u9650\u5b9a\u53c2\u6570\u7528*\u53f7\u5206\u5272\ndef person( *, city, job):\n    print( city, job)\n#\u53ea\u80fd\u4f20city,job\u4e24\u4e2a\u53c2\u6570\nperson(city= guangzhou ,job= gamedevelop )\n\n#\u5982\u679c\u6709\u53ef\u53d8\u53c2\u6570,*\u53f7\u53ef\u7701\u7565\ndef person1( *info, city, job):\n    print(info,city, job)\n\nperson1(1,2,city= guangzhou ,job= gamedevelop )", 
            "title": "\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570"
        }, 
        {
            "location": "/python/py4_func/#_12", 
            "text": "\u591a\u79cd\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u6df7\u7528,\u4f46\u662f\u53c2\u6570\u5b9a\u4e49\u7684\u987a\u5e8f\u5fc5\u987b\u662f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570  def f1(a, b, c=0, *args, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'args =', args, 'kw =', kw)\n\ndef f2(a, b, c=0, *, d, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'd =', d, 'kw =', kw)", 
            "title": "\u53c2\u6570\u987a\u5e8f"
        }, 
        {
            "location": "/python/py4_func/#_13", 
            "text": "\u51fd\u6570\u8c03\u7528\u5176\u672c\u8eab\u5c31\u662f\u9012\u5f52  #\u8ba1\u7b97\u9636\u4e58\ndef fact(n):\n    if n==1:\n        return 1\n    return n * fact(n - 1)\n\nprint(fact(5))\n\n#\u8ba1\u7b97\u8fc7\u7a0b\n'''\n===  fact(5)\n===  5 * fact(4)\n===  5 * (4 * fact(3))\n===  5 * (4 * (3 * fact(2)))\n===  5 * (4 * (3 * (2 * fact(1))))\n===  5 * (4 * (3 * (2 * 1)))\n===  5 * (4 * (3 * 2))\n===  5 * (4 * 6)\n===  5 * 24\n===  120\n'''", 
            "title": "\u9012\u5f52\u51fd\u6570"
        }, 
        {
            "location": "/python/py4_func/#lambda", 
            "text": "\u8bed\u6cd5:\u5192\u53f7\u524d\u662f\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u9694\u5f00\uff0c\u5192\u53f7\u53f3\u8fb9\u7684\u8fd4\u56de\u503c  #\u666e\u901a\u51fd\u6570\ndef f(x):\n    return x*2\nf(2)\n#lambda\nf=lambda x:x*2\nf(2)", 
            "title": "\u533f\u540d\u51fd\u6570lambda"
        }, 
        {
            "location": "/python/py5_step/", 
            "text": "\u5176\u4ed6\u7279\u6027\n\n\n\u5207\u7247(Slice)\n\n\n\u5207\u7247\u5927\u5927\u7b80\u5316\u4e86\u53d6\u5143\u7d20\u7684\u64cd\u4f5c\n\n\n#\u8bb0\u4f4f\u5207\u7247\u5305\u542b\u5934\u4e0d\u5305\u542b\u5c3e\nL = [1,2,3,4]\n#\u7b2c1,2\u4e2a\nprint(L[0:2])\n#\u590d\u5236\u539f\u6765\u7684list\nprint(L[:])\n\n\n\n\n\u5217\u8868\u751f\u6210\u5f0f\n\n\n#\u5217\u8868\u751f\u6210\u5668--\n[1, 2, 3, 4]\nprint(list(range(1,5)))\n# \u751f\u62101*1,2*2... --\n[1, 4, 9, 16]\nprint([x*x for x in range(1,5)])\n#\u7ec4\u5408\u751f\u6210--\n['ac', 'ad', 'bc', 'bd']\nprint([m+n for m in 'ab' for n in \ncd\n])\n#\u8c03\u7528\u51fd\u6570\nprint([a.upper() for a in [\na\n,\nb\n]])\n\n\n\n\n\u751f\u6210\u5668(generator)\n\n\n\u5217\u8868\u751f\u6210\u5f0f\u662f\u76f4\u63a5\u751f\u6210\u5217\u8868,\u6240\u4ee5\u5728\u751f\u6210\u5927\u5217\u8868\u4f1a\u6d88\u8017\u5927\u91cf\u7684\u5185\u5b58.\n\n\nrang\n\u751f\u6210\n\n\n\u89e3\u51b3\u529e\u6cd5\u53ea\u662f\u5728\u751f\u6210\u751f\u6210\u5668\u65f6\u628a\n[]\n\u6539\u6210\u4e86\n()\n\npyton2\u7684\u5173\u952e\u5b57\u662f\u7528\nxrang\n\npython3\u7684\u5173\u952e\u5b57\u8fd8\u662f\u7528\nrang\n\n\n#python2\ng = (x * x for x in xrange(10))\n#python3\ng = (x * x for x in range(10))\n\ngenerator object \ngenexpr\n at 0x00557620\n\nprint(g)\nfor x in g:\n    print(x)\n    pass\n\n\n\n\n\nyield\n\u751f\u6210\u5668\n\n\n\u57fa\u672c\u7528\u6cd5\n\n\ndef ye():\n    yield 1\n    yield 2\n\ng= ye()\nprint(g)\nfor x in g:\n    print(x)\n'''\noutput is :\n\ngenerator object ye at 0x00473E18\n\n1\n2\n'''\n\n\n\n\nyield\u4e2dreturn\u7684\u4f5c\u7528\n\n\nyield\n \u4e2d\u65e0\u6cd5\nreturn\n\u5177\u4f53\u503c\u8fde\nNone\n\u503c\u90fd\u4e0d\u884c,\nyield\n\u4e2d\nreutrn\n\u662f\u7528\u6765\u4e2d\u6b62\u751f\u6210\u7684\n\n\ndef ye2():\n    yield 1\n    return None\n    yield 2\ng2 = ye2()\nfor x in g2:\n        print(x)\n'''\noutput is :\n1\n'''\n\n\n\n\n\n\ngenerator\n \u662f\u7528\u6765\u4ea7\u751f\u4e00\u7cfb\u5217\u503c\u7684\n\n\nyield\n \u5219\u50cf\u662f\ngenerator\n\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\n\n\nyield\n \u552f\u4e00\u6240\u505a\u7684\u53e6\u4e00\u4ef6\u4e8b\u5c31\u662f\u4fdd\u5b58\u4e00\u4e2a\ngenerator\n\u51fd\u6570\u7684\u72b6\u6001\n\n\ngenerator\n\u5c31\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff08\niterator\n\uff09\n\n\n\u548c\u8fed\u4ee3\u5668\u76f8\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\nnext()\n\u6765\u4ece\ngenerator\n\u4e2d\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c\n\n\n\u901a\u8fc7\u9690\u5f0f\u5730\u8c03\u7528\nnext()\n\u6765\u5ffd\u7565\u4e00\u4e9b\u503c\n\n\n\n\n\u8fed\u4ee3\u5668\n\n\n\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\nIterable\n\u5bf9\u8c61\n\n\nfrom collections import Iterable,Iterator\n\nprint(isinstance([],Iterable))\nprint(isinstance([],Iterator))\nprint(isinstance((x for x in range(10)), Iterable))\nprint(isinstance((x for x in range(10)), Iterator))\n'''\noutput is :\nTrue\nFalse\nTrue\nTrue\n'''\n\n\n\n\n\n\n\u51e1\u662f\u53ef\u4f5c\u7528\u4e8e\nfor\n\u5faa\u73af\u7684\u5bf9\u8c61\u90fd\u662f\nIterable\n\u7c7b\u578b\uff1b\n\n\n\u51e1\u662f\u53ef\u4f5c\u7528\u4e8e\nnext()\n\u51fd\u6570\u7684\u5bf9\u8c61\u90fd\u662f\nIterator\n\u7c7b\u578b\uff0c\u5b83\u4eec\u8868\u793a\u4e00\u4e2a\u60f0\u6027\u8ba1\u7b97\u7684\u5e8f\u5217\uff1b\n\n\n\u96c6\u5408\u6570\u636e\u7c7b\u578b\u5982\nlist\n\u3001\ndict\n\u3001\nstr\n\u7b49\u662f\nIterable\n\u4f46\u4e0d\u662f\nIterator\n\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u901a\u8fc7\niter()\n\u51fd\u6570\u83b7\u5f97\u4e00\u4e2a\nIterator\n\u5bf9\u8c61\n\n\n\n\n\u5176\u5b9e\nfor\n\u4e5f\u662f\u901a\u8fc7\nIterator\n\u6765\u5b8c\u6210\u7684\n\n\nfor x in [1, 2, 3, 4, 5]:\n    print(x)\n    pass\n#\u7b49\u4ef7\u4e8e\nit = iter([1, 2, 3, 4, 5])\nwhile True:\n    try:\n        x = next(it)\n        print(x)\n    except StopIteration:\n        break\n\n\n\n\nmap\n\n\nmap()\n\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\nIterable\n\uff0c\nmap\n\u5c06\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5230\u5e8f\u5217\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\nIterator\n\u8fd4\u56de\n\n\ndef f(x):\n    return x*x\n#r\u662f\u4e00\u4e2aIterator\nr = map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])\nprint(list(r))\n\n\n\n\nreduce\n\n\nreduce\n\u628a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u5728\u4e00\u4e2a\u5e8f\u5217\n[x1, x2, x3, ...]\n\u4e0a\uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\nreduce\n\u628a\u7ed3\u679c\u7ee7\u7eed\u548c\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u505a\u7d2f\u79ef\u8ba1\u7b97\uff0c\u5176\u6548\u679c\u5c31\u662f\uff1a\n\n\nreduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)\n\n\n\n\nfrom functools import reduce\ndef add(x, y):\n    return x + y\nprint(reduce(add, [1, 3, 5, 7, 9]))\n\n\n\n\nfilter\n\n\nfilter()\n\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u7b5b\u9009\u4e00\u4e2a\u961f\u5217\n\n\nfilter()\n\u4e5f\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u5e8f\u5217.\u548c\nmap()\n\u4e0d\u540c\u7684\u662f\uff0c\nfilter()\n\u628a\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u5143\u7d20,\u7136\u540e\u6839\u636e\u8fd4\u56de\u503c\u662f\nTrue\n\u8fd8\u662f\nFalse\n\u51b3\u5b9a\u4fdd\u7559\u8fd8\u662f\u4e22\u5f03\u8be5\u5143\u7d20.\n\u9009\u62e9\u5947\u6570:\n\n\ndef odd(n):\n    return n%2==1\n\nodd_arr = filter(odd,[1,2,3,4,5])\nprint(odd_arr)\n'''\n[1,3,5]\n'''\n\n\n\n\nsorted\n\n\nsorted()\n\u51fd\u6570\u7528\u4e8e\u6392\u5e8f,\u539f\u578b:\nsort([cmp[, key[, reverse]]])\n\n\n\u6570\u5b57\n\n\n#\u6570\u5b57\n#\u666e\u901a\u5c0f\u5230\u5927\nprint(sorted([1,5,4]))\n#\u666e\u901a\u5927\u5230\u5c0f\nprint(sorted([1,5,4],reverse = True))\n#\u6309\u81ea\u5b9a\u4e49\u89c4\u5219,\u7edd\u5bf9\u503c\nprint(sorted([1,-5,4],key=abs))\n'''\n[1, 4, 5]\n[5, 4, 1]\n[1, 4, -5]\n'''\n\n\n\n\n\u5b57\u7b26\u4e32\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5b57\u7b26\u4e32\u6392\u5e8f\uff0c\u662f\u6309\u7167ASCII\u7684\u5927\u5c0f\u6bd4\u8f83\u7684 \u6839\u636eASCII\u6392:0-9(\u5bf9\u5e94\u6570\u503c48-59),A-Z(\u5bf9\u5e94\u6570\u503c65-90),a-z(\u5bf9\u5e94\u6570\u503c97-122)\n\n\n#\u5b57\u7b26\u4e32\n#\u9ed8\u8ba4ascii\u5e8f\nprint(sorted(['a','C','b']))\nprint(sorted(['boat','cat','boot','too','to','To']))\n#\u5ffd\u7565\u5927\u5c0f\u5199\nprint(sorted(['a','C','b'],key=str.lower))\n#\u4ece\u77ed\u5230\u957f\nprint(sorted(['boat','cat','boot','too','to','To'],key=len))\n'''\n['C', 'a', 'b']\n['To', 'boat', 'boot', 'cat', 'to', 'too']\n['a', 'b', 'C']\n['to', 'To', 'cat', 'too', 'boat', 'boot']\n'''\n\n\n\n\n\u88c5\u9970\u5668\n\n\ndecorator\n\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570,\u5728\u4e0d\u6539\u53d8\u539f\u6709\u51fd\u6570\u7684\u7ed3\u6784\u4e0b\u8fd0\u884c\u65f6\u6dfb\u52a0\u529f\u80fd,\u7c7b\u4f3c\u4e8ejava\u4e2d\u7684\u4ee3\u7406\u7c7b.\n\n\nimport time\n\ndef log(func):\n    def wrapper(*args,**kw):\n        print(\ncall%s()\n% func.__name__)\n        return func(*args,**kw)\n    return wrapper\n\n@log\ndef now():\n    print(time.time())\n\nnow()\n'''\ncall,now()\n1464665858.0853982\n'''\n\n\n\n\n\u5e26\u51fd\u6570\u7684\u88c5\u9970\u5668:\n\n\nfunctools.wraps\n:\n__name__\n\u7b49\u5c5e\u6027\u590d\u5236\u5230\nwrapper()\n\n\nimport functools\n\ndef log(text):\n    def decorator(func):\n        @functools.wraps(func)\n        def wrapper(*args, **kw):\n            print('%s %s():' % (text, func.__name__))\n            return func(*args, **kw)\n        return wrapper\n    return decorator\n\n@log('execute')\ndef now():\n    print(time.time())\n\nnow()\n'''\nexecute now():\n1464666390.31384\n'''\n\n\n\n\nPartial function\n\n\n#16\u8fdb\u5236\u8f6c\u6362\u621010\u8fdb\u5236\nprint(int('100', base=16))\nprint(int('100',16))\n#\u4f7f\u7528functools.partial\u6784\u9020\nimport functools\nint2 = functools.partial(int, base=16)\nprint(int2('100'))\n'''\n256\n256\n256\n'''", 
            "title": "\u6b65\u9aa4"
        }, 
        {
            "location": "/python/py5_step/#_1", 
            "text": "", 
            "title": "\u5176\u4ed6\u7279\u6027"
        }, 
        {
            "location": "/python/py5_step/#slice", 
            "text": "\u5207\u7247\u5927\u5927\u7b80\u5316\u4e86\u53d6\u5143\u7d20\u7684\u64cd\u4f5c  #\u8bb0\u4f4f\u5207\u7247\u5305\u542b\u5934\u4e0d\u5305\u542b\u5c3e\nL = [1,2,3,4]\n#\u7b2c1,2\u4e2a\nprint(L[0:2])\n#\u590d\u5236\u539f\u6765\u7684list\nprint(L[:])", 
            "title": "\u5207\u7247(Slice)"
        }, 
        {
            "location": "/python/py5_step/#_2", 
            "text": "#\u5217\u8868\u751f\u6210\u5668-- [1, 2, 3, 4]\nprint(list(range(1,5)))\n# \u751f\u62101*1,2*2... -- [1, 4, 9, 16]\nprint([x*x for x in range(1,5)])\n#\u7ec4\u5408\u751f\u6210-- ['ac', 'ad', 'bc', 'bd']\nprint([m+n for m in 'ab' for n in  cd ])\n#\u8c03\u7528\u51fd\u6570\nprint([a.upper() for a in [ a , b ]])", 
            "title": "\u5217\u8868\u751f\u6210\u5f0f"
        }, 
        {
            "location": "/python/py5_step/#generator", 
            "text": "\u5217\u8868\u751f\u6210\u5f0f\u662f\u76f4\u63a5\u751f\u6210\u5217\u8868,\u6240\u4ee5\u5728\u751f\u6210\u5927\u5217\u8868\u4f1a\u6d88\u8017\u5927\u91cf\u7684\u5185\u5b58.", 
            "title": "\u751f\u6210\u5668(generator)"
        }, 
        {
            "location": "/python/py5_step/#rang", 
            "text": "\u89e3\u51b3\u529e\u6cd5\u53ea\u662f\u5728\u751f\u6210\u751f\u6210\u5668\u65f6\u628a [] \u6539\u6210\u4e86 () \npyton2\u7684\u5173\u952e\u5b57\u662f\u7528 xrang \npython3\u7684\u5173\u952e\u5b57\u8fd8\u662f\u7528 rang  #python2\ng = (x * x for x in xrange(10))\n#python3\ng = (x * x for x in range(10)) generator object  genexpr  at 0x00557620 \nprint(g)\nfor x in g:\n    print(x)\n    pass", 
            "title": "rang\u751f\u6210"
        }, 
        {
            "location": "/python/py5_step/#yield", 
            "text": "", 
            "title": "yield\u751f\u6210\u5668"
        }, 
        {
            "location": "/python/py5_step/#_3", 
            "text": "def ye():\n    yield 1\n    yield 2\n\ng= ye()\nprint(g)\nfor x in g:\n    print(x)\n'''\noutput is : generator object ye at 0x00473E18 \n1\n2\n'''", 
            "title": "\u57fa\u672c\u7528\u6cd5"
        }, 
        {
            "location": "/python/py5_step/#yieldreturn", 
            "text": "yield  \u4e2d\u65e0\u6cd5 return \u5177\u4f53\u503c\u8fde None \u503c\u90fd\u4e0d\u884c, yield \u4e2d reutrn \u662f\u7528\u6765\u4e2d\u6b62\u751f\u6210\u7684  def ye2():\n    yield 1\n    return None\n    yield 2\ng2 = ye2()\nfor x in g2:\n        print(x)\n'''\noutput is :\n1\n'''   generator  \u662f\u7528\u6765\u4ea7\u751f\u4e00\u7cfb\u5217\u503c\u7684  yield  \u5219\u50cf\u662f generator \u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c  yield  \u552f\u4e00\u6240\u505a\u7684\u53e6\u4e00\u4ef6\u4e8b\u5c31\u662f\u4fdd\u5b58\u4e00\u4e2a generator \u51fd\u6570\u7684\u72b6\u6001  generator \u5c31\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff08 iterator \uff09  \u548c\u8fed\u4ee3\u5668\u76f8\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 next() \u6765\u4ece generator \u4e2d\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c  \u901a\u8fc7\u9690\u5f0f\u5730\u8c03\u7528 next() \u6765\u5ffd\u7565\u4e00\u4e9b\u503c", 
            "title": "yield\u4e2dreturn\u7684\u4f5c\u7528"
        }, 
        {
            "location": "/python/py5_step/#_4", 
            "text": "\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f Iterable \u5bf9\u8c61  from collections import Iterable,Iterator\n\nprint(isinstance([],Iterable))\nprint(isinstance([],Iterator))\nprint(isinstance((x for x in range(10)), Iterable))\nprint(isinstance((x for x in range(10)), Iterator))\n'''\noutput is :\nTrue\nFalse\nTrue\nTrue\n'''   \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e for \u5faa\u73af\u7684\u5bf9\u8c61\u90fd\u662f Iterable \u7c7b\u578b\uff1b  \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e next() \u51fd\u6570\u7684\u5bf9\u8c61\u90fd\u662f Iterator \u7c7b\u578b\uff0c\u5b83\u4eec\u8868\u793a\u4e00\u4e2a\u60f0\u6027\u8ba1\u7b97\u7684\u5e8f\u5217\uff1b  \u96c6\u5408\u6570\u636e\u7c7b\u578b\u5982 list \u3001 dict \u3001 str \u7b49\u662f Iterable \u4f46\u4e0d\u662f Iterator \uff0c\u4e0d\u8fc7\u53ef\u4ee5\u901a\u8fc7 iter() \u51fd\u6570\u83b7\u5f97\u4e00\u4e2a Iterator \u5bf9\u8c61   \u5176\u5b9e for \u4e5f\u662f\u901a\u8fc7 Iterator \u6765\u5b8c\u6210\u7684  for x in [1, 2, 3, 4, 5]:\n    print(x)\n    pass\n#\u7b49\u4ef7\u4e8e\nit = iter([1, 2, 3, 4, 5])\nwhile True:\n    try:\n        x = next(it)\n        print(x)\n    except StopIteration:\n        break", 
            "title": "\u8fed\u4ee3\u5668"
        }, 
        {
            "location": "/python/py5_step/#map", 
            "text": "map() \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\uff0c\u4e00\u4e2a\u662f Iterable \uff0c map \u5c06\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5230\u5e8f\u5217\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684 Iterator \u8fd4\u56de  def f(x):\n    return x*x\n#r\u662f\u4e00\u4e2aIterator\nr = map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])\nprint(list(r))", 
            "title": "map"
        }, 
        {
            "location": "/python/py5_step/#reduce", 
            "text": "reduce \u628a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u5728\u4e00\u4e2a\u5e8f\u5217 [x1, x2, x3, ...] \u4e0a\uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c reduce \u628a\u7ed3\u679c\u7ee7\u7eed\u548c\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u505a\u7d2f\u79ef\u8ba1\u7b97\uff0c\u5176\u6548\u679c\u5c31\u662f\uff1a  reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)  from functools import reduce\ndef add(x, y):\n    return x + y\nprint(reduce(add, [1, 3, 5, 7, 9]))", 
            "title": "reduce"
        }, 
        {
            "location": "/python/py5_step/#filter", 
            "text": "filter() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u7b5b\u9009\u4e00\u4e2a\u961f\u5217  filter() \u4e5f\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u5e8f\u5217.\u548c map() \u4e0d\u540c\u7684\u662f\uff0c filter() \u628a\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u5143\u7d20,\u7136\u540e\u6839\u636e\u8fd4\u56de\u503c\u662f True \u8fd8\u662f False \u51b3\u5b9a\u4fdd\u7559\u8fd8\u662f\u4e22\u5f03\u8be5\u5143\u7d20.\n\u9009\u62e9\u5947\u6570:  def odd(n):\n    return n%2==1\n\nodd_arr = filter(odd,[1,2,3,4,5])\nprint(odd_arr)\n'''\n[1,3,5]\n'''", 
            "title": "filter"
        }, 
        {
            "location": "/python/py5_step/#sorted", 
            "text": "sorted() \u51fd\u6570\u7528\u4e8e\u6392\u5e8f,\u539f\u578b: sort([cmp[, key[, reverse]]])", 
            "title": "sorted"
        }, 
        {
            "location": "/python/py5_step/#_5", 
            "text": "#\u6570\u5b57\n#\u666e\u901a\u5c0f\u5230\u5927\nprint(sorted([1,5,4]))\n#\u666e\u901a\u5927\u5230\u5c0f\nprint(sorted([1,5,4],reverse = True))\n#\u6309\u81ea\u5b9a\u4e49\u89c4\u5219,\u7edd\u5bf9\u503c\nprint(sorted([1,-5,4],key=abs))\n'''\n[1, 4, 5]\n[5, 4, 1]\n[1, 4, -5]\n'''", 
            "title": "\u6570\u5b57"
        }, 
        {
            "location": "/python/py5_step/#_6", 
            "text": "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5b57\u7b26\u4e32\u6392\u5e8f\uff0c\u662f\u6309\u7167ASCII\u7684\u5927\u5c0f\u6bd4\u8f83\u7684 \u6839\u636eASCII\u6392:0-9(\u5bf9\u5e94\u6570\u503c48-59),A-Z(\u5bf9\u5e94\u6570\u503c65-90),a-z(\u5bf9\u5e94\u6570\u503c97-122)  #\u5b57\u7b26\u4e32\n#\u9ed8\u8ba4ascii\u5e8f\nprint(sorted(['a','C','b']))\nprint(sorted(['boat','cat','boot','too','to','To']))\n#\u5ffd\u7565\u5927\u5c0f\u5199\nprint(sorted(['a','C','b'],key=str.lower))\n#\u4ece\u77ed\u5230\u957f\nprint(sorted(['boat','cat','boot','too','to','To'],key=len))\n'''\n['C', 'a', 'b']\n['To', 'boat', 'boot', 'cat', 'to', 'too']\n['a', 'b', 'C']\n['to', 'To', 'cat', 'too', 'boat', 'boot']\n'''", 
            "title": "\u5b57\u7b26\u4e32"
        }, 
        {
            "location": "/python/py5_step/#_7", 
            "text": "decorator \u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570,\u5728\u4e0d\u6539\u53d8\u539f\u6709\u51fd\u6570\u7684\u7ed3\u6784\u4e0b\u8fd0\u884c\u65f6\u6dfb\u52a0\u529f\u80fd,\u7c7b\u4f3c\u4e8ejava\u4e2d\u7684\u4ee3\u7406\u7c7b.  import time\n\ndef log(func):\n    def wrapper(*args,**kw):\n        print( call%s() % func.__name__)\n        return func(*args,**kw)\n    return wrapper\n\n@log\ndef now():\n    print(time.time())\n\nnow()\n'''\ncall,now()\n1464665858.0853982\n'''", 
            "title": "\u88c5\u9970\u5668"
        }, 
        {
            "location": "/python/py5_step/#_8", 
            "text": "functools.wraps : __name__ \u7b49\u5c5e\u6027\u590d\u5236\u5230 wrapper()  import functools\n\ndef log(text):\n    def decorator(func):\n        @functools.wraps(func)\n        def wrapper(*args, **kw):\n            print('%s %s():' % (text, func.__name__))\n            return func(*args, **kw)\n        return wrapper\n    return decorator\n\n@log('execute')\ndef now():\n    print(time.time())\n\nnow()\n'''\nexecute now():\n1464666390.31384\n'''", 
            "title": "\u5e26\u51fd\u6570\u7684\u88c5\u9970\u5668:"
        }, 
        {
            "location": "/python/py5_step/#partial-function", 
            "text": "#16\u8fdb\u5236\u8f6c\u6362\u621010\u8fdb\u5236\nprint(int('100', base=16))\nprint(int('100',16))\n#\u4f7f\u7528functools.partial\u6784\u9020\nimport functools\nint2 = functools.partial(int, base=16)\nprint(int2('100'))\n'''\n256\n256\n256\n'''", 
            "title": "Partial function"
        }, 
        {
            "location": "/python/py6_organize/", 
            "text": "python\u6a21\u5757\u7ec4\u7ec7\n\n\npython\u6a21\u5757\n\n\n\u6a21\u5757\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\n\u4e00\u4e2a\nabc.py\n\u7684\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u540d\u5b57\u53eb\nabc\n\u7684\u6a21\u5757\n\u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u9762\u90fd\u4f1a\u6709\u4e00\u4e2a\n__init__.py\n\u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219\uff0cPython\u5c31\u628a\u8fd9\u4e2a\u76ee\u5f55\u5f53\u6210\u666e\u901a\u76ee\u5f55\n\n\npackage1/\n    __init__.py\n    subPack1/\n        __init__.py\n        module_11.py\n        module_12.py\n        module_13.py\n    subPack2/\n        __init__.py\n        module_21.py\n        module_22.py\n\n\u6211\u4eec\u5728module_11.py\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570:\n\ndef funA():\n    print \nfuncA in module_11\n\n    return\n\n\u5728\u9876\u5c42\u76ee\u5f55\uff08\u4e5f\u5c31\u662fpackage1\u6240\u5728\u7684\u76ee\u5f55\uff09\u8fd0\u884cpython:\n\nfrom package1.subPack1.module_11 import funcA\nfuncA()\n-----\nfuncA in module_11\n\n\n\n\n\u4f7f\u7528\u6a21\u5757\n\n\nimport\n \u5173\u952e\u5b57\u7528\u4e8e\u5bfc\u5165\u6a21\u5757\n\nfrom\n \u6807\u660e\u5f15\u7528\u6a21\u5757\u8def\u5f84\n\n\nimport sys\nif __name ==\n__main__\n:\n    print(sys.argv)\n\n\n\n\n\u6a21\u5757\u641c\u7d22\u8def\u5f84\n\n\nPython\u89e3\u91ca\u5668\u4f1a\u641c\u7d22\u5f53\u524d\u76ee\u5f55\u3001\u6240\u6709\u5df2\u5b89\u88c5\u7684\u5185\u7f6e\u6a21\u5757\u548c\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u641c\u7d22\u8def\u5f84\u5b58\u653e\u5728sys\u6a21\u5757\u7684path\u53d8\u91cf\u4e2d\n\n\n\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u76ee\u5f55:\n\n\n\u76f4\u63a5\u4fee\u6539sys.path\uff0c\u6dfb\u52a0\u8981\u641c\u7d22\u7684\u76ee\u5f55\n\n\nimport sys\nsys.path.append('/Users/michael/my_py_scripts')\n\n\n\n\n\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\nPYTHONPATH", 
            "title": "\u7ec4\u7ec7"
        }, 
        {
            "location": "/python/py6_organize/#python", 
            "text": "", 
            "title": "python\u6a21\u5757\u7ec4\u7ec7"
        }, 
        {
            "location": "/python/py6_organize/#python_1", 
            "text": "\u6a21\u5757\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\n\u4e00\u4e2a abc.py \u7684\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u540d\u5b57\u53eb abc \u7684\u6a21\u5757\n\u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u9762\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py \u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219\uff0cPython\u5c31\u628a\u8fd9\u4e2a\u76ee\u5f55\u5f53\u6210\u666e\u901a\u76ee\u5f55  package1/\n    __init__.py\n    subPack1/\n        __init__.py\n        module_11.py\n        module_12.py\n        module_13.py\n    subPack2/\n        __init__.py\n        module_21.py\n        module_22.py\n\n\u6211\u4eec\u5728module_11.py\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570:\n\ndef funA():\n    print  funcA in module_11 \n    return\n\n\u5728\u9876\u5c42\u76ee\u5f55\uff08\u4e5f\u5c31\u662fpackage1\u6240\u5728\u7684\u76ee\u5f55\uff09\u8fd0\u884cpython:\n\nfrom package1.subPack1.module_11 import funcA\nfuncA()\n----- funcA in module_11", 
            "title": "python\u6a21\u5757"
        }, 
        {
            "location": "/python/py6_organize/#_1", 
            "text": "import  \u5173\u952e\u5b57\u7528\u4e8e\u5bfc\u5165\u6a21\u5757 from  \u6807\u660e\u5f15\u7528\u6a21\u5757\u8def\u5f84  import sys\nif __name == __main__ :\n    print(sys.argv)", 
            "title": "\u4f7f\u7528\u6a21\u5757"
        }, 
        {
            "location": "/python/py6_organize/#_2", 
            "text": "Python\u89e3\u91ca\u5668\u4f1a\u641c\u7d22\u5f53\u524d\u76ee\u5f55\u3001\u6240\u6709\u5df2\u5b89\u88c5\u7684\u5185\u7f6e\u6a21\u5757\u548c\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u641c\u7d22\u8def\u5f84\u5b58\u653e\u5728sys\u6a21\u5757\u7684path\u53d8\u91cf\u4e2d", 
            "title": "\u6a21\u5757\u641c\u7d22\u8def\u5f84"
        }, 
        {
            "location": "/python/py6_organize/#_3", 
            "text": "", 
            "title": "\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u76ee\u5f55:"
        }, 
        {
            "location": "/python/py6_organize/#syspath", 
            "text": "import sys\nsys.path.append('/Users/michael/my_py_scripts')", 
            "title": "\u76f4\u63a5\u4fee\u6539sys.path\uff0c\u6dfb\u52a0\u8981\u641c\u7d22\u7684\u76ee\u5f55"
        }, 
        {
            "location": "/python/py6_organize/#pythonpath", 
            "text": "", 
            "title": "\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfPYTHONPATH"
        }, 
        {
            "location": "/python/py_class/", 
            "text": "python \u7c7b,\u7ee7\u627f\n\n\n\u7c7b\n\n\npython \u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f.\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4e3a\u5bf9\u8c61\uff0c\u4ee5\u5f15\u7528\u8d4b\u503c\n\n\n\u7c7b\u7684\u5b9a\u4e49 :\n\n\n  class DataType:\n      pass\n\n\n\n\nclass\u4f5c\u4e3a\u7c7b\u58f0\u660e\uff0cpass\u8868\u793a\u7f29\u8fdb\uff0c\u6ca1\u6709\u5176\u4ed6\u542b\u4e49\n\n\n__init__\n\u65b9\u6cd5:\n\n\n\u4ece\u5f62\u5f0f\u4e0a\u6765\u770b\u76f8\u5f53\u4e8ejava\u4e2d\u7684\u6784\u9020\u5668\uff0c\u5728\u7c7b\u5b9e\u4f8b\u540e\u8c03\u7528,\u4f46\u662f\u5728\u6267\u884cINIT\u65b9\u6cd5\u65f6\uff0c\u5bf9\u8c61\u5df2\u7ecf\u5b9e\u4f8b\u5316\u597d\u4e86\n\n\n  class DataType:\n      def __init__(self):\n          print(self)\n\n  flib = DataType()\n\n\n\n\nself\n \u76f8\u5f53\u4e8ejava\u4e2d\u7684this,\u6307\u5411\u8be5\u5b9e\u4f8b,\u5b9e\u4f8b\u5316\u7c7bflib =DataType() \u5e76\u4e0d\u50cfjava\u4e2d\u4e00\u6837\u4f7f\u7528\u663e\u5f0f\u7684new\u5173\u952e\u5b57\n\n\n\u5b9e\u4f8b\u53d8\u91cf\n\n\n\u7528\nself.\n\u53d8\u91cf\u540d\u6765\u58f0\u660e\u5b9e\u4f8b\u53d8\u91cf.\n\n\n  class Flib:\n      def __init__(self, max):\n          self.max = max\n      def iter(self):\n          self.a = 0\n          self.b = 1\n          return self\n      def next(self):\n          fib = self.a\n          if fib \n self.max:\n              raise StopIteration\n          self.a, self.b = self.b, self.a + self.b\n          return fib\n\n\n\n\n\n\u52a8\u6001\u5c5e\u6027\u4e0e\u9650\u5b9a\n\n\n\u52a8\u6001\u5c5e\u6027\n:\u5b9e\u4f8b\u53ef\u4ee5\u52a8\u6001\u6dfb\u52a0\u5c5e\u6027,\u4e0d\u5f71\u54cd\u5176\u4ed6\u5b9e\u4f8b\n\n__slots__\n:\u9650\u5236\u5b9e\u4f8b\u7684\u5c5e\u6027,\u5b50\u7c7b\u5b9e\u4f8b\u5141\u8bb8\u5b9a\u4e49\u7684\u5c5e\u6027\u5c31\u662f\u81ea\u8eab\u7684\n__slots__\n\u52a0\u4e0a\u7236\u7c7b\u7684\n__slots__\n\n\nclass Student(object):\n  __slots__ = ('name',)\n  \ndocstring for Student\n\n  def __init__(self):\n    super(Student, self).__init__()\n\nst = Student()\nst.name = \nfar\n\nst.age =10 #error\nprint(st.name)\n\nclass StudentA(Student):\n  __slots__ = ('name','age')\n  pass\n\nsta= StudentA()\nst.name = \nfar1\n\nsta.age = 1\nsta.sex = 1 #error\nprint(sta.age)\n\n\n'''\nAttributeError: 'Student' object has no attribute 'age''''\n\n\n\n\n@property\n\n\nclass Student(object):\n\n    #\u8bfb\n  @property\n  def score(self):\n    return self._score\n\n  #\u5199\n  @score.setter\n  def score(self, value):\n    if not isinstance(value, int):\n      raise ValueError('score must be an integer!')\n    if value \n 0 or value \n 100:\n      raise ValueError('score must between 0 ~ 100!')\n    self._score = value\n\nst = Student()\nst.score = -1\n\n'''\nValueError: score must between 0 ~ 100!\n'''\n\n\n\n\n\u8bbf\u95ee\u9650\u5236\n\n\n\u79c1\u6709\u5c5e\u6027:\u5c5e\u6027\u7684\u540d\u79f0\u524d\u52a0\u4e0a\u4e24\u4e2a\u4e0b\u5212\u7ebf\n__\n\n\nclass Student(object):\n\n    def __init__(self, name, score):\n        self.__name = name\n        self.__score = score\n\n    def print_score(self):\n        print('%s: %s' % (self.__name, self.__score))\n\n bart = Student('Bart Simpson', 98)\n bart.__name\n '''\n AttributeError: 'Student' object has no attribute '__name'\n '''\n\n\n\n\n\u57fa\u7840\u65b9\u6cd5\n\n\n\n\nisinstance\n:\u5224\u65ad\u5bf9\u8c61\u7c7b\u578b\n\n\n\n\nprint(isinstance(bart,Student))\nprint(isinstance(bart,object))\n'''\nTrue\nTrue\n'''\n\n\n\n\n\n\ntype\n:\u83b7\u53d6\u5bf9\u8c61\u7c7b\u578b,\u521b\u5efa\u65b0\u7684\u7c7b\u578b\n\n\n\n\ndef de_fun (self,name=\nfar\n):\n  print(\nHi,%s\n%name)\n\n#type(\n\u7c7b\u540d\n,(\n\u7ee7\u627f\u7c7b\n,),dict(\u5c5e\u6027\u540d=\u5c5e\u6027\u503c))\nHi = type(\nHi\n,(object,),dict(sayhi=de_fun))\nhi = Hi()\nhi.sayhi()\n'''\nHi,far\n\ntype 'type'\n\n\nclass '__main__.Hi'\n\n'''\n\n\n\n\n\n\ndir\n:\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\n\n\nhasattr\n,\ngetattr\n:\u52a8\u6001\u83b7\u53d6\u5bf9\u8c61\u65b9\u6cd5\n\n\n\n\nhasattr(obj, 'power') # \u6709\u5c5e\u6027'power'\u5417\uff1f\ngetattr(obj, 'power') # \u83b7\u53d6\u5c5e\u6027'power'\n\n\n\n\n\u7ecf\u5178\u7c7b\n\n\n\u5b9a\u4e49:\u6ca1\u6709\u7ee7\u627f\u7684\u7c7b,\u6ce8\u610f\uff1a\u5982\u679c\u7ecf\u5178\u7c7b\u88ab\u4f5c\u4e3a\u7236\u7c7b\uff0c\u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\u4f1a\u51fa\u9519\u3002\nTypeError: must be type, not classobj\n\n\n#\u57fa\u7c7b\uff08\u7ecf\u5178\u7c7b\uff09\nclass Person:\n    def __init__(self):\n        print \nHi, I am a person. \n\n\n#\u5b50\u7c7b\nclass Student(Person):\n    def __init__(self):\n        super(self.__class__, self).__init__()\n\nif __name__ == \n__main__\n:\n    student = Student()\n    #\u51fa\u9519\u5566\uff01TypeError: must be type, not classobj\n\n\n\n\n\u65b0\u5f0f\u7c7b\n\n\n\u5b9a\u4e49:\u6bcf\u4e2a\u7c7b\u90fd\u7ee7\u627f\u4e8e\u4e00\u4e2a\u57fa\u7c7b\uff0c\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7c7b\u6216\u8005\u5176\u5b83\u7c7b\uff0c\u5982\u679c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u7ee7\u627f\uff0c\u90a3\u5c31\u7ee7\u627f\u4e8eobject\n\u5982\u679c\u60f3\u7528super\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8bf7\u4f7f\u7528\u65b0\u5f0f\u7c7b\uff01\n\n\n#\u57fa\u7c7b\uff08\u65b0\u5f0f\u7c7b\uff09\nclass Person(object):\n    def __init__(self):\n        print \nHi, I am a person.\n\n\n#\u5b50\u7c7b\nclass Student(Person):\n    def __init__(self):\n        super(self.__class__, self).__init__()\n\nif __name__ == \n__main__\n:\n    student = Student()\n\n\n\n\n\u5b9a\u5236\u7c7b\n\n\n\n\n__str__\n:\u683c\u5f0f\u5316\u8f93\u51fa\n\n\n\n\nclass Student(object):\n  def __init__(self, name):\n    self.name = name\n  def __str__(self):\n    return 'Student object (name: %s)' % self.name\n\nst = Student(\nname\n)\nprint(st)\n\n\n\n\n\n\n__iter__\n:\u683c\u5f0f\u5316\u8f93\u51fa\n\u5982\u679c\u4e00\u4e2a\u7c7b\u60f3\u88ab\u7528\u4e8e\nfor ... in\n\u5faa\u73af\uff0c\u7c7b\u4f3clist\u6216tuple\u90a3\u6837\uff0c\u5c31\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a\n__iter__()\n\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61\uff0c\u7136\u540e\uff0cPython\u7684for\u5faa\u73af\u5c31\u4f1a\u4e0d\u65ad\u8c03\u7528\u8be5\u8fed\u4ee3\u5bf9\u8c61\u7684\n__next__()\n\u65b9\u6cd5\u62ff\u5230\u5faa\u73af\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u76f4\u5230\u9047\u5230\nStopIteration\n\u9519\u8bef\u65f6\u9000\u51fa\u5faa\u73af\n\n\n\n\nclass Fib(object):\n    def __init__(self):\n        self.a, self.b = 0, 1 # \u521d\u59cb\u5316\u4e24\u4e2a\u8ba1\u6570\u5668a\uff0cb\n\n    def __iter__(self):\n        return self # \u5b9e\u4f8b\u672c\u8eab\u5c31\u662f\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6545\u8fd4\u56de\u81ea\u5df1\n\n    def __next__(self):\n        self.a, self.b = self.b, self.a + self.b # \u8ba1\u7b97\u4e0b\u4e00\u4e2a\u503c\n        if self.a \n 100: # \u9000\u51fa\u5faa\u73af\u7684\u6761\u4ef6\n            raise StopIteration();\n        return self.a # \u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\n\nfor n in Fib():\n  print(n)\n\n\n\n\n\n\n__getitem__\n:\u4e0b\u6807\u65b9\u5f0f\u8bbf\u95ee\u5bf9\u8c61\n\n\n\n\n\nclass GetItem(object):\n  \ndocstring for GetItem\n\n  def __init__(self):\n    super(GetItem, self).__init__()\n\n  def __getitem__(self,n):\n    if isinstance(n, int): # n\u662f\u7d22\u5f15\n      return n\n    if isinstance(n, slice): # n\u662f\u5207\u7247\n      start = n.start\n      stop = n.stop\n      if start is None:\n        start = 0\n      L = []\n      for x in range(stop):\n        if x \n= start:\n          L.append(x)\n      return L\n\ngetitem = GetItem()\nprint(getitem[2])\nprint(getitem[0:2])\n'''\n2\n[0, 1]\n'''\n\n\n\n\n\n\n__getattr__\n:\u83b7\u53d6\u5c5e\u6027\u7684\u64cd\u4f5c\n\n\n\n\nclass Student(object):\n\n  def __init__(self):\n    self.name = 'Michael'\n\n  def __getattr__(self, attr):\n    if attr=='score':\n      return 99\ns = Student()\nprint(s.score)\n'''\n99\n'''\n\n\n\n\n\n\n__call__\n:\u7528\u4e8e\u5b9e\u4f8b\u81ea\u8eab\u7684\u8c03\u7528\n\n\n\n\nclass Student(object):\n    def __init__(self, name):\n        self.name = name\n\n    def __call__(self):\n        print('My name is %s.' % self.name)\n\nst = Student('Michael')\nst()\nprint(callable(st))\nprint(callable(max))\nprint(callable(1))\n'''\nMy name is Michael.\nTrue\nTrue\nFalse\n\u76f8\u5f53\u4e8e\u91cd\u8f7d\u4e86\u62ec\u53f7\u8fd0\u7b97\u7b26,\u53ef\u4ee5\u7528callable\u6765\u5224\u65ad\u662f\u5426\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u7c7b\u578b\n'''\n\n\n\n\n\u7ee7\u627f\n\n\n\u7ee7\u627f\u8bed\u6cd5: \u7c7b(\u7236\u7c7b) Python\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528\u57fa\u672c\u7c7b\u7684constructor\uff0c\u4f60\u5f97\u4eb2\u81ea\u4e13\u95e8\u8c03\u7528\u5b83\n\u53ef\u4ee5\u591a\u91cd\u7ee7\u627f\n\n\n  class SchoolMember:\n      '''Represents any school member.'''\n      def __init__(self, name, age):\n          self.name = name\n          self.age = age\n          print'(Initialized SchoolMember: %s)'% self.name\n       def tell(self):\n          '''Tell my details.'''\n          print'Name:\n%s\n Age:\n%s\n'% (self.name, self.age),\n\n  class Teacher(SchoolMember):\n      '''Represents a teacher.'''\n      def __init__(self, name, age, salary):\n          SchoolMember.__init__(self, name, age)\n          self.salary = salary\n          print'(Initialized Teacher: %s)'% self.name\n\n      def tell(self):\n          SchoolMember.tell(self)\n          print'Salary: \n%d\n'% self.salary\n\n  class Student(SchoolMember):\n      '''Represents a student.'''\n      def __init__(self, name, age, marks):\n          SchoolMember.__init__(self, name, age)\n          self.marks = marks\n          print'(Initialized Student: %s)'% self.name\n\n      def tell(self):\n          SchoolMember.tell(self)\n          print'Marks: \n%d\n'% self.marks\n\n  t = Teacher('Mrs. Shrividya',40,30000)\n  s = Student('Swaroop',22,75)\n  members = [t, s]\n  for member in members:\n      member.tell()# works for both Teachers and Students\n\n\n\n\n\u591a\u91cd\u7ee7\u627f\n\n\nclass Mammal(object):\n  def viviparity(self):\n    print(\nviviparity!!\n)\n\nclass CarnivorousMixIn(object):\n  def eatmeat(self):\n    print(\neat meating!!\n)\n\nclass Dog(Mammal, CarnivorousMixIn):\n  pass\n\ndog = Dog()\ndog.viviparity()\ndog.eatmeat()\n'''\nviviparity!!\neat meating!!\n'''", 
            "title": "\u7c7b"
        }, 
        {
            "location": "/python/py_class/#python", 
            "text": "", 
            "title": "python \u7c7b,\u7ee7\u627f"
        }, 
        {
            "location": "/python/py_class/#_1", 
            "text": "python \u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f.\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4e3a\u5bf9\u8c61\uff0c\u4ee5\u5f15\u7528\u8d4b\u503c", 
            "title": "\u7c7b"
        }, 
        {
            "location": "/python/py_class/#_2", 
            "text": "class DataType:\n      pass  class\u4f5c\u4e3a\u7c7b\u58f0\u660e\uff0cpass\u8868\u793a\u7f29\u8fdb\uff0c\u6ca1\u6709\u5176\u4ed6\u542b\u4e49", 
            "title": "\u7c7b\u7684\u5b9a\u4e49 :"
        }, 
        {
            "location": "/python/py_class/#__init__", 
            "text": "\u4ece\u5f62\u5f0f\u4e0a\u6765\u770b\u76f8\u5f53\u4e8ejava\u4e2d\u7684\u6784\u9020\u5668\uff0c\u5728\u7c7b\u5b9e\u4f8b\u540e\u8c03\u7528,\u4f46\u662f\u5728\u6267\u884cINIT\u65b9\u6cd5\u65f6\uff0c\u5bf9\u8c61\u5df2\u7ecf\u5b9e\u4f8b\u5316\u597d\u4e86    class DataType:\n      def __init__(self):\n          print(self)\n\n  flib = DataType()  self  \u76f8\u5f53\u4e8ejava\u4e2d\u7684this,\u6307\u5411\u8be5\u5b9e\u4f8b,\u5b9e\u4f8b\u5316\u7c7bflib =DataType() \u5e76\u4e0d\u50cfjava\u4e2d\u4e00\u6837\u4f7f\u7528\u663e\u5f0f\u7684new\u5173\u952e\u5b57", 
            "title": "__init__\u65b9\u6cd5:"
        }, 
        {
            "location": "/python/py_class/#_3", 
            "text": "\u7528 self. \u53d8\u91cf\u540d\u6765\u58f0\u660e\u5b9e\u4f8b\u53d8\u91cf.    class Flib:\n      def __init__(self, max):\n          self.max = max\n      def iter(self):\n          self.a = 0\n          self.b = 1\n          return self\n      def next(self):\n          fib = self.a\n          if fib   self.max:\n              raise StopIteration\n          self.a, self.b = self.b, self.a + self.b\n          return fib", 
            "title": "\u5b9e\u4f8b\u53d8\u91cf"
        }, 
        {
            "location": "/python/py_class/#_4", 
            "text": "\u52a8\u6001\u5c5e\u6027 :\u5b9e\u4f8b\u53ef\u4ee5\u52a8\u6001\u6dfb\u52a0\u5c5e\u6027,\u4e0d\u5f71\u54cd\u5176\u4ed6\u5b9e\u4f8b __slots__ :\u9650\u5236\u5b9e\u4f8b\u7684\u5c5e\u6027,\u5b50\u7c7b\u5b9e\u4f8b\u5141\u8bb8\u5b9a\u4e49\u7684\u5c5e\u6027\u5c31\u662f\u81ea\u8eab\u7684 __slots__ \u52a0\u4e0a\u7236\u7c7b\u7684 __slots__  class Student(object):\n  __slots__ = ('name',)\n   docstring for Student \n  def __init__(self):\n    super(Student, self).__init__()\n\nst = Student()\nst.name =  far \nst.age =10 #error\nprint(st.name)\n\nclass StudentA(Student):\n  __slots__ = ('name','age')\n  pass\n\nsta= StudentA()\nst.name =  far1 \nsta.age = 1\nsta.sex = 1 #error\nprint(sta.age)\n\n\n'''\nAttributeError: 'Student' object has no attribute 'age''''", 
            "title": "\u52a8\u6001\u5c5e\u6027\u4e0e\u9650\u5b9a"
        }, 
        {
            "location": "/python/py_class/#property", 
            "text": "class Student(object):\n\n    #\u8bfb\n  @property\n  def score(self):\n    return self._score\n\n  #\u5199\n  @score.setter\n  def score(self, value):\n    if not isinstance(value, int):\n      raise ValueError('score must be an integer!')\n    if value   0 or value   100:\n      raise ValueError('score must between 0 ~ 100!')\n    self._score = value\n\nst = Student()\nst.score = -1\n\n'''\nValueError: score must between 0 ~ 100!\n'''", 
            "title": "@property"
        }, 
        {
            "location": "/python/py_class/#_5", 
            "text": "\u79c1\u6709\u5c5e\u6027:\u5c5e\u6027\u7684\u540d\u79f0\u524d\u52a0\u4e0a\u4e24\u4e2a\u4e0b\u5212\u7ebf __  class Student(object):\n\n    def __init__(self, name, score):\n        self.__name = name\n        self.__score = score\n\n    def print_score(self):\n        print('%s: %s' % (self.__name, self.__score))\n\n bart = Student('Bart Simpson', 98)\n bart.__name\n '''\n AttributeError: 'Student' object has no attribute '__name'\n '''", 
            "title": "\u8bbf\u95ee\u9650\u5236"
        }, 
        {
            "location": "/python/py_class/#_6", 
            "text": "isinstance :\u5224\u65ad\u5bf9\u8c61\u7c7b\u578b   print(isinstance(bart,Student))\nprint(isinstance(bart,object))\n'''\nTrue\nTrue\n'''   type :\u83b7\u53d6\u5bf9\u8c61\u7c7b\u578b,\u521b\u5efa\u65b0\u7684\u7c7b\u578b   def de_fun (self,name= far ):\n  print( Hi,%s %name)\n\n#type( \u7c7b\u540d ,( \u7ee7\u627f\u7c7b ,),dict(\u5c5e\u6027\u540d=\u5c5e\u6027\u503c))\nHi = type( Hi ,(object,),dict(sayhi=de_fun))\nhi = Hi()\nhi.sayhi()\n'''\nHi,far type 'type'  class '__main__.Hi' \n'''   dir :\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5  hasattr , getattr :\u52a8\u6001\u83b7\u53d6\u5bf9\u8c61\u65b9\u6cd5   hasattr(obj, 'power') # \u6709\u5c5e\u6027'power'\u5417\uff1f\ngetattr(obj, 'power') # \u83b7\u53d6\u5c5e\u6027'power'", 
            "title": "\u57fa\u7840\u65b9\u6cd5"
        }, 
        {
            "location": "/python/py_class/#_7", 
            "text": "\u5b9a\u4e49:\u6ca1\u6709\u7ee7\u627f\u7684\u7c7b,\u6ce8\u610f\uff1a\u5982\u679c\u7ecf\u5178\u7c7b\u88ab\u4f5c\u4e3a\u7236\u7c7b\uff0c\u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\u4f1a\u51fa\u9519\u3002 TypeError: must be type, not classobj  #\u57fa\u7c7b\uff08\u7ecf\u5178\u7c7b\uff09\nclass Person:\n    def __init__(self):\n        print  Hi, I am a person.  \n\n#\u5b50\u7c7b\nclass Student(Person):\n    def __init__(self):\n        super(self.__class__, self).__init__()\n\nif __name__ ==  __main__ :\n    student = Student()\n    #\u51fa\u9519\u5566\uff01TypeError: must be type, not classobj", 
            "title": "\u7ecf\u5178\u7c7b"
        }, 
        {
            "location": "/python/py_class/#_8", 
            "text": "\u5b9a\u4e49:\u6bcf\u4e2a\u7c7b\u90fd\u7ee7\u627f\u4e8e\u4e00\u4e2a\u57fa\u7c7b\uff0c\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7c7b\u6216\u8005\u5176\u5b83\u7c7b\uff0c\u5982\u679c\u4ec0\u4e48\u90fd\u4e0d\u60f3\u7ee7\u627f\uff0c\u90a3\u5c31\u7ee7\u627f\u4e8eobject\n\u5982\u679c\u60f3\u7528super\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8bf7\u4f7f\u7528\u65b0\u5f0f\u7c7b\uff01  #\u57fa\u7c7b\uff08\u65b0\u5f0f\u7c7b\uff09\nclass Person(object):\n    def __init__(self):\n        print  Hi, I am a person. \n\n#\u5b50\u7c7b\nclass Student(Person):\n    def __init__(self):\n        super(self.__class__, self).__init__()\n\nif __name__ ==  __main__ :\n    student = Student()", 
            "title": "\u65b0\u5f0f\u7c7b"
        }, 
        {
            "location": "/python/py_class/#_9", 
            "text": "__str__ :\u683c\u5f0f\u5316\u8f93\u51fa   class Student(object):\n  def __init__(self, name):\n    self.name = name\n  def __str__(self):\n    return 'Student object (name: %s)' % self.name\n\nst = Student( name )\nprint(st)   __iter__ :\u683c\u5f0f\u5316\u8f93\u51fa\n\u5982\u679c\u4e00\u4e2a\u7c7b\u60f3\u88ab\u7528\u4e8e for ... in \u5faa\u73af\uff0c\u7c7b\u4f3clist\u6216tuple\u90a3\u6837\uff0c\u5c31\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a __iter__() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61\uff0c\u7136\u540e\uff0cPython\u7684for\u5faa\u73af\u5c31\u4f1a\u4e0d\u65ad\u8c03\u7528\u8be5\u8fed\u4ee3\u5bf9\u8c61\u7684 __next__() \u65b9\u6cd5\u62ff\u5230\u5faa\u73af\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u76f4\u5230\u9047\u5230 StopIteration \u9519\u8bef\u65f6\u9000\u51fa\u5faa\u73af   class Fib(object):\n    def __init__(self):\n        self.a, self.b = 0, 1 # \u521d\u59cb\u5316\u4e24\u4e2a\u8ba1\u6570\u5668a\uff0cb\n\n    def __iter__(self):\n        return self # \u5b9e\u4f8b\u672c\u8eab\u5c31\u662f\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6545\u8fd4\u56de\u81ea\u5df1\n\n    def __next__(self):\n        self.a, self.b = self.b, self.a + self.b # \u8ba1\u7b97\u4e0b\u4e00\u4e2a\u503c\n        if self.a   100: # \u9000\u51fa\u5faa\u73af\u7684\u6761\u4ef6\n            raise StopIteration();\n        return self.a # \u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\n\nfor n in Fib():\n  print(n)   __getitem__ :\u4e0b\u6807\u65b9\u5f0f\u8bbf\u95ee\u5bf9\u8c61   \nclass GetItem(object):\n   docstring for GetItem \n  def __init__(self):\n    super(GetItem, self).__init__()\n\n  def __getitem__(self,n):\n    if isinstance(n, int): # n\u662f\u7d22\u5f15\n      return n\n    if isinstance(n, slice): # n\u662f\u5207\u7247\n      start = n.start\n      stop = n.stop\n      if start is None:\n        start = 0\n      L = []\n      for x in range(stop):\n        if x  = start:\n          L.append(x)\n      return L\n\ngetitem = GetItem()\nprint(getitem[2])\nprint(getitem[0:2])\n'''\n2\n[0, 1]\n'''   __getattr__ :\u83b7\u53d6\u5c5e\u6027\u7684\u64cd\u4f5c   class Student(object):\n\n  def __init__(self):\n    self.name = 'Michael'\n\n  def __getattr__(self, attr):\n    if attr=='score':\n      return 99\ns = Student()\nprint(s.score)\n'''\n99\n'''   __call__ :\u7528\u4e8e\u5b9e\u4f8b\u81ea\u8eab\u7684\u8c03\u7528   class Student(object):\n    def __init__(self, name):\n        self.name = name\n\n    def __call__(self):\n        print('My name is %s.' % self.name)\n\nst = Student('Michael')\nst()\nprint(callable(st))\nprint(callable(max))\nprint(callable(1))\n'''\nMy name is Michael.\nTrue\nTrue\nFalse\n\u76f8\u5f53\u4e8e\u91cd\u8f7d\u4e86\u62ec\u53f7\u8fd0\u7b97\u7b26,\u53ef\u4ee5\u7528callable\u6765\u5224\u65ad\u662f\u5426\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u7c7b\u578b\n'''", 
            "title": "\u5b9a\u5236\u7c7b"
        }, 
        {
            "location": "/python/py_class/#_10", 
            "text": "\u7ee7\u627f\u8bed\u6cd5: \u7c7b(\u7236\u7c7b) Python\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528\u57fa\u672c\u7c7b\u7684constructor\uff0c\u4f60\u5f97\u4eb2\u81ea\u4e13\u95e8\u8c03\u7528\u5b83\n\u53ef\u4ee5\u591a\u91cd\u7ee7\u627f    class SchoolMember:\n      '''Represents any school member.'''\n      def __init__(self, name, age):\n          self.name = name\n          self.age = age\n          print'(Initialized SchoolMember: %s)'% self.name\n       def tell(self):\n          '''Tell my details.'''\n          print'Name: %s  Age: %s '% (self.name, self.age),\n\n  class Teacher(SchoolMember):\n      '''Represents a teacher.'''\n      def __init__(self, name, age, salary):\n          SchoolMember.__init__(self, name, age)\n          self.salary = salary\n          print'(Initialized Teacher: %s)'% self.name\n\n      def tell(self):\n          SchoolMember.tell(self)\n          print'Salary:  %d '% self.salary\n\n  class Student(SchoolMember):\n      '''Represents a student.'''\n      def __init__(self, name, age, marks):\n          SchoolMember.__init__(self, name, age)\n          self.marks = marks\n          print'(Initialized Student: %s)'% self.name\n\n      def tell(self):\n          SchoolMember.tell(self)\n          print'Marks:  %d '% self.marks\n\n  t = Teacher('Mrs. Shrividya',40,30000)\n  s = Student('Swaroop',22,75)\n  members = [t, s]\n  for member in members:\n      member.tell()# works for both Teachers and Students", 
            "title": "\u7ee7\u627f"
        }, 
        {
            "location": "/python/py_class/#_11", 
            "text": "class Mammal(object):\n  def viviparity(self):\n    print( viviparity!! )\n\nclass CarnivorousMixIn(object):\n  def eatmeat(self):\n    print( eat meating!! )\n\nclass Dog(Mammal, CarnivorousMixIn):\n  pass\n\ndog = Dog()\ndog.viviparity()\ndog.eatmeat()\n'''\nviviparity!!\neat meating!!\n'''", 
            "title": "\u591a\u91cd\u7ee7\u627f"
        }, 
        {
            "location": "/python/py_enum/", 
            "text": "python \u679a\u4e3e,\u5143\u7c7b\n\n\n\u679a\u4e3e\n\n\n\u5c06\u6211\u4eec\u8981\u5b9a\u4e49\u5e38\u91cf\u7ec4\u65f6\u5e38\u89c4\u7684\u505a\u6cd5\u662f\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u53d8\u91cf,\u867d\u7136\u7b80\u5355\u4f46\u8fd9\u6837\u4e0d\u5229\u4e8e\u7ba1\u7406,\u5982:\n\nblue,red,green=1,2,3\n,\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e:Python\u63d0\u4f9b\u4e86\nEnum\n\u7c7b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd.\n\n\nfrom enum import Enum\n#Enum(\n\u679a\u4e3e\u540d\u5b57\n,(\n\u679a\u4e3e\u5b57\u6bb5\u6807\u8bc6''))\nColor = Enum(\nColor\n,(\nblue\n,\nred\n,\ngreen\n))\n\nprint(Color.blue.value)\nfor name, member in Color.__members__.items():\n    print(name, '=\n', member, ',', member.value)\n'''\n1\n('blue', '=\n', \nColor.blue: 1\n, ',', 1)\n('red', '=\n', \nColor.red: 2\n, ',', 2)\n('green', '=\n', \nColor.green: 3\n, ',', 3)\n'''\n\n\n\n\nvalue\n\u503c\u662f\u81ea\u52a8\u9644\u52a0\u7684\u5c5e\u6027\u9ed8\u8ba4\u4ece\n1\n\u5f00\u59cb\u8ba1\u6570,\u5982\u679c\u8981\u66f4\u52a0\u7cbe\u786e\u5730\u63a7\u5236\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\u81ea\nEnum\n\u81ea\u5b9a\u4e49\u7c7b:\n\n\nfrom enum import Enum, unique\n\n@unique\nclass Color(Enum):\n    blue = 0 # blue\u7684value\u4e3a0\n    red = 1\n    green = 2\n\nprint(Color.blue.value)\n\n\n\n\nunique\n\u88c5\u9970\u5668\u9650\u5b9a\u6ca1\u6709\u91cd\u590d\u503c\n\n\nmetaclass\n\n\nmetaclass\n\u5143\u7c7b\u7528\u4e8e\u52a8\u6001\u6539\u53d8\u7c7b\u7684\u7684\u521b\u5efa\u884c\u4e3a\n\n\nclass ListMetaclass(type):\n    def __new__(cls,name,base,attrs):\n        attrs[\nadd\n] = lambda self,value: self.append(value)\n        return type.__new__(cls,name,base,attrs)\n\nclass MyList(list, metaclass=ListMetaclass):\n    #python2\n    # __metaclass__ = ListMetaclass\n    \ndocstring for MyList\n\n    def __init__(self):\n        super(MyList, self).__init__()\n\nmylist = MyList()\nmylist.add(1)\nprint(mylist)", 
            "title": "\u679a\u4e3e"
        }, 
        {
            "location": "/python/py_enum/#python", 
            "text": "", 
            "title": "python \u679a\u4e3e,\u5143\u7c7b"
        }, 
        {
            "location": "/python/py_enum/#_1", 
            "text": "\u5c06\u6211\u4eec\u8981\u5b9a\u4e49\u5e38\u91cf\u7ec4\u65f6\u5e38\u89c4\u7684\u505a\u6cd5\u662f\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u53d8\u91cf,\u867d\u7136\u7b80\u5355\u4f46\u8fd9\u6837\u4e0d\u5229\u4e8e\u7ba1\u7406,\u5982: blue,red,green=1,2,3 ,\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e:Python\u63d0\u4f9b\u4e86 Enum \u7c7b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd.  from enum import Enum\n#Enum( \u679a\u4e3e\u540d\u5b57 ,( \u679a\u4e3e\u5b57\u6bb5\u6807\u8bc6''))\nColor = Enum( Color ,( blue , red , green ))\n\nprint(Color.blue.value)\nfor name, member in Color.__members__.items():\n    print(name, '= ', member, ',', member.value)\n'''\n1\n('blue', '= ',  Color.blue: 1 , ',', 1)\n('red', '= ',  Color.red: 2 , ',', 2)\n('green', '= ',  Color.green: 3 , ',', 3)\n'''  value \u503c\u662f\u81ea\u52a8\u9644\u52a0\u7684\u5c5e\u6027\u9ed8\u8ba4\u4ece 1 \u5f00\u59cb\u8ba1\u6570,\u5982\u679c\u8981\u66f4\u52a0\u7cbe\u786e\u5730\u63a7\u5236\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\u81ea Enum \u81ea\u5b9a\u4e49\u7c7b:  from enum import Enum, unique\n\n@unique\nclass Color(Enum):\n    blue = 0 # blue\u7684value\u4e3a0\n    red = 1\n    green = 2\n\nprint(Color.blue.value)  unique \u88c5\u9970\u5668\u9650\u5b9a\u6ca1\u6709\u91cd\u590d\u503c", 
            "title": "\u679a\u4e3e"
        }, 
        {
            "location": "/python/py_enum/#metaclass", 
            "text": "metaclass \u5143\u7c7b\u7528\u4e8e\u52a8\u6001\u6539\u53d8\u7c7b\u7684\u7684\u521b\u5efa\u884c\u4e3a  class ListMetaclass(type):\n    def __new__(cls,name,base,attrs):\n        attrs[ add ] = lambda self,value: self.append(value)\n        return type.__new__(cls,name,base,attrs)\n\nclass MyList(list, metaclass=ListMetaclass):\n    #python2\n    # __metaclass__ = ListMetaclass\n     docstring for MyList \n    def __init__(self):\n        super(MyList, self).__init__()\n\nmylist = MyList()\nmylist.add(1)\nprint(mylist)", 
            "title": "metaclass"
        }, 
        {
            "location": "/python/py_error/", 
            "text": "python \u5f02\u5e38\u5904\u7406\n\n\n\u5f02\u5e38\u6355\u6349\n\n\n\u5f02\u5e38\u6355\u6349\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5065\u58ee\n\u5f53\u6211\u4eec\u8ba4\u4e3a\u67d0\u4e9b\u4ee3\u7801\u53ef\u80fd\u4f1a\u51fa\u9519\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\ntry\n\u6765\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5982\u679c\u6267\u884c\u51fa\u9519\uff0c\u5219\u540e\u7eed\u4ee3\u7801\u4e0d\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u8df3\u8f6c\u81f3\u9519\u8bef\u5904\u7406\u4ee3\u7801\uff0c\u5373\nexcept\n\u8bed\u53e5\u5757\uff0c\u6267\u884c\u5b8c\nexcept\n\u540e\uff0c\u5982\u679c\u6709\nfinally\n\u8bed\u53e5\u5757\uff0c\u5219\u6267\u884c\nfinally\n\u8bed\u53e5\u5757\uff0c\u81f3\u6b64\uff0c\u6267\u884c\u5b8c\u6bd5\n\n\ntry:\n    print('try...')\n    r = 10 / int('a')\n    print('result:', r)\nexcept ValueError as e:\n    print('ValueError:', e)\nexcept ZeroDivisionError as e:\n    print('ZeroDivisionError:', e)\nelse:\n    print('no error!')\nfinally:\n    print('finally...')\nprint('END')\n'''\ntry...\nValueError: invalid literal for int() with base 10: 'a'\nfinally...\nEND\n'''\n\n\n\n\n\u8bb0\u5f55\u9519\u8bef\n\n\ntraceback\n:\u5806\u6808\u4fe1\u606f\n\nlogging\n:\u65e5\u5fd7\u8bb0\u5f55\n\n\nimport logging,traceback\n\ndef foo(s):\n    return 10 / int(s)\n\ndef bar(s):\n    return foo(s) * 2\n\ndef main():\n    try:\n        bar('0')\n    except Exception as e:\n        print(traceback.print_exc() )\n        # logging.exception(e)\n\nmain()\nprint('END')\n\n\n\n\n\u629b\u51fa\u9519\u8bef\n\n\n\u81ea\u5b9a\u4e49\nerror\n\u7c7b\u7ee7\u627fPython\u5df2\u6709\u7684\u5185\u7f6e\u7684\u9519\u8bef\u7c7b\u578b\uff08\u6bd4\u5982ValueError\uff0cTypeError\uff09,\nraise\n\u8bed\u53e5\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u7684\u5b9e\u4f8b\n\n\nclass SelfError(ValueError):\n    pass\n\ndef foo(s):\n    n = int(s)\n    if n==0:\n        raise SelfError('invalid value: %s' % s)\n    return n\n\nfoo('0')", 
            "title": "\u5f02\u5e38\u6355\u6349"
        }, 
        {
            "location": "/python/py_error/#python", 
            "text": "", 
            "title": "python \u5f02\u5e38\u5904\u7406"
        }, 
        {
            "location": "/python/py_error/#_1", 
            "text": "\u5f02\u5e38\u6355\u6349\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5065\u58ee\n\u5f53\u6211\u4eec\u8ba4\u4e3a\u67d0\u4e9b\u4ee3\u7801\u53ef\u80fd\u4f1a\u51fa\u9519\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528 try \u6765\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5982\u679c\u6267\u884c\u51fa\u9519\uff0c\u5219\u540e\u7eed\u4ee3\u7801\u4e0d\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u8df3\u8f6c\u81f3\u9519\u8bef\u5904\u7406\u4ee3\u7801\uff0c\u5373 except \u8bed\u53e5\u5757\uff0c\u6267\u884c\u5b8c except \u540e\uff0c\u5982\u679c\u6709 finally \u8bed\u53e5\u5757\uff0c\u5219\u6267\u884c finally \u8bed\u53e5\u5757\uff0c\u81f3\u6b64\uff0c\u6267\u884c\u5b8c\u6bd5  try:\n    print('try...')\n    r = 10 / int('a')\n    print('result:', r)\nexcept ValueError as e:\n    print('ValueError:', e)\nexcept ZeroDivisionError as e:\n    print('ZeroDivisionError:', e)\nelse:\n    print('no error!')\nfinally:\n    print('finally...')\nprint('END')\n'''\ntry...\nValueError: invalid literal for int() with base 10: 'a'\nfinally...\nEND\n'''", 
            "title": "\u5f02\u5e38\u6355\u6349"
        }, 
        {
            "location": "/python/py_error/#_2", 
            "text": "traceback :\u5806\u6808\u4fe1\u606f logging :\u65e5\u5fd7\u8bb0\u5f55  import logging,traceback\n\ndef foo(s):\n    return 10 / int(s)\n\ndef bar(s):\n    return foo(s) * 2\n\ndef main():\n    try:\n        bar('0')\n    except Exception as e:\n        print(traceback.print_exc() )\n        # logging.exception(e)\n\nmain()\nprint('END')", 
            "title": "\u8bb0\u5f55\u9519\u8bef"
        }, 
        {
            "location": "/python/py_error/#_3", 
            "text": "\u81ea\u5b9a\u4e49 error \u7c7b\u7ee7\u627fPython\u5df2\u6709\u7684\u5185\u7f6e\u7684\u9519\u8bef\u7c7b\u578b\uff08\u6bd4\u5982ValueError\uff0cTypeError\uff09, raise \u8bed\u53e5\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u7684\u5b9e\u4f8b  class SelfError(ValueError):\n    pass\n\ndef foo(s):\n    n = int(s)\n    if n==0:\n        raise SelfError('invalid value: %s' % s)\n    return n\n\nfoo('0')", 
            "title": "\u629b\u51fa\u9519\u8bef"
        }, 
        {
            "location": "/python/py_test/", 
            "text": "python \u6d4b\u8bd5\u4e0e\u8c03\u8bd5\n\n\n\u8c03\u8bd5\n\n\n\u53c2\u8003:\nhttps://www.ibm.com/developerworks/cn/linux/l-cn-pythondebugger/\n\n\u521a\u5199\u51fa\u6765\u7684\u7a0b\u5e8f\u4e0d\u53ef\u80fd100%\u6ca1\u6709\u9519\u8bef,\u8bed\u6cd5\u9519\u8bef\u53ef\u4ee5\u5728\u9519\u8bef\u4fe1\u606f\u4e2d\u5b9a\u4f4d\u5230,\u903b\u8f91\u9519\u8bef\u5219\u9700\u8981\u4e00\u5b9a\u7684\u8c03\u8bd5\u6280\u5de7.\n\n\nprint\n\n\nprint\n\u662f\u6240\u6709\u8bed\u8a00\u6700\u7b80\u5355\u7c97\u66b4\u7684\u8c03\u8bd5\u65b9\u5f0f,\u5728\u7a0b\u5e8f\u903b\u8f91\u5404\u5904\u52a0\u4e0a\u6253\u5370,\u770b\u8f93\u51fa\n\n\ndef foo(s):\n    n = int(s)\n    print('\n n = %d' % n)\n    return 10 / n\n\ndef main():\n    foo('0')\nmain()\n\n\n\n\n\u65ad\u8a00\n\n\nassert\n\u7684\u610f\u601d\u662f\uff0c\u8868\u8fbe\u5f0f\u7ed3\u679c\u5e94\u8be5\u662f\nTrue\n\uff0c\u5426\u5219\u62a5\u9519\n\n\ndef foo(s):\n    n = int(s)\n    assert n != 0, 'n is zero!'\n    return 10 / n\n\ndef main():\n    foo('0')\n\nmain()\n\n\n\n\npdb\n\n\npdb\u662fpython\u81ea\u5e26\u7684\u8c03\u8bd5\u5668,\u53ef\u4ee5\u5355\u6b65\u8c03\u8bd5,\u67e5\u770b\u5355\u6b65\u4e2d\u7684\u72b6\u6001\n\npython3 -m pdb test.py\n \u542f\u52a8pdb\u8c03\u8bd5,\n\n\n\n\n\n\n\n\n\u547d\u4ee4\n\n\n\u89e3\u91ca\n\n\n\n\n\n\n\n\n\n\nbreak \u6216 b \u8bbe\u7f6e\u65ad\u70b9\n\n\n\u8bbe\u7f6e\u65ad\u70b9\n\n\n\n\n\n\ncontinue \u6216 c\n\n\n\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\n\n\n\n\n\n\nlist \u6216 l\n\n\n\u67e5\u770b\u5f53\u524d\u884c\u7684\u4ee3\u7801\u6bb5\n\n\n\n\n\n\nstep \u6216 s\n\n\n\u8fdb\u5165\u51fd\u6570\n\n\n\n\n\n\nreturn \u6216 r\n\n\n\u6267\u884c\u4ee3\u7801\u76f4\u5230\u4ece\u5f53\u524d\u51fd\u6570\u8fd4\u56de\n\n\n\n\n\n\nexit \u6216 q\n\n\n\u4e2d\u6b62\u5e76\u9000\u51fa\n\n\n\n\n\n\nnext \u6216 n\n\n\n\u6267\u884c\u4e0b\u4e00\u884c\n\n\n\n\n\n\npp\n\n\n\u6253\u5370\u53d8\u91cf\u7684\u503c\n\n\n\n\n\n\nhelp\n\n\n\u5e2e\u52a9\n\n\n\n\n\n\n\n\nide\n\n\nPyCharm\n\n\nPyDev\n\n\n\u5355\u5143\u6d4b\u8bd5\n\n\n\u5355\u5143\u6d4b\u8bd5\u662f\u7528\u6765\u5bf9\u4e00\u4e2a\u6a21\u5757\u3001\u4e00\u4e2a\u51fd\u6570\u6216\u8005\u4e00\u4e2a\u7c7b\u6765\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\n\u4e3a\u4e86\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165Python\u81ea\u5e26\u7684\nunittest\n\u6a21\u5757\n\n\n\n\nassertEqual\n:\u662f\u5426\u76f8\u7b49\n\n\nassertTrue\n :\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\n\n\nsetUp\n:\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u524d\u6267\u884c\n\n\ntearDown\n:\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u540e\u6267\u884c\n\n\n\n\nimport unittest\n\nclass Logic(object):\n    \ndocstring for Logic\n\n    def __init__(self, arg):\n        super(Logic, self).__init__()\n        self.arg = arg\n\nclass Test(unittest.TestCase):\n    def test_init(self):\n        l = Logic(1)\n        self.assertEqual(l.arg,2)\n\nif __name__ == '__main__':\n    unittest.main()\n\n\n\n\n\u8fd0\u884c\u6d4b\u8bd5:\n\n\n\n\npython3 -m unittest test\n\n\npython test.py", 
            "title": "\u8c03\u8bd5"
        }, 
        {
            "location": "/python/py_test/#python", 
            "text": "", 
            "title": "python \u6d4b\u8bd5\u4e0e\u8c03\u8bd5"
        }, 
        {
            "location": "/python/py_test/#_1", 
            "text": "\u53c2\u8003: https://www.ibm.com/developerworks/cn/linux/l-cn-pythondebugger/ \n\u521a\u5199\u51fa\u6765\u7684\u7a0b\u5e8f\u4e0d\u53ef\u80fd100%\u6ca1\u6709\u9519\u8bef,\u8bed\u6cd5\u9519\u8bef\u53ef\u4ee5\u5728\u9519\u8bef\u4fe1\u606f\u4e2d\u5b9a\u4f4d\u5230,\u903b\u8f91\u9519\u8bef\u5219\u9700\u8981\u4e00\u5b9a\u7684\u8c03\u8bd5\u6280\u5de7.", 
            "title": "\u8c03\u8bd5"
        }, 
        {
            "location": "/python/py_test/#print", 
            "text": "print \u662f\u6240\u6709\u8bed\u8a00\u6700\u7b80\u5355\u7c97\u66b4\u7684\u8c03\u8bd5\u65b9\u5f0f,\u5728\u7a0b\u5e8f\u903b\u8f91\u5404\u5904\u52a0\u4e0a\u6253\u5370,\u770b\u8f93\u51fa  def foo(s):\n    n = int(s)\n    print('  n = %d' % n)\n    return 10 / n\n\ndef main():\n    foo('0')\nmain()", 
            "title": "print"
        }, 
        {
            "location": "/python/py_test/#_2", 
            "text": "assert \u7684\u610f\u601d\u662f\uff0c\u8868\u8fbe\u5f0f\u7ed3\u679c\u5e94\u8be5\u662f True \uff0c\u5426\u5219\u62a5\u9519  def foo(s):\n    n = int(s)\n    assert n != 0, 'n is zero!'\n    return 10 / n\n\ndef main():\n    foo('0')\n\nmain()", 
            "title": "\u65ad\u8a00"
        }, 
        {
            "location": "/python/py_test/#pdb", 
            "text": "pdb\u662fpython\u81ea\u5e26\u7684\u8c03\u8bd5\u5668,\u53ef\u4ee5\u5355\u6b65\u8c03\u8bd5,\u67e5\u770b\u5355\u6b65\u4e2d\u7684\u72b6\u6001 python3 -m pdb test.py  \u542f\u52a8pdb\u8c03\u8bd5,     \u547d\u4ee4  \u89e3\u91ca      break \u6216 b \u8bbe\u7f6e\u65ad\u70b9  \u8bbe\u7f6e\u65ad\u70b9    continue \u6216 c  \u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f    list \u6216 l  \u67e5\u770b\u5f53\u524d\u884c\u7684\u4ee3\u7801\u6bb5    step \u6216 s  \u8fdb\u5165\u51fd\u6570    return \u6216 r  \u6267\u884c\u4ee3\u7801\u76f4\u5230\u4ece\u5f53\u524d\u51fd\u6570\u8fd4\u56de    exit \u6216 q  \u4e2d\u6b62\u5e76\u9000\u51fa    next \u6216 n  \u6267\u884c\u4e0b\u4e00\u884c    pp  \u6253\u5370\u53d8\u91cf\u7684\u503c    help  \u5e2e\u52a9", 
            "title": "pdb"
        }, 
        {
            "location": "/python/py_test/#ide", 
            "text": "", 
            "title": "ide"
        }, 
        {
            "location": "/python/py_test/#pycharm", 
            "text": "", 
            "title": "PyCharm"
        }, 
        {
            "location": "/python/py_test/#pydev", 
            "text": "", 
            "title": "PyDev"
        }, 
        {
            "location": "/python/py_test/#_3", 
            "text": "\u5355\u5143\u6d4b\u8bd5\u662f\u7528\u6765\u5bf9\u4e00\u4e2a\u6a21\u5757\u3001\u4e00\u4e2a\u51fd\u6570\u6216\u8005\u4e00\u4e2a\u7c7b\u6765\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\n\u4e3a\u4e86\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165Python\u81ea\u5e26\u7684 unittest \u6a21\u5757   assertEqual :\u662f\u5426\u76f8\u7b49  assertTrue  :\u6761\u4ef6\u662f\u5426\u6ee1\u8db3  setUp :\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u524d\u6267\u884c  tearDown :\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u540e\u6267\u884c   import unittest\n\nclass Logic(object):\n     docstring for Logic \n    def __init__(self, arg):\n        super(Logic, self).__init__()\n        self.arg = arg\n\nclass Test(unittest.TestCase):\n    def test_init(self):\n        l = Logic(1)\n        self.assertEqual(l.arg,2)\n\nif __name__ == '__main__':\n    unittest.main()  \u8fd0\u884c\u6d4b\u8bd5:   python3 -m unittest test  python test.py", 
            "title": "\u5355\u5143\u6d4b\u8bd5"
        }, 
        {
            "location": "/python/py_fileio/", 
            "text": "python  \u6587\u4ef6io\n\n\n\u6587\u4ef6\u8bfb\u5199\n\n\n\u6587\u4ef6\u8bfb\u53d6\n\n\n  o_file = open(os.path.realpath(\npython.txt\n), 'r',encoding='GBK')\n  print(o_file.read())\n  o_file.close()\n\n\n\n\nos.path.realpath\u3000\u62ff\u5230\u5f53\u524d\u811a\u672c\u7684\u76ee\u5f55. r \u8bbe\u7f6e\u5c5e\u6027\uff0c\u53ea\u8bfb\uff0cmode=\u2019rb\u2019\u8bfb\u53d6\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e encoding  \u6307\u5b9a\u7f16\u7801\u65b9\u5f0f o_file.close()\u3000 \u663e\u5f0f\u5730\u5173\u95ed\u6587\u4ef6\uff0c\u4f46\u662f\u672a\u9500\u6bc1\u6587\u4ef6\u5bf9\u8c61\uff0c\u800c\u4e14\u5728\u51fa\u73b0\u5f02\u5e38\u65f6\u4e0d\u4e00\u5b9a\u80fd\u5173\u95ed\u6587\u4ef6\u6d41\uff0c\u6240\u6709python3\u6709\u53e6\u4e00\u79cd\u5199\u6cd5 \u7528with\u6765\u521b\u5efa\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u5f02\u5e38\u5728with\u5757\u7ed3\u675f\u540e\u6587\u4ef6\u90fd\u4f1a\u5173\u95ed\uff0c\u7c7b\u4f3c\u4e8e\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\n\n\n  with open(os.path.realpath(\npython.txt\n), 'r',encoding='GBK') as o_file:\n      print(o_file.read())\n\n\n\n\n\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c:\n\n\n  line_number=0\n  with open(os.path.realpath(\npython.txt\n), 'r',encoding='GBK') as o_file:\n      for a_line in o_file:\n          line_number+=1\n          print('{0}\\t{1}'.format(line_number,a_line.rstrip()))\n\n\n\n\n\u56e0\u4e3a\u6d41\u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528for\u5faa\u73af\u6765\u8bfb\u53d6\uff0cpython\u4f1a\u81ea\u52a8\u8bc6\u522b\u884c\u7ed3\u675f\u7b26\u3002rstrip()\u662f\u53bb\u7a7a\u767d\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5.\n\u4f7f\u7528\nreadlines\n:\n\n\nf = open(\npython.txt\n,\nr\n)\nfor  line in f.readlines():\n  print(line.strip())# \u628a\u672b\u5c3e\u7684'\\n'\u5220\u6389\n  f.close()\n\n\n\n\n\u5199\u5165\u6587\u672c\n\n\n  with open(os.path.realpath(\npython.txt\n), mode='w') as o_file:\n      o_file.write('test success\\n')\n  with open(os.path.realpath(\npython.txt\n), 'r',encoding='GBK') as o_file:\n      print(o_file.read())\n\n\n\n\n\u4e0e\u8bfb\u53d6\u6587\u672c\u65b9\u5f0f\u76f8\u540c\uff0cmode=\u2019w\u2019\u4ee3\u8868\u8986\u76d6\uff0cmode=\u2019a\u2019\u4ee3\u8868\u8ffd\u52a0 \u3002\n\n\nStringIO\n\n\n\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u7f13\u51b2\u6d41\n\n\nfrom io import StringIO\nf = StringIO()\nf.write(\nhello\\n\n)\nf.write(\nfar\n)\nprint(f.getvalue())\nf.close()\n\n\n\n\nBytesIO\n\n\n\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u7f13\u51b2\u6d41\n\n\nfrom io import BytesIO\nf = BytesIO()\nf.write('\u4e2d\u6587'.encode('utf-8'))\nprint(f.getvalue())\nf.close()\n\n\n\n\nXML\u64cd\u4f5c\n\n\n\u89e3\u6790XML\n\n\npython\u89e3\u6790\u6709Dom\u548cSax\u89e3\u6790\u5668\uff0c\u73b0\u5728\u6211\u4eec\u6765\u7528\u53e6\u5916\u4e00\u4e2a\u5e93:xml.etree.ElementTree\u6765\u89e3\u6790\n\n\n  \ndata\n\n       \nname id='1'\nwujiyu\n/name\n\n       \nname id='2'\nwujiyu\n/name\n\n  \n/data\n\n\n\n\n\n  import os\n  import xml.etree.ElementTree as etree\n  tree = etree.parse(os.path.realpath(\npy.xml\n))\n  root=tree.getroot()\n  print(root)#\nElement 'data' at 0x02B1A330\n\n  print(root[0].tag)#name\n  print(root[0].attrib['id'])#1\n  print(len(root.findall('name')))#2\n\n\n\n\n\u6240\u6709\u8282\u70b9\u90fd\u4e3a\u5217\u8868\uff0c\u6240\u6709\u5c5e\u6027\u90fd\u4e3a\u5b57\u5178,findall\u7528\u6765\u67e5\u627e\u5143\u7d20\uff0c\u53ef\u5d4c\u5957\u67e5\u627e\u3002 \u5bf9\u4e8e\u5927\u578bxml\u53ef\u7528lxml\u6765\u4ee3\u66ffElementTree,lxml\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5f00\u6e90\u5e93\uff0cfindall\u67e5\u627e\u8bed\u6cd5\u66f4\u5f3a\u5927,api\u4e0eElementTree\u76f8\u540c\n\n\n\u521b\u5efaxml\n\n\n\u6211\u4eec\u7528\u4e0blxml\u5427\uff0clxml\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u9700\u8981\u5b89\u88c5\uff0c\u5730\u5740: \nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml\n \u770b\u51c6\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u7248\u672c\n\n\n\u5f00\u59cb\u521b\u5efaxml\n\n\n  from lxml import etree\n  import os\n  newfeed = etree.Element('feed')\n  names = etree.SubElement(newfeed,'name',attrib={'old':'yes','id':'1'})\n  names.text='wujiyu'\n  print(etree.tostring(newfeed))\n\n\n\n\n\ntutorial\uff1a\nhttp://lxml.de/tutorial.html\n\n\n## \u6587\u4ef6\u8def\u5f84\u64cd\u4f5c\n\n\n   import  os\n   # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6587\u4ef6\n   print(os.listdir(path='.'))  # ['python.txt', 'init.py']\n   # \u5207\u5272\u5730\u5740\n   print(os.path.split('ab/a.txt'))  # ('ab', 'a.txt')\n   # \u628a\u6587\u4ef6\u540d\u5206\u6210\u6587\u4ef6\u540d\u79f0\u548c\u6269\u5c55\u540d\n   print(os.path.splitext('ab/a.txt'))  # ('ab/a', '.txt')\n   # \u6587\u4ef6+\u6269\u5c55\u540d\n   print(os.path.basename('bcd/abc'))  # abc\n  # \u521b\u5efa\u4e00\u7ea7\u76ee\u5f55\n  os.mkdir('test1')\n  # \u521b\u5efa\u591a\u7ea7\u76ee\u5f55\n  os.makedirs('test2/test')\n  # \u5220\u9664\u4e00\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u4e1c\u897f\n  os.removedirs('path')\n  # \u5220\u9664\u4e00\u4e2a\u76ee\u5f55\uff0c\u800c\u4e14\u4e00\u5b9a\u8981\u7a7a\uff0c\u5426\u5219os.errer\n  os.rmdir('path')\n\n\n\n\n\u76f8\u5bf9\u8def\u5f84,\u7edd\u5bf9\u8def\u5f84\n\n\nprint(\nsys.path:\n+sys.path[0])\nprint(\nsys.argv:\n+sys.argv[0])\nprint(\n__file__:\n+__file__)\nprint(\nos.getcwd():\n+os.getcwd())\nprint(\nos.path.realpath():\n+os.path.realpath(__file__))\nprint(\n(os.path.abspath(__file__)):\n+os.path.abspath(__file__))\nprint(\nos.path.dirname(os.path.realpath()):\n+os.path.dirname(os.path.realpath(__file__)))\nprint(\nos.path.dirname(os.path.abspath(__file__)):\n+os.path.dirname(os.path.abspath(__file__)))\n\n\u7ed3\u679c:\n\nsys.path:/Users/far/Develop/git/py_search/cloudapps/auto_sign\nsys.argv:/Users/far/Develop/git/py_search/cloudapps/auto_sign/test.py\n__file__:/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\nos.getcwd():/Users/far/Develop/git/py_search/cloudapps/auto_sign\nos.path.realpath():/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\n(os.path.abspath(__file__)):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\nos.path.dirname(os.path.realpath()):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu\nos.path.dirname(os.path.abspath(__file__)):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu\n[Finished in 0.1s]\n\n\n\n\n\u5e8f\u5217\u5316\n\n\npickle\n\n\n\n\ndump\n: \u5c06\u5bf9\u8c61\u7cfb\u5217\u5316\u5230\u6587\u4ef6\u4e2d\n\n\nload\n: \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u7cfb\u5217\u5316\u4fe1\u606f\n\n\n\n\nimport pickle\n\nt = {\nname\n:\nfar\n}\nwith open('dump.txt', 'wb') as f:\n  pickle.dump(t,f)\nwith open('dump.txt', 'rb') as f:\n  d = pickle.load(f)\n  print(d)\n\n'''\n{'name': 'far'}\n'''\n\n\n\n\njson\n\n\n\u57fa\u7840\n\n\n\n\ndumps\n:\u5c06\u5bf9\u8c61\u8f6c\u5316\u6210\u5b57\u7b26\u4e32\n\n\nloads\n:\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5bf9\u8c61\n\n\nload\n:\u52a0\u8f7d\u6587\u4ef6\u5bf9\u8c61\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5bf9\u8c61\n\n\n\n\nimport json\n\nt = {\nname\n:\nfar\n}\nt_str= json.dumps(t)\nprint(t_str)\nd = json.loads(t_str)\nprint(d)\nd = json.load(open(\ndump.json\n,\nr\n))\nprint(d)\n'''\n{\nname\n: \nfar\n}\n{'name': 'far'}\n{'name': 'far'}\n'''\n\n\n\n\n\u8f6c\u6362\u7c7b\u5bf9\u8c61\n\n\nimport json\n\nclass Student(object):\n  def __init__(self, name, age, score):\n    self.name = name\n    self.age = age\n    self.score = score\n\n#\u8f6c\u6362\u6210\u53ef\u89e3\u6790\u5b57\u7b26\u4e32\u5bf9\u8c61\ndef student2dict(std):\n  return {\n    'name': std.name,\n    'age': std.age,\n    'score': std.score\n  }\n\n#\u8f6c\u6362\u6210\u5bf9\u8c61\ndef dict2student(d):\n  return Student(d['name'], d['age'], d['score'])\n\ns = Student('Bob', 20, 88)\nd = json.dumps(s,default=student2dict) #\u81ea\u5b9a\u4e49\u4e00\u4e2a\u8f6c\u6362\u51fd\u6570\nprint(d)\nd =json.dumps(s,default=lambda obj: obj.__dict__)#\u4f7f\u7528\u5bf9\u8c61\u7684dict\u5c5e\u6027\nprint(d)\ns1 = json.loads(d,object_hook=dict2student)\nprint(s1.name,s1.age,s1.score)\n'''\n{\nscore\n: 88, \nname\n: \nBob\n, \nage\n: 20}\n{\nscore\n: 88, \nage\n: 20, \nname\n: \nBob\n}\nBob 20 88\n'''", 
            "title": "\u6587\u4ef6io"
        }, 
        {
            "location": "/python/py_fileio/#python-io", 
            "text": "", 
            "title": "python  \u6587\u4ef6io"
        }, 
        {
            "location": "/python/py_fileio/#_1", 
            "text": "", 
            "title": "\u6587\u4ef6\u8bfb\u5199"
        }, 
        {
            "location": "/python/py_fileio/#_2", 
            "text": "o_file = open(os.path.realpath( python.txt ), 'r',encoding='GBK')\n  print(o_file.read())\n  o_file.close()  os.path.realpath\u3000\u62ff\u5230\u5f53\u524d\u811a\u672c\u7684\u76ee\u5f55. r \u8bbe\u7f6e\u5c5e\u6027\uff0c\u53ea\u8bfb\uff0cmode=\u2019rb\u2019\u8bfb\u53d6\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e encoding  \u6307\u5b9a\u7f16\u7801\u65b9\u5f0f o_file.close()\u3000 \u663e\u5f0f\u5730\u5173\u95ed\u6587\u4ef6\uff0c\u4f46\u662f\u672a\u9500\u6bc1\u6587\u4ef6\u5bf9\u8c61\uff0c\u800c\u4e14\u5728\u51fa\u73b0\u5f02\u5e38\u65f6\u4e0d\u4e00\u5b9a\u80fd\u5173\u95ed\u6587\u4ef6\u6d41\uff0c\u6240\u6709python3\u6709\u53e6\u4e00\u79cd\u5199\u6cd5 \u7528with\u6765\u521b\u5efa\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u5f02\u5e38\u5728with\u5757\u7ed3\u675f\u540e\u6587\u4ef6\u90fd\u4f1a\u5173\u95ed\uff0c\u7c7b\u4f3c\u4e8e\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf    with open(os.path.realpath( python.txt ), 'r',encoding='GBK') as o_file:\n      print(o_file.read())  \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c:    line_number=0\n  with open(os.path.realpath( python.txt ), 'r',encoding='GBK') as o_file:\n      for a_line in o_file:\n          line_number+=1\n          print('{0}\\t{1}'.format(line_number,a_line.rstrip()))  \u56e0\u4e3a\u6d41\u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528for\u5faa\u73af\u6765\u8bfb\u53d6\uff0cpython\u4f1a\u81ea\u52a8\u8bc6\u522b\u884c\u7ed3\u675f\u7b26\u3002rstrip()\u662f\u53bb\u7a7a\u767d\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5.\n\u4f7f\u7528 readlines :  f = open( python.txt , r )\nfor  line in f.readlines():\n  print(line.strip())# \u628a\u672b\u5c3e\u7684'\\n'\u5220\u6389\n  f.close()", 
            "title": "\u6587\u4ef6\u8bfb\u53d6"
        }, 
        {
            "location": "/python/py_fileio/#_3", 
            "text": "with open(os.path.realpath( python.txt ), mode='w') as o_file:\n      o_file.write('test success\\n')\n  with open(os.path.realpath( python.txt ), 'r',encoding='GBK') as o_file:\n      print(o_file.read())  \u4e0e\u8bfb\u53d6\u6587\u672c\u65b9\u5f0f\u76f8\u540c\uff0cmode=\u2019w\u2019\u4ee3\u8868\u8986\u76d6\uff0cmode=\u2019a\u2019\u4ee3\u8868\u8ffd\u52a0 \u3002", 
            "title": "\u5199\u5165\u6587\u672c"
        }, 
        {
            "location": "/python/py_fileio/#stringio", 
            "text": "\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u7f13\u51b2\u6d41  from io import StringIO\nf = StringIO()\nf.write( hello\\n )\nf.write( far )\nprint(f.getvalue())\nf.close()", 
            "title": "StringIO"
        }, 
        {
            "location": "/python/py_fileio/#bytesio", 
            "text": "\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u7f13\u51b2\u6d41  from io import BytesIO\nf = BytesIO()\nf.write('\u4e2d\u6587'.encode('utf-8'))\nprint(f.getvalue())\nf.close()", 
            "title": "BytesIO"
        }, 
        {
            "location": "/python/py_fileio/#xml", 
            "text": "", 
            "title": "XML\u64cd\u4f5c"
        }, 
        {
            "location": "/python/py_fileio/#xml_1", 
            "text": "python\u89e3\u6790\u6709Dom\u548cSax\u89e3\u6790\u5668\uff0c\u73b0\u5728\u6211\u4eec\u6765\u7528\u53e6\u5916\u4e00\u4e2a\u5e93:xml.etree.ElementTree\u6765\u89e3\u6790     data \n        name id='1' wujiyu /name \n        name id='2' wujiyu /name \n   /data     import os\n  import xml.etree.ElementTree as etree\n  tree = etree.parse(os.path.realpath( py.xml ))\n  root=tree.getroot()\n  print(root)# Element 'data' at 0x02B1A330 \n  print(root[0].tag)#name\n  print(root[0].attrib['id'])#1\n  print(len(root.findall('name')))#2  \u6240\u6709\u8282\u70b9\u90fd\u4e3a\u5217\u8868\uff0c\u6240\u6709\u5c5e\u6027\u90fd\u4e3a\u5b57\u5178,findall\u7528\u6765\u67e5\u627e\u5143\u7d20\uff0c\u53ef\u5d4c\u5957\u67e5\u627e\u3002 \u5bf9\u4e8e\u5927\u578bxml\u53ef\u7528lxml\u6765\u4ee3\u66ffElementTree,lxml\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5f00\u6e90\u5e93\uff0cfindall\u67e5\u627e\u8bed\u6cd5\u66f4\u5f3a\u5927,api\u4e0eElementTree\u76f8\u540c", 
            "title": "\u89e3\u6790XML"
        }, 
        {
            "location": "/python/py_fileio/#xml_2", 
            "text": "\u6211\u4eec\u7528\u4e0blxml\u5427\uff0clxml\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u9700\u8981\u5b89\u88c5\uff0c\u5730\u5740:  http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml  \u770b\u51c6\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u7248\u672c  \u5f00\u59cb\u521b\u5efaxml    from lxml import etree\n  import os\n  newfeed = etree.Element('feed')\n  names = etree.SubElement(newfeed,'name',attrib={'old':'yes','id':'1'})\n  names.text='wujiyu'\n  print(etree.tostring(newfeed))  tutorial\uff1a http://lxml.de/tutorial.html  ## \u6587\u4ef6\u8def\u5f84\u64cd\u4f5c     import  os\n   # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6587\u4ef6\n   print(os.listdir(path='.'))  # ['python.txt', 'init.py']\n   # \u5207\u5272\u5730\u5740\n   print(os.path.split('ab/a.txt'))  # ('ab', 'a.txt')\n   # \u628a\u6587\u4ef6\u540d\u5206\u6210\u6587\u4ef6\u540d\u79f0\u548c\u6269\u5c55\u540d\n   print(os.path.splitext('ab/a.txt'))  # ('ab/a', '.txt')\n   # \u6587\u4ef6+\u6269\u5c55\u540d\n   print(os.path.basename('bcd/abc'))  # abc\n  # \u521b\u5efa\u4e00\u7ea7\u76ee\u5f55\n  os.mkdir('test1')\n  # \u521b\u5efa\u591a\u7ea7\u76ee\u5f55\n  os.makedirs('test2/test')\n  # \u5220\u9664\u4e00\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u4e1c\u897f\n  os.removedirs('path')\n  # \u5220\u9664\u4e00\u4e2a\u76ee\u5f55\uff0c\u800c\u4e14\u4e00\u5b9a\u8981\u7a7a\uff0c\u5426\u5219os.errer\n  os.rmdir('path')", 
            "title": "\u521b\u5efaxml"
        }, 
        {
            "location": "/python/py_fileio/#_4", 
            "text": "print( sys.path: +sys.path[0])\nprint( sys.argv: +sys.argv[0])\nprint( __file__: +__file__)\nprint( os.getcwd(): +os.getcwd())\nprint( os.path.realpath(): +os.path.realpath(__file__))\nprint( (os.path.abspath(__file__)): +os.path.abspath(__file__))\nprint( os.path.dirname(os.path.realpath()): +os.path.dirname(os.path.realpath(__file__)))\nprint( os.path.dirname(os.path.abspath(__file__)): +os.path.dirname(os.path.abspath(__file__)))\n\n\u7ed3\u679c:\n\nsys.path:/Users/far/Develop/git/py_search/cloudapps/auto_sign\nsys.argv:/Users/far/Develop/git/py_search/cloudapps/auto_sign/test.py\n__file__:/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\nos.getcwd():/Users/far/Develop/git/py_search/cloudapps/auto_sign\nos.path.realpath():/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\n(os.path.abspath(__file__)):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu/zumuzu_tv.py\nos.path.dirname(os.path.realpath()):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu\nos.path.dirname(os.path.abspath(__file__)):/Users/far/Develop/git/py_search/cloudapps/auto_sign/zimuzu\n[Finished in 0.1s]", 
            "title": "\u76f8\u5bf9\u8def\u5f84,\u7edd\u5bf9\u8def\u5f84"
        }, 
        {
            "location": "/python/py_fileio/#_5", 
            "text": "", 
            "title": "\u5e8f\u5217\u5316"
        }, 
        {
            "location": "/python/py_fileio/#pickle", 
            "text": "dump : \u5c06\u5bf9\u8c61\u7cfb\u5217\u5316\u5230\u6587\u4ef6\u4e2d  load : \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u7cfb\u5217\u5316\u4fe1\u606f   import pickle\n\nt = { name : far }\nwith open('dump.txt', 'wb') as f:\n  pickle.dump(t,f)\nwith open('dump.txt', 'rb') as f:\n  d = pickle.load(f)\n  print(d)\n\n'''\n{'name': 'far'}\n'''", 
            "title": "pickle"
        }, 
        {
            "location": "/python/py_fileio/#json", 
            "text": "", 
            "title": "json"
        }, 
        {
            "location": "/python/py_fileio/#_6", 
            "text": "dumps :\u5c06\u5bf9\u8c61\u8f6c\u5316\u6210\u5b57\u7b26\u4e32  loads :\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5bf9\u8c61  load :\u52a0\u8f7d\u6587\u4ef6\u5bf9\u8c61\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5bf9\u8c61   import json\n\nt = { name : far }\nt_str= json.dumps(t)\nprint(t_str)\nd = json.loads(t_str)\nprint(d)\nd = json.load(open( dump.json , r ))\nprint(d)\n'''\n{ name :  far }\n{'name': 'far'}\n{'name': 'far'}\n'''", 
            "title": "\u57fa\u7840"
        }, 
        {
            "location": "/python/py_fileio/#_7", 
            "text": "import json\n\nclass Student(object):\n  def __init__(self, name, age, score):\n    self.name = name\n    self.age = age\n    self.score = score\n\n#\u8f6c\u6362\u6210\u53ef\u89e3\u6790\u5b57\u7b26\u4e32\u5bf9\u8c61\ndef student2dict(std):\n  return {\n    'name': std.name,\n    'age': std.age,\n    'score': std.score\n  }\n\n#\u8f6c\u6362\u6210\u5bf9\u8c61\ndef dict2student(d):\n  return Student(d['name'], d['age'], d['score'])\n\ns = Student('Bob', 20, 88)\nd = json.dumps(s,default=student2dict) #\u81ea\u5b9a\u4e49\u4e00\u4e2a\u8f6c\u6362\u51fd\u6570\nprint(d)\nd =json.dumps(s,default=lambda obj: obj.__dict__)#\u4f7f\u7528\u5bf9\u8c61\u7684dict\u5c5e\u6027\nprint(d)\ns1 = json.loads(d,object_hook=dict2student)\nprint(s1.name,s1.age,s1.score)\n'''\n{ score : 88,  name :  Bob ,  age : 20}\n{ score : 88,  age : 20,  name :  Bob }\nBob 20 88\n'''", 
            "title": "\u8f6c\u6362\u7c7b\u5bf9\u8c61"
        }, 
        {
            "location": "/python/py_inmodule/", 
            "text": "\u5e38\u7528\u5185\u5efa\u6a21\u5757\n\n\nre\u6a21\u5757(\u6b63\u5219)\n\n\nmatch\n\u5224\u5b9a\u662f\u5426\u6709\u5339\u914d\n\n\nimport re\ntest = 'qqq'\nprint(re.match(r'q', test))\nprint(re.match(r's', test))\n'''\n\n_sre.SRE_Match object at 0x01D07A30\n\nNone\n'''\n\n\n\n\nsplit\n\n\n\u7a7a\u683c\u5206\u5272\n\n\nre.split(r'\\s+', 'a b   c')\n'''\n['a', 'b', 'c']\n'''\n\n\n\n\n\u5206\u7ec4\u63d0\u53d6\n\n\n()\n\u7528\u4e8e\u5206\u7ec4,\u4e0b\u9762\u662f\u63d0\u53d6\u533a\u53f7\u548c\u7535\u8bdd\u53f7\u7801\ngroup(0)\n\u8fd4\u56de\u539f\u59cb\u5b57\u7b26\u4e32\n\n\nm = re.match(r'^(\\d{3})-(\\d{3,8})$', '010-12345')\nprint(m.group(0),m.group(1),m.group(2))\n'''\n('010-12345', '010', '12345')\n'''\n\n\n\n\n\u8d2a\u5a6a\u5339\u914d\n\n\n?\n\u4e3a\u975e\u8d2a\u5a6a\u5339\u914d\n\n\nre.match(r'^(\\d+)(0*)$', '102300').groups()\nre.match(r'^(\\d+?)(0*)$', '102300').groups()\n'''\n('102300', '')\n('1023', '00')\n'''\n\n\n\n\n\u9884\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\nre_telephone = re.compile(r'^(\\d{3})-(\\d{3,8})$')\nre_telephone.match('010-12345').groups()\n\n\n\n\ndatetime(\u65f6\u95f4\u5904\u7406)\n\n\nfrom datetime import datetime,timedelta,timezone\n\nprint(datetime.now())\n\n#\u6307\u5b9a\u65f6\u95f4\u521b\u5efa\u5bf9\u8c61\ndt = datetime(2016, 7, 26, 12, 0,0)\nprint(type(dt),dt)\n\n#datetime\u8f6c\u6362\u4e3atimestamp\n#1970\u5e741\u67081\u65e5 00:00:00 UTC+00:00\u65f6\u533a\u7684\u65f6\u523b\u79f0\u4e3aepoch time\uff0c\u8bb0\u4e3a0\nprint(\ndatetime\u8f6c\u6362\u4e3atimestamp\n)\nprint(dt.timestamp())\n\n#timestamp\u8f6c\u6362\u4e3adatetime\nprint(\ntimestamp\u8f6c\u6362\u4e3adatetime\n)\nt = 1469505600\nprint(datetime.fromtimestamp(t))# \u672c\u5730\u65f6\u95f4,\u4e1c\u516b\u533a\nprint(datetime.utcfromtimestamp(t)) # UTC\u65f6\u95f4\n\n#str\u8f6c\u6362\u4e3adatetime\nprint(\nstr\u8f6c\u6362\u4e3adatetime\n)\ncday = datetime.strptime('2016-7-26 12:00:00', '%Y-%m-%d %H:%M:%S')\nprint(cday)\n\n# datetime\u8f6c\u6362\u4e3astr\nprint(\ndatetime\u8f6c\u6362\u4e3astr\n)\nnow = datetime.now()\nprint(now.strftime('%Y-%m-%d %H:%M:%S'))\n\n#datetime\u52a0\u51cf\nprint(\ndatetime\u52a0\u51cf\n)\nnow = datetime.now()\nprint(now)\nnow =now + timedelta(days=2, hours=12)\nprint(now)\n\nprint(\n\u65f6\u533a\u8f6c\u6362\n)\n# \u62ff\u5230UTC\u65f6\u95f4\uff0c\u5e76\u5f3a\u5236\u8bbe\u7f6e\u65f6\u533a\u4e3aUTC+0:00:\nutc_dt = datetime.utcnow().replace(tzinfo=timezone.utc)\nprint(utc_dt)\n# astimezone()\u5c06\u8f6c\u6362\u65f6\u533a\u4e3a\u5317\u4eac\u65f6\u95f4:\nbj_dt = utc_dt.astimezone(timezone(timedelta(hours=8)))\nprint(bj_dt)\n# astimezone()\u5c06\u8f6c\u6362\u65f6\u533a\u4e3a\u4e1c\u4eac\u65f6\u95f4:\ntokyo_dt = utc_dt.astimezone(timezone(timedelta(hours=9)))\nprint(tokyo_dt)\n# astimezone()\u5c06bj_dt\u8f6c\u6362\u65f6\u533a\u4e3a\u4e1c\u4eac\u65f6\u95f4:\ntokyo_dt2 = bj_dt.astimezone(timezone(timedelta(hours=9)))\nprint(tokyo_dt2)\n'''\n2016-07-27 12:46:08.216245\n\nclass 'datetime.datetime'\n 2016-07-26 12:00:00\ndatetime\u8f6c\u6362\u4e3atimestamp\n1469505600.0\ntimestamp\u8f6c\u6362\u4e3adatetime\n2016-07-26 12:00:00\n2016-07-26 04:00:00\nstr\u8f6c\u6362\u4e3adatetime\n2016-07-26 12:00:00\ndatetime\u8f6c\u6362\u4e3astr\n2016-07-27 12:46:08\ndatetime\u52a0\u51cf\n2016-07-27 12:46:08.235246\n2016-07-30 00:46:08.235246\n\u65f6\u533a\u8f6c\u6362\n2016-07-27 04:46:08.236246+00:00\n2016-07-27 12:46:08.236246+08:00\n2016-07-27 13:46:08.236246+09:00\n2016-07-27 13:46:08.236246+09:00\n'''\n\n\n\n\ncollections\n\n\nnamedtuple\n\n\nnamedtuple\n\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\ntuple\n\u5bf9\u8c61\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86\ntuple\n\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5e76\u53ef\u4ee5\u7528\u5c5e\u6027\u800c\u4e0d\u662f\u7d22\u5f15\u6765\u5f15\u7528\ntuple\n\u7684\u67d0\u4e2a\u5143\u7d20\n\n\nfrom collections import namedtuple\nPoint = namedtuple('Point', ['x', 'y'])\np = Point(1, 2)\nprint(p,p.x,p.y)\nprint(isinstance(p,Point))\nprint(isinstance(p,tuple))\n'''\nPoint(x=1, y=2) 1 2\nTrue\nTrue\n'''\n\n\n\n\ndeque\n\n\ndeque\u662f\u4e3a\u4e86\u9ad8\u6548\u5b9e\u73b0\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u53cc\u5411\u5217\u8868\uff0c\u9002\u5408\u7528\u4e8e\u961f\u5217\u548c\u6808\n\n\nfrom collections import deque\nq = deque(['a', 'b', 'c'])\nq.pop()\nq.popleft()\nq.append('x')\nq.appendleft('y')\nprint(q)\n'''\ndeque(['y', 'b', 'x'])\n'''\n\n\n\n\ndefaultdict\n\n\n\u4f7f\u7528dict\u65f6\uff0c\u5982\u679c\u5f15\u7528\u7684Key\u4e0d\u5b58\u5728\uff0c\u5c31\u4f1a\u629b\u51faKeyError\u3002\u5982\u679c\u5e0c\u671bkey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u5c31\u53ef\u4ee5\u7528defaultdict\uff1a\n\n\nfrom collections import defaultdict\ndd = defaultdict(lambda: 'N/A')\ndd['key1'] = 'abc'\nprint(dd['key1'] )\nprint(dd['key2'] )\n'''\nabc\nN/A\n'''\n\n\n\n\nOrderedDict\n\n\n\u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684,\u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684,OrderedDict\u4fdd\u8bc1\u4e86\u63d2\u5165\u987a\u5e8f\n\n\nfrom collections import OrderedDict\nd = dict([('a', 1), ('b', 2), ('c', 3)])\nod =OrderedDict([('a', 1), ('b', 2), ('c', 3)])\nprint(d.keys())\nprint(od.keys())\n'''\ndict_keys(['a', 'c', 'b'])\nodict_keys(['a', 'b', 'c'])\n'''\n\n\n\n\nCounter\n\n\nCounter\n\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u5668\n\n\nfrom collections import Counter\nc = Counter()\nfor ch in 'programming':\n     c[ch] = c[ch] + 1\nprint(c)\n'''\nCounter({'m': 2, 'g': 2, 'r': 2, 'n': 1, 'i': 1, 'o': 1, 'a': 1, 'p': 1})\n'''\n\n\n\n\nbase64\n\n\nimport base64\nb=base64.b64encode(b'binary\\x00string')\nprint(b)\ns  = base64.b64decode(b)\nprint(s)\n#\u7531\u4e8e\u6807\u51c6\u7684Base64\u7f16\u7801\u540e\u53ef\u80fd\u51fa\u73b0\u5b57\u7b26+\u548c/\uff0c\u5728URL\u4e2d\u5c31\u4e0d\u80fd\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\uff0c\u6240\u4ee5\u53c8\u6709\u4e00\u79cd\nurl safe\n\u7684base64\u7f16\u7801\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u5b57\u7b26+\u548c/\u5206\u522b\u53d8\u6210-\u548c_\uff1a\nbu = base64.urlsafe_b64encode(b'i\\xb7\\x1d\\xfb\\xef\\xff')\nprint(bu)\nsu = base64.urlsafe_b64decode(bu)\nprint(su)\n\n\n\n\nstruct(\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362)\n\n\n\u8868\u793a\u5b57\u8282\u987a\u5e8f\u662f\nbig-endian\n\uff0c\u4e5f\u5c31\u662f\u7f51\u7edc\u5e8f\uff0c\nI\n\u8868\u793a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\n\n\nimport struct\nb = struct.pack('\nI', 10240099)\nprint(b)\nv = struct.unpack('\nI',b)\nprint(v)\n'''\nb'\\x00\\x9c@c'\n(10240099,)\n'''\n\n\n\n\nstruct\u6a21\u5757\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u53c2\u8003Python\u5b98\u65b9\u6587\u6863\uff1a\nhttps://docs.python.org/3/library/struct.html#format-characters\n\n\nhashlib\n\n\nimport hashlib\n\nmd5 = hashlib.md5()\nmd5.update(\nhello\n.encode('utf-8'))\nmd5.update(\nworld\n.encode('utf-8'))\nprint(md5.hexdigest())\n\n#sha1\nsha1 = hashlib.sha1()\nsha1.update('how to use sha1 in '.encode('utf-8'))\nsha1.update('python hashlib?'.encode('utf-8'))\nprint(sha1.hexdigest())\n'''\nfc5e038d38a57032085441e7fe7010b0\n2c76b57293ce30acef38d98f6046927161b46a44\n'''\n\n\n\n\nitertools\n\n\nimport itertools\n#\u521b\u5efa\u65e0\u9650\u8fed\u4ee3\u5668\nna = itertools.count(1)\nfor x in na:\n    print(x)\n    pass\n'''12345...'''\n\n#\u5faa\u73af\u91cd\u590d\u8fed\u4ee3\ncs = itertools.cycle('ABC')\n'''ABCABC'''\n\n#\u6307\u5b9a\u6b21\u6570\u91cd\u590d\nns = itertools.repeat('A', 4)\nfor x in ns:\n    print(x)\n    pass\n'''AAAA'''\n\n#\u8fed\u4ee3\u5bf9\u8c61\u4e32\u8054\u8d77\u6765\nfor c in itertools.chain('ABC', 'XYZ'):\n    print(c)\n'''ABCXYZ'''\n\n#\u76f8\u90bb\u7684\u91cd\u590d\u5143\u7d20\u5206\u7ea7\nfor key, group in itertools.groupby('AaBBAA', lambda c: c.upper()):\n    print(key, list(group))\n'''\nA ['A', 'a']\nB ['B', 'B']\nA ['A', 'A']\n'''", 
            "title": "\u6a21\u5757"
        }, 
        {
            "location": "/python/py_inmodule/#_1", 
            "text": "", 
            "title": "\u5e38\u7528\u5185\u5efa\u6a21\u5757"
        }, 
        {
            "location": "/python/py_inmodule/#re", 
            "text": "", 
            "title": "re\u6a21\u5757(\u6b63\u5219)"
        }, 
        {
            "location": "/python/py_inmodule/#match", 
            "text": "import re\ntest = 'qqq'\nprint(re.match(r'q', test))\nprint(re.match(r's', test))\n''' _sre.SRE_Match object at 0x01D07A30 \nNone\n'''", 
            "title": "match\u5224\u5b9a\u662f\u5426\u6709\u5339\u914d"
        }, 
        {
            "location": "/python/py_inmodule/#split", 
            "text": "\u7a7a\u683c\u5206\u5272  re.split(r'\\s+', 'a b   c')\n'''\n['a', 'b', 'c']\n'''", 
            "title": "split"
        }, 
        {
            "location": "/python/py_inmodule/#_2", 
            "text": "() \u7528\u4e8e\u5206\u7ec4,\u4e0b\u9762\u662f\u63d0\u53d6\u533a\u53f7\u548c\u7535\u8bdd\u53f7\u7801 group(0) \u8fd4\u56de\u539f\u59cb\u5b57\u7b26\u4e32  m = re.match(r'^(\\d{3})-(\\d{3,8})$', '010-12345')\nprint(m.group(0),m.group(1),m.group(2))\n'''\n('010-12345', '010', '12345')\n'''", 
            "title": "\u5206\u7ec4\u63d0\u53d6"
        }, 
        {
            "location": "/python/py_inmodule/#_3", 
            "text": "? \u4e3a\u975e\u8d2a\u5a6a\u5339\u914d  re.match(r'^(\\d+)(0*)$', '102300').groups()\nre.match(r'^(\\d+?)(0*)$', '102300').groups()\n'''\n('102300', '')\n('1023', '00')\n'''", 
            "title": "\u8d2a\u5a6a\u5339\u914d"
        }, 
        {
            "location": "/python/py_inmodule/#_4", 
            "text": "re_telephone = re.compile(r'^(\\d{3})-(\\d{3,8})$')\nre_telephone.match('010-12345').groups()", 
            "title": "\u9884\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f"
        }, 
        {
            "location": "/python/py_inmodule/#datetime", 
            "text": "from datetime import datetime,timedelta,timezone\n\nprint(datetime.now())\n\n#\u6307\u5b9a\u65f6\u95f4\u521b\u5efa\u5bf9\u8c61\ndt = datetime(2016, 7, 26, 12, 0,0)\nprint(type(dt),dt)\n\n#datetime\u8f6c\u6362\u4e3atimestamp\n#1970\u5e741\u67081\u65e5 00:00:00 UTC+00:00\u65f6\u533a\u7684\u65f6\u523b\u79f0\u4e3aepoch time\uff0c\u8bb0\u4e3a0\nprint( datetime\u8f6c\u6362\u4e3atimestamp )\nprint(dt.timestamp())\n\n#timestamp\u8f6c\u6362\u4e3adatetime\nprint( timestamp\u8f6c\u6362\u4e3adatetime )\nt = 1469505600\nprint(datetime.fromtimestamp(t))# \u672c\u5730\u65f6\u95f4,\u4e1c\u516b\u533a\nprint(datetime.utcfromtimestamp(t)) # UTC\u65f6\u95f4\n\n#str\u8f6c\u6362\u4e3adatetime\nprint( str\u8f6c\u6362\u4e3adatetime )\ncday = datetime.strptime('2016-7-26 12:00:00', '%Y-%m-%d %H:%M:%S')\nprint(cday)\n\n# datetime\u8f6c\u6362\u4e3astr\nprint( datetime\u8f6c\u6362\u4e3astr )\nnow = datetime.now()\nprint(now.strftime('%Y-%m-%d %H:%M:%S'))\n\n#datetime\u52a0\u51cf\nprint( datetime\u52a0\u51cf )\nnow = datetime.now()\nprint(now)\nnow =now + timedelta(days=2, hours=12)\nprint(now)\n\nprint( \u65f6\u533a\u8f6c\u6362 )\n# \u62ff\u5230UTC\u65f6\u95f4\uff0c\u5e76\u5f3a\u5236\u8bbe\u7f6e\u65f6\u533a\u4e3aUTC+0:00:\nutc_dt = datetime.utcnow().replace(tzinfo=timezone.utc)\nprint(utc_dt)\n# astimezone()\u5c06\u8f6c\u6362\u65f6\u533a\u4e3a\u5317\u4eac\u65f6\u95f4:\nbj_dt = utc_dt.astimezone(timezone(timedelta(hours=8)))\nprint(bj_dt)\n# astimezone()\u5c06\u8f6c\u6362\u65f6\u533a\u4e3a\u4e1c\u4eac\u65f6\u95f4:\ntokyo_dt = utc_dt.astimezone(timezone(timedelta(hours=9)))\nprint(tokyo_dt)\n# astimezone()\u5c06bj_dt\u8f6c\u6362\u65f6\u533a\u4e3a\u4e1c\u4eac\u65f6\u95f4:\ntokyo_dt2 = bj_dt.astimezone(timezone(timedelta(hours=9)))\nprint(tokyo_dt2)\n'''\n2016-07-27 12:46:08.216245 class 'datetime.datetime'  2016-07-26 12:00:00\ndatetime\u8f6c\u6362\u4e3atimestamp\n1469505600.0\ntimestamp\u8f6c\u6362\u4e3adatetime\n2016-07-26 12:00:00\n2016-07-26 04:00:00\nstr\u8f6c\u6362\u4e3adatetime\n2016-07-26 12:00:00\ndatetime\u8f6c\u6362\u4e3astr\n2016-07-27 12:46:08\ndatetime\u52a0\u51cf\n2016-07-27 12:46:08.235246\n2016-07-30 00:46:08.235246\n\u65f6\u533a\u8f6c\u6362\n2016-07-27 04:46:08.236246+00:00\n2016-07-27 12:46:08.236246+08:00\n2016-07-27 13:46:08.236246+09:00\n2016-07-27 13:46:08.236246+09:00\n'''", 
            "title": "datetime(\u65f6\u95f4\u5904\u7406)"
        }, 
        {
            "location": "/python/py_inmodule/#collections", 
            "text": "", 
            "title": "collections"
        }, 
        {
            "location": "/python/py_inmodule/#namedtuple", 
            "text": "namedtuple \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 tuple \u5bf9\u8c61\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86 tuple \u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5e76\u53ef\u4ee5\u7528\u5c5e\u6027\u800c\u4e0d\u662f\u7d22\u5f15\u6765\u5f15\u7528 tuple \u7684\u67d0\u4e2a\u5143\u7d20  from collections import namedtuple\nPoint = namedtuple('Point', ['x', 'y'])\np = Point(1, 2)\nprint(p,p.x,p.y)\nprint(isinstance(p,Point))\nprint(isinstance(p,tuple))\n'''\nPoint(x=1, y=2) 1 2\nTrue\nTrue\n'''", 
            "title": "namedtuple"
        }, 
        {
            "location": "/python/py_inmodule/#deque", 
            "text": "deque\u662f\u4e3a\u4e86\u9ad8\u6548\u5b9e\u73b0\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u53cc\u5411\u5217\u8868\uff0c\u9002\u5408\u7528\u4e8e\u961f\u5217\u548c\u6808  from collections import deque\nq = deque(['a', 'b', 'c'])\nq.pop()\nq.popleft()\nq.append('x')\nq.appendleft('y')\nprint(q)\n'''\ndeque(['y', 'b', 'x'])\n'''", 
            "title": "deque"
        }, 
        {
            "location": "/python/py_inmodule/#defaultdict", 
            "text": "\u4f7f\u7528dict\u65f6\uff0c\u5982\u679c\u5f15\u7528\u7684Key\u4e0d\u5b58\u5728\uff0c\u5c31\u4f1a\u629b\u51faKeyError\u3002\u5982\u679c\u5e0c\u671bkey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u5c31\u53ef\u4ee5\u7528defaultdict\uff1a  from collections import defaultdict\ndd = defaultdict(lambda: 'N/A')\ndd['key1'] = 'abc'\nprint(dd['key1'] )\nprint(dd['key2'] )\n'''\nabc\nN/A\n'''", 
            "title": "defaultdict"
        }, 
        {
            "location": "/python/py_inmodule/#ordereddict", 
            "text": "\u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684,\u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684,OrderedDict\u4fdd\u8bc1\u4e86\u63d2\u5165\u987a\u5e8f  from collections import OrderedDict\nd = dict([('a', 1), ('b', 2), ('c', 3)])\nod =OrderedDict([('a', 1), ('b', 2), ('c', 3)])\nprint(d.keys())\nprint(od.keys())\n'''\ndict_keys(['a', 'c', 'b'])\nodict_keys(['a', 'b', 'c'])\n'''", 
            "title": "OrderedDict"
        }, 
        {
            "location": "/python/py_inmodule/#counter", 
            "text": "Counter \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u5668  from collections import Counter\nc = Counter()\nfor ch in 'programming':\n     c[ch] = c[ch] + 1\nprint(c)\n'''\nCounter({'m': 2, 'g': 2, 'r': 2, 'n': 1, 'i': 1, 'o': 1, 'a': 1, 'p': 1})\n'''", 
            "title": "Counter"
        }, 
        {
            "location": "/python/py_inmodule/#base64", 
            "text": "import base64\nb=base64.b64encode(b'binary\\x00string')\nprint(b)\ns  = base64.b64decode(b)\nprint(s)\n#\u7531\u4e8e\u6807\u51c6\u7684Base64\u7f16\u7801\u540e\u53ef\u80fd\u51fa\u73b0\u5b57\u7b26+\u548c/\uff0c\u5728URL\u4e2d\u5c31\u4e0d\u80fd\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\uff0c\u6240\u4ee5\u53c8\u6709\u4e00\u79cd url safe \u7684base64\u7f16\u7801\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u5b57\u7b26+\u548c/\u5206\u522b\u53d8\u6210-\u548c_\uff1a\nbu = base64.urlsafe_b64encode(b'i\\xb7\\x1d\\xfb\\xef\\xff')\nprint(bu)\nsu = base64.urlsafe_b64decode(bu)\nprint(su)", 
            "title": "base64"
        }, 
        {
            "location": "/python/py_inmodule/#struct", 
            "text": "\u8868\u793a\u5b57\u8282\u987a\u5e8f\u662f big-endian \uff0c\u4e5f\u5c31\u662f\u7f51\u7edc\u5e8f\uff0c I \u8868\u793a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570  import struct\nb = struct.pack(' I', 10240099)\nprint(b)\nv = struct.unpack(' I',b)\nprint(v)\n'''\nb'\\x00\\x9c@c'\n(10240099,)\n'''  struct\u6a21\u5757\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u53c2\u8003Python\u5b98\u65b9\u6587\u6863\uff1a\nhttps://docs.python.org/3/library/struct.html#format-characters", 
            "title": "struct(\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362)"
        }, 
        {
            "location": "/python/py_inmodule/#hashlib", 
            "text": "import hashlib\n\nmd5 = hashlib.md5()\nmd5.update( hello .encode('utf-8'))\nmd5.update( world .encode('utf-8'))\nprint(md5.hexdigest())\n\n#sha1\nsha1 = hashlib.sha1()\nsha1.update('how to use sha1 in '.encode('utf-8'))\nsha1.update('python hashlib?'.encode('utf-8'))\nprint(sha1.hexdigest())\n'''\nfc5e038d38a57032085441e7fe7010b0\n2c76b57293ce30acef38d98f6046927161b46a44\n'''", 
            "title": "hashlib"
        }, 
        {
            "location": "/python/py_inmodule/#itertools", 
            "text": "import itertools\n#\u521b\u5efa\u65e0\u9650\u8fed\u4ee3\u5668\nna = itertools.count(1)\nfor x in na:\n    print(x)\n    pass\n'''12345...'''\n\n#\u5faa\u73af\u91cd\u590d\u8fed\u4ee3\ncs = itertools.cycle('ABC')\n'''ABCABC'''\n\n#\u6307\u5b9a\u6b21\u6570\u91cd\u590d\nns = itertools.repeat('A', 4)\nfor x in ns:\n    print(x)\n    pass\n'''AAAA'''\n\n#\u8fed\u4ee3\u5bf9\u8c61\u4e32\u8054\u8d77\u6765\nfor c in itertools.chain('ABC', 'XYZ'):\n    print(c)\n'''ABCXYZ'''\n\n#\u76f8\u90bb\u7684\u91cd\u590d\u5143\u7d20\u5206\u7ea7\nfor key, group in itertools.groupby('AaBBAA', lambda c: c.upper()):\n    print(key, list(group))\n'''\nA ['A', 'a']\nB ['B', 'B']\nA ['A', 'A']\n'''", 
            "title": "itertools"
        }, 
        {
            "location": "/python/py_urllib/", 
            "text": "\u7f51\u7edc\u8bf7\u6c42\n\n\nrequest\n\n\nget\n\n\nfrom urllib import request\nreq = request.Request('https://coding.net/')\nreq.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25')\nwith request.urlopen(req) as f:\n    data = f.read()\n    print('Status:', f.status, f.reason)\n    for k, v in f.getheaders():\n        print('%s: %s' % (k, v))\n    print('Data:', data.decode('utf-8'))\n\n\n\n\npost\n\n\n\u53ea\u9700\u8981\u628a\u53c2\u6570\ndata\n\u4ee5\nbytes\n\u5f62\u5f0f\u4f20\u5165\n\n\nfrom urllib import request, parse\n\nlogin_data = parse.urlencode([\n    ('username', 1),\n])\n\nreq = request.Request('https://echo.getpostman.com/post')\nreq.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25')\nwith request.urlopen(req, data=login_data.encode('utf-8')) as f:\n    print('Status:', f.status, f.reason)\n    for k, v in f.getheaders():\n        print('%s: %s' % (k, v))\n    print('Data:', f.read().decode('utf-8'))", 
            "title": "\u7f51\u7edc\u5e93"
        }, 
        {
            "location": "/python/py_urllib/#_1", 
            "text": "", 
            "title": "\u7f51\u7edc\u8bf7\u6c42"
        }, 
        {
            "location": "/python/py_urllib/#request", 
            "text": "", 
            "title": "request"
        }, 
        {
            "location": "/python/py_urllib/#get", 
            "text": "from urllib import request\nreq = request.Request('https://coding.net/')\nreq.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25')\nwith request.urlopen(req) as f:\n    data = f.read()\n    print('Status:', f.status, f.reason)\n    for k, v in f.getheaders():\n        print('%s: %s' % (k, v))\n    print('Data:', data.decode('utf-8'))", 
            "title": "get"
        }, 
        {
            "location": "/python/py_urllib/#post", 
            "text": "\u53ea\u9700\u8981\u628a\u53c2\u6570 data \u4ee5 bytes \u5f62\u5f0f\u4f20\u5165  from urllib import request, parse\n\nlogin_data = parse.urlencode([\n    ('username', 1),\n])\n\nreq = request.Request('https://echo.getpostman.com/post')\nreq.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25')\nwith request.urlopen(req, data=login_data.encode('utf-8')) as f:\n    print('Status:', f.status, f.reason)\n    for k, v in f.getheaders():\n        print('%s: %s' % (k, v))\n    print('Data:', f.read().decode('utf-8'))", 
            "title": "post"
        }, 
        {
            "location": "/python/py_module_manager/", 
            "text": "\ufeffPython \u6a21\u5757\u7ba1\u7406\n\n\nPython \u5305\u7ba1\u7406\u5de5\u5177\n\n\ndistutils\n\n\npython \u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c2000\u5e74\u53d1\u5e03\u3002\u4f7f\u7528\u5b83\u80fd\u591f\u8fdb\u884cpython\u6a21\u5757\u7684\u5b89\u88c5\u548c\u53d1\u5e03setup.py\u5c31\u662f\u5229\u7528distutils\u7684\u529f\u80fd\u5199\u6210.\n\u7b80\u5355\u6253\u5305\u793a\u4f8b:\u521b\u5efa\u4e24\u4e2a\u6587\u4ef6test.py\u548csetup.py,setup.py\u5185\u7a7a\u5982\u4e0b:\n\n\nfrom distutils.core import setup\nsetup(\n    name='test',\n    version='1.0',\n    author='far',\n    author_email='wujiyu115@gmail.com',\n    url='htt://www.farwmarth.com',\n    py_modules=['test'],\n)\n\n\n\n\n\u8fd0\u884c\npython setup.py sdist\n,\u4f1a\u751f\u6210\u4e00\u4e2a\"test-1.0.zip\"\u5305.\u89e3\u538b\u7f29\u4f7f\u7528\npython setup.py install\n \u5c31\u53ef\u4ee5\u5b89\u88c5\u5e76\u4f7f\u7528test\u6a21\u5757\u4e86\n\n\ndistutils\u5305\u7ba1\u7406\n\n\n#\u5b89\u88c5\u5305\npython setup.py install\n#\u6253\u5305\u6210\u538b\u7f29\u6587\u4ef6\npython setup.py sdist\n#\u6253\u5305\u6210exe\u5b89\u88c5\npython setup.py bdist_wininst\n\n\n\n\nsetuptools,distribute\n\n\n\u4e00\u4e2a\u4e3a\u4e86\u589e\u5f3a distutils \u800c\u5f00\u53d1\u7684\u96c6\u5408\uff0c2004\u5e74\u53d1\u5e03\u3002\u5b83\u5305\u542b\u4e86 easy_install\n\u8fd9\u4e2a\u5de5\u5177setuptools\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u540d\u79f0,\u662f\u57fa\u7840\u7ec4\u4ef6,\u800c easy_install \u662f\u8fd9\u4e2a\u9879\u76ee\u4e2d\u63d0\u4f9b\u7684\u5de5\u5177,\u5b83\u4f9d\u8d56\u57fa\u7840\u7ec4\u4ef6\u5de5\u4f5c.setuptools\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u6587\u4ef6\u683c\u5f0f\uff08.egg\uff09\uff0c\u53ef\u4ee5\u4e3aPython\u5305\u521b\u5efa egg\u6587\u4ef6\u3002setuptools \u53ef\u4ee5\u8bc6\u522b.egg\u6587\u4ef6\uff0c\u5e76\u89e3\u6790\u3001\u5b89\u88c5\u5b83.\n\u81f3\u4e8edistribute\uff0c\u5b83\u662fsetuptools\u7684\u4e00\u4e2a\u5206\u652f\u7248\u672c\u3002\u5206\u652f\u7684\u539f\u56e0\u662f\u6709\u4e00\u90e8\u5206\u5f00\u53d1\u8005\u8ba4\u4e3a setuptools \u5f00\u53d1\u592a\u6162\u3002\u4f46\u73b0\u5728\uff0cdistribute \u53c8\u5408\u5e76\u56de\u4e86 setuptools \u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u4e1c\u897f.\n\u603b\u7684\u6765\u8bf4:\n\n\n\n\nsetuptools/distribute \u90fd\u6269\u5c55\u4e86 distutils\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\n\n\neasy_install\u662f\u57fa\u4e8esetuptools/distribute\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u65b9\u4fbf\u4e86\u5305\u7684\u5b89\u88c5\u548c\u7701\u7ea7\n\nsetuptools\u5305\n\n\n\n\n\u5b89\u88c5\n\n\n#windows \u5b89\u88c5 :\u4e0b\u8f7d  https://bootstrap.pypa.io/ez_setup.py \u5e76\u6267\u884cpython\n#linux\nwget https://bootstrap.pypa.io/ez_setup.py -O - | python\n#mac\ncurl https://bootstrap.pypa.io/ez_setup.py -o - | python\n\n\n\n\n\u53cd\u5b89\u88c5\n\n\n\u5728windows\u4e0a\u5982\u679c\u7528exe\u6216\u8005\u662fmsi\u5b89\u88c5\u7684,\u7528\u5b89\u88c5\u5305\u6dfb\u52a0/\u5220\u9664\u9879\u6765\u8fdb\u884c\u53cd\u5b89\u88c5\n\u5176\u4ed6\u60c5\u51b5\u5148\u5220\u9664\u6240\u6709\u5728\nsite-packages\n\u76ee\u5f55\u548c\nsys.pyath\n\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5e26\nsetuptools*\n \u548c \ndistribute*\n \u6587\u4ef6,\u7136\u540e\u79fb\u9664\u5728\nscripts\n \u76ee\u5f55\u7684\neasy_install\n\u548c   \neasy_install-x.x\n\u53ef\u6267\u884c\u6587\u4ef6\n\n\n\u7528easy_install\u7ba1\u7406\u5305\n\n\ninstalling-easy-install\n\n\n#\u7248\u672c\neasy_install --version\n#\u6839\u636e\u5305\u540d\u5b89\u88c5\neasy_install SQLObject\n#\u5b89\u88c5\u89e3\u538b\u7684\u76ee\u5f55\neasy_install .\n#\u5b89\u88c5egg,\u7f51\u5740\u6216\u8005\u672c\u5730\u8def\u5f84\neasy_install http://example.com/downloads/ExamplePackage-2.0-py2.4.egg\n\n#\u5347\u7ea7\neasy_install --upgrade PyProtocols\neasy_install \nSomePackage==2.0\n\n\n#\u79fb\u9664\neasy_install -m PackageName\n\n\n\n\npip\n\n\n\u5b89\u88c5pip\n\n\n##\u5b89\u88c5pip\neasy_install pip\n## \u5b89\u88c5pip2\ncurl https://bootstrap.pypa.io/get-pip.py | python\n\n\n\n\npip\u5305\u7ba1\u7406\n\n\n#\u5b89\u88c5:\npip install SomePackage\n#\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u53f7\npip install SomePackage==1.0.4\n#\u6307\u5b9a\u6e90\u5b89\u88c5\npip install SomePackage -i https://pypi.doubanio.com/\n#\u5347\u7ea7\npip install --upgrade SomePackage\n#\u5378\u8f7d:\npip uninstall SomePackage\n#\u67e5\u770b\u5df2\u5b89\u88c5\npip list\n#\u67e5\u770b\u53ef\u5347\u7ea7\npip list --outdated\n#\u67e5\u770b\u5b89\u88c5\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u4fe1\u606f\npip show --files SomePackage\n\n\n# \u4f7f\u7528pip\u5bfc\u51fa\u4f9d\u8d56\u6587\u4ef6\u5217\u8868\npip freeze \n requirements.txt\n# \u6839\u636e\u4f9d\u8d56\u6587\u4ef6\u5217\u8868\uff0c\u81ea\u52a8\u5b89\u88c5\u5bf9\u5e94\u7684\u8f6f\u4ef6\u5305\npip install -r requirements.txt\n\n\n\n\n\u663e\u793apython\u5b89\u88c5\u7684\u6a21\u5757\n\n\n#\u5728pyhton\u73af\u5883\u4e2d\u8f93\u5165\nhelp('modules')\n#\u5217\u51fa\u67d0\u4e00\u6a21\u5757\u7248\u672c\nimport yaml; print(yaml.__version__)\n\n\n\n\n\u663e\u793apython\u5e93\u8def\u5f84\n\n\npython -c \nimport sys;print(sys.path)\n\n\n\n\n\n\u4e0d\u540c\u73af\u5883pip\u5b89\u88c5\n\n\npython3 -m pip install xxx\n\n\n\n\nwheel,eggs\n\n\nwheel doc\n\nwheel \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a zip \u5305\u683c\u5f0f\uff0c\u5b83\u4f7f\u7528 .whl \u6269\u5c55\u540d\uff0c\u7528\u4e8e python \u6a21\u5757\u7684\u5b89\u88c5\uff0c\u5b83\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u66ff\u4ee3 Eggs\u3002\n\n\n\n\n\u5bf9\u7eafpython\u6216\u8005c\u6269\u5c55\u5b89\u88c5\u901f\u5ea6\u66f4\u5feb\n\n\n\u4e0d\u7528\u6267\u610f\u4efb\u610f\u4ee3\u7801\u5982:setup.py\n\n\n\u5728win\u6216\u8005mac\u4e0a\u5b89\u88c5c\u6269\u5c55\u4e0d\u9700\u8981\u7f16\u8bd1\u73af\u5883\n\n\n\u6d4b\u8bd5\u548c\u6301\u7eed\u96c6\u6210\u63d0\u4f9b\u66f4\u597d\u7684\u7f13\u5b58\n\n\n\u521b\u5efapyc\u6587\u4ef6\u6709\u6765\u5339\u914d\u7f16\u8bd1\u5668\n\n\n\u66f4\u597d\u7684\u8de8\u5e73\u53f0\u5b89\u88c5\u80fd\u529b\n\n\n\n\n\u4f7f\u7528\n\n\n# Make sure you have the latest pip that supports wheel\npip install --upgrade pip\n\n# Install wheel\npip install wheel\n\n# Build a directory of wheels for pyramid and all its dependencies\npip wheel --wheel-dir=/tmp/wheelhouse pyramid\n\n# Install from cached wheels\npip install --use-wheel --no-index --find-links=/tmp/wheelhouse pyramid\n\n# Install from cached wheels remotely\npip install --use-wheel --no-index --find-links=https://wheelhouse.example.com/ pyramid\n\n\n\n\nPython \u865a\u62df\u73af\u5883\n\n\nvirtualenv\n\n\nvirtualenv\u7528\u4e8e\u521b\u5efa\u72ec\u7acb\u7684Python\u73af\u5883\uff0c\u591a\u4e2aPython\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd.\n\u5b9e\u6d4b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u865a\u62df\u73af\u5883\u4e0d\u4f1a\u4f9d\u8d56\u7cfb\u7edf\u73af\u5883\u7684global site-packages\u3002\u6bd4\u5982\u7cfb\u7edf\u73af\u5883\u91cc\u5b89\u88c5\u4e86MySQLdb\u6a21\u5757\uff0c\u5728\u865a\u62df\u73af\u5883\u91ccimport MySQLdb\u4f1a\u63d0\u793aImportError\u3002\u5982\u679c\u60f3\u4f9d\u8d56\u7cfb\u7edf\u73af\u5883\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\n--system-site-packages\n\n\n\u5b89\u88c5\n\n\nsudo apt-get install python-virtualenv\n#or\npip install virtualenv\n\n\n\n\n\u4f7f\u7528\n\n\n#\u521b\u5efa\nvirtualenv  test\n#\u542f\u52a8\u865a\u62df\u73af\u5883\ncd test\nsource ./bin/activate\n#\u9000\u51fa\u865a\u62df\u73af\u5883\ndeactivate\n\n\n\n\nVirtualenvwrapper\n\n\nVirtaulenvwrapper\u662fvirtualenv\u7684\u6269\u5c55\u5305\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u521b\u5efa\u3001\u5220\u9664\u3001\u590d\u5236\u3001\u5207\u6362\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u3002\n\n\n\u5b89\u88c5\n\n\nsudo easy_install virtualenvwrapper\nmkdir $HOME/.virtualenvs\n#\u5728~/.bashrc\u4e2d\u6dfb\u52a0\u884c\uff1a\nexport WORKON_HOME=$HOME/.virtualenvs\n#\u5728~/.bashrc\u4e2d\u6dfb\u52a0\u884c\uff1a\nsource /usr/local/bin/virtualenvwrapper.sh\n#\u8fd0\u884c\uff1a\n source ~/.bashrc\n\n\n\n\n\u4f7f\u7528\n\n\n#\u5217\u51fa\u865a\u62df\u73af\u5883\u5217\u8868\nworkon\n#\u4e5f\u53ef\u4ee5\u4f7f\u7528\nlsvirtualenv\n#\u65b0\u5efa\u865a\u62df\u73af\u5883\nmkvirtualenv [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u542f\u52a8/\u5207\u6362\u865a\u62df\u73af\u5883\nworkon [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u5220\u9664\u865a\u62df\u73af\u5883\nrmvirtualenv [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u79bb\u5f00\u865a\u62df\u73af\u5883\ndeactivate\n\n\n\n\npython\u6280\u5de7\n\n\nConsider a more secure location (set with .set_extraction_path or the PYTHON_EGG_CACHE environment variable)\n\n\nchmod g-wx,o-wx . /home/far/.python-eggs/\n\n\n\n\nInsecurePlatformWarning: A true SSLContext object is not available.\n\n\n pip install pyopenssl ndg-httpsclient pyasn1\n\n\n\n\npip cache location\n\n\n%USERPROFILE%\\AppData\\Local\\pip\\cache\n\n\n\n\npython\u5b89\u88c5easy_install\u5931\u8d25\u7684\u89e3\u51b3\u529e\u6cd5\n\n\n\u9519\u8bef\u8be6\u60c5:\n\n\nFile \nC:\\Python27\\lib\\mimetypes.py\n, line 249, in enum_types\nctype = ctype.encode(default_encoding) # omit in 3.x!\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd7 in position 9: ordinal not in range(128)\n\n\n\n\n\u89e3\u51b3:\n\u5728python\u5b89\u88c5\u76ee\u5f55Lib\u7684\nmimetypes.py\n\u4e2d\uff0c\n\ndefault_encoding = sys.getdefaultencoding()\n\n\u8fd9\u53e5\u4e4b\u524d\u52a0\u4e0a\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u7801\uff0c\u6dfb\u52a0\u5982\u4e0b\u8bed\u53e5\uff1a\n\n\nreload(sys)\nsys.setdefaultencoding(\ncp936\n)\n\n\n\n\n\u517c\u5bb9python2\u548cpython3\n\n\n2to3\n\n\npython C:\\Python33\\Tools\\Scripts\\2to3.py -w 2to3Test.py\n\n\n\n\nhttps://github.com/mitsuhiko/python-modernize\nhttp://haoluobo.com/2013/01/python2and3/", 
            "title": "\u6a21\u5757\u7ba1\u7406"
        }, 
        {
            "location": "/python/py_module_manager/#python", 
            "text": "", 
            "title": "\ufeffPython \u6a21\u5757\u7ba1\u7406"
        }, 
        {
            "location": "/python/py_module_manager/#python_1", 
            "text": "", 
            "title": "Python \u5305\u7ba1\u7406\u5de5\u5177"
        }, 
        {
            "location": "/python/py_module_manager/#distutils", 
            "text": "python \u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c2000\u5e74\u53d1\u5e03\u3002\u4f7f\u7528\u5b83\u80fd\u591f\u8fdb\u884cpython\u6a21\u5757\u7684\u5b89\u88c5\u548c\u53d1\u5e03setup.py\u5c31\u662f\u5229\u7528distutils\u7684\u529f\u80fd\u5199\u6210.\n\u7b80\u5355\u6253\u5305\u793a\u4f8b:\u521b\u5efa\u4e24\u4e2a\u6587\u4ef6test.py\u548csetup.py,setup.py\u5185\u7a7a\u5982\u4e0b:  from distutils.core import setup\nsetup(\n    name='test',\n    version='1.0',\n    author='far',\n    author_email='wujiyu115@gmail.com',\n    url='htt://www.farwmarth.com',\n    py_modules=['test'],\n)  \u8fd0\u884c python setup.py sdist ,\u4f1a\u751f\u6210\u4e00\u4e2a\"test-1.0.zip\"\u5305.\u89e3\u538b\u7f29\u4f7f\u7528 python setup.py install  \u5c31\u53ef\u4ee5\u5b89\u88c5\u5e76\u4f7f\u7528test\u6a21\u5757\u4e86", 
            "title": "distutils"
        }, 
        {
            "location": "/python/py_module_manager/#distutils_1", 
            "text": "#\u5b89\u88c5\u5305\npython setup.py install\n#\u6253\u5305\u6210\u538b\u7f29\u6587\u4ef6\npython setup.py sdist\n#\u6253\u5305\u6210exe\u5b89\u88c5\npython setup.py bdist_wininst", 
            "title": "distutils\u5305\u7ba1\u7406"
        }, 
        {
            "location": "/python/py_module_manager/#setuptoolsdistribute", 
            "text": "\u4e00\u4e2a\u4e3a\u4e86\u589e\u5f3a distutils \u800c\u5f00\u53d1\u7684\u96c6\u5408\uff0c2004\u5e74\u53d1\u5e03\u3002\u5b83\u5305\u542b\u4e86 easy_install\n\u8fd9\u4e2a\u5de5\u5177setuptools\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u540d\u79f0,\u662f\u57fa\u7840\u7ec4\u4ef6,\u800c easy_install \u662f\u8fd9\u4e2a\u9879\u76ee\u4e2d\u63d0\u4f9b\u7684\u5de5\u5177,\u5b83\u4f9d\u8d56\u57fa\u7840\u7ec4\u4ef6\u5de5\u4f5c.setuptools\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u6587\u4ef6\u683c\u5f0f\uff08.egg\uff09\uff0c\u53ef\u4ee5\u4e3aPython\u5305\u521b\u5efa egg\u6587\u4ef6\u3002setuptools \u53ef\u4ee5\u8bc6\u522b.egg\u6587\u4ef6\uff0c\u5e76\u89e3\u6790\u3001\u5b89\u88c5\u5b83.\n\u81f3\u4e8edistribute\uff0c\u5b83\u662fsetuptools\u7684\u4e00\u4e2a\u5206\u652f\u7248\u672c\u3002\u5206\u652f\u7684\u539f\u56e0\u662f\u6709\u4e00\u90e8\u5206\u5f00\u53d1\u8005\u8ba4\u4e3a setuptools \u5f00\u53d1\u592a\u6162\u3002\u4f46\u73b0\u5728\uff0cdistribute \u53c8\u5408\u5e76\u56de\u4e86 setuptools \u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u4e1c\u897f.\n\u603b\u7684\u6765\u8bf4:   setuptools/distribute \u90fd\u6269\u5c55\u4e86 distutils\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd  easy_install\u662f\u57fa\u4e8esetuptools/distribute\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u65b9\u4fbf\u4e86\u5305\u7684\u5b89\u88c5\u548c\u7701\u7ea7 setuptools\u5305", 
            "title": "setuptools,distribute"
        }, 
        {
            "location": "/python/py_module_manager/#_1", 
            "text": "#windows \u5b89\u88c5 :\u4e0b\u8f7d  https://bootstrap.pypa.io/ez_setup.py \u5e76\u6267\u884cpython\n#linux\nwget https://bootstrap.pypa.io/ez_setup.py -O - | python\n#mac\ncurl https://bootstrap.pypa.io/ez_setup.py -o - | python", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_module_manager/#_2", 
            "text": "\u5728windows\u4e0a\u5982\u679c\u7528exe\u6216\u8005\u662fmsi\u5b89\u88c5\u7684,\u7528\u5b89\u88c5\u5305\u6dfb\u52a0/\u5220\u9664\u9879\u6765\u8fdb\u884c\u53cd\u5b89\u88c5\n\u5176\u4ed6\u60c5\u51b5\u5148\u5220\u9664\u6240\u6709\u5728 site-packages \u76ee\u5f55\u548c sys.pyath \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5e26 setuptools*  \u548c  distribute*  \u6587\u4ef6,\u7136\u540e\u79fb\u9664\u5728 scripts  \u76ee\u5f55\u7684 easy_install \u548c    easy_install-x.x \u53ef\u6267\u884c\u6587\u4ef6", 
            "title": "\u53cd\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_module_manager/#easy_install", 
            "text": "installing-easy-install  #\u7248\u672c\neasy_install --version\n#\u6839\u636e\u5305\u540d\u5b89\u88c5\neasy_install SQLObject\n#\u5b89\u88c5\u89e3\u538b\u7684\u76ee\u5f55\neasy_install .\n#\u5b89\u88c5egg,\u7f51\u5740\u6216\u8005\u672c\u5730\u8def\u5f84\neasy_install http://example.com/downloads/ExamplePackage-2.0-py2.4.egg\n\n#\u5347\u7ea7\neasy_install --upgrade PyProtocols\neasy_install  SomePackage==2.0 \n\n#\u79fb\u9664\neasy_install -m PackageName", 
            "title": "\u7528easy_install\u7ba1\u7406\u5305"
        }, 
        {
            "location": "/python/py_module_manager/#pip", 
            "text": "", 
            "title": "pip"
        }, 
        {
            "location": "/python/py_module_manager/#pip_1", 
            "text": "##\u5b89\u88c5pip\neasy_install pip\n## \u5b89\u88c5pip2\ncurl https://bootstrap.pypa.io/get-pip.py | python", 
            "title": "\u5b89\u88c5pip"
        }, 
        {
            "location": "/python/py_module_manager/#pip_2", 
            "text": "#\u5b89\u88c5:\npip install SomePackage\n#\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u53f7\npip install SomePackage==1.0.4\n#\u6307\u5b9a\u6e90\u5b89\u88c5\npip install SomePackage -i https://pypi.doubanio.com/\n#\u5347\u7ea7\npip install --upgrade SomePackage\n#\u5378\u8f7d:\npip uninstall SomePackage\n#\u67e5\u770b\u5df2\u5b89\u88c5\npip list\n#\u67e5\u770b\u53ef\u5347\u7ea7\npip list --outdated\n#\u67e5\u770b\u5b89\u88c5\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u4fe1\u606f\npip show --files SomePackage\n\n\n# \u4f7f\u7528pip\u5bfc\u51fa\u4f9d\u8d56\u6587\u4ef6\u5217\u8868\npip freeze   requirements.txt\n# \u6839\u636e\u4f9d\u8d56\u6587\u4ef6\u5217\u8868\uff0c\u81ea\u52a8\u5b89\u88c5\u5bf9\u5e94\u7684\u8f6f\u4ef6\u5305\npip install -r requirements.txt", 
            "title": "pip\u5305\u7ba1\u7406"
        }, 
        {
            "location": "/python/py_module_manager/#python_2", 
            "text": "#\u5728pyhton\u73af\u5883\u4e2d\u8f93\u5165\nhelp('modules')\n#\u5217\u51fa\u67d0\u4e00\u6a21\u5757\u7248\u672c\nimport yaml; print(yaml.__version__)", 
            "title": "\u663e\u793apython\u5b89\u88c5\u7684\u6a21\u5757"
        }, 
        {
            "location": "/python/py_module_manager/#python_3", 
            "text": "python -c  import sys;print(sys.path)", 
            "title": "\u663e\u793apython\u5e93\u8def\u5f84"
        }, 
        {
            "location": "/python/py_module_manager/#pip_3", 
            "text": "python3 -m pip install xxx", 
            "title": "\u4e0d\u540c\u73af\u5883pip\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_module_manager/#wheeleggs", 
            "text": "wheel doc \nwheel \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a zip \u5305\u683c\u5f0f\uff0c\u5b83\u4f7f\u7528 .whl \u6269\u5c55\u540d\uff0c\u7528\u4e8e python \u6a21\u5757\u7684\u5b89\u88c5\uff0c\u5b83\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u66ff\u4ee3 Eggs\u3002   \u5bf9\u7eafpython\u6216\u8005c\u6269\u5c55\u5b89\u88c5\u901f\u5ea6\u66f4\u5feb  \u4e0d\u7528\u6267\u610f\u4efb\u610f\u4ee3\u7801\u5982:setup.py  \u5728win\u6216\u8005mac\u4e0a\u5b89\u88c5c\u6269\u5c55\u4e0d\u9700\u8981\u7f16\u8bd1\u73af\u5883  \u6d4b\u8bd5\u548c\u6301\u7eed\u96c6\u6210\u63d0\u4f9b\u66f4\u597d\u7684\u7f13\u5b58  \u521b\u5efapyc\u6587\u4ef6\u6709\u6765\u5339\u914d\u7f16\u8bd1\u5668  \u66f4\u597d\u7684\u8de8\u5e73\u53f0\u5b89\u88c5\u80fd\u529b", 
            "title": "wheel,eggs"
        }, 
        {
            "location": "/python/py_module_manager/#_3", 
            "text": "# Make sure you have the latest pip that supports wheel\npip install --upgrade pip\n\n# Install wheel\npip install wheel\n\n# Build a directory of wheels for pyramid and all its dependencies\npip wheel --wheel-dir=/tmp/wheelhouse pyramid\n\n# Install from cached wheels\npip install --use-wheel --no-index --find-links=/tmp/wheelhouse pyramid\n\n# Install from cached wheels remotely\npip install --use-wheel --no-index --find-links=https://wheelhouse.example.com/ pyramid", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/python/py_module_manager/#python_4", 
            "text": "", 
            "title": "Python \u865a\u62df\u73af\u5883"
        }, 
        {
            "location": "/python/py_module_manager/#virtualenv", 
            "text": "virtualenv\u7528\u4e8e\u521b\u5efa\u72ec\u7acb\u7684Python\u73af\u5883\uff0c\u591a\u4e2aPython\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd.\n\u5b9e\u6d4b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u865a\u62df\u73af\u5883\u4e0d\u4f1a\u4f9d\u8d56\u7cfb\u7edf\u73af\u5883\u7684global site-packages\u3002\u6bd4\u5982\u7cfb\u7edf\u73af\u5883\u91cc\u5b89\u88c5\u4e86MySQLdb\u6a21\u5757\uff0c\u5728\u865a\u62df\u73af\u5883\u91ccimport MySQLdb\u4f1a\u63d0\u793aImportError\u3002\u5982\u679c\u60f3\u4f9d\u8d56\u7cfb\u7edf\u73af\u5883\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570 --system-site-packages  \u5b89\u88c5  sudo apt-get install python-virtualenv\n#or\npip install virtualenv  \u4f7f\u7528  #\u521b\u5efa\nvirtualenv  test\n#\u542f\u52a8\u865a\u62df\u73af\u5883\ncd test\nsource ./bin/activate\n#\u9000\u51fa\u865a\u62df\u73af\u5883\ndeactivate", 
            "title": "virtualenv"
        }, 
        {
            "location": "/python/py_module_manager/#virtualenvwrapper", 
            "text": "Virtaulenvwrapper\u662fvirtualenv\u7684\u6269\u5c55\u5305\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u521b\u5efa\u3001\u5220\u9664\u3001\u590d\u5236\u3001\u5207\u6362\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u3002  \u5b89\u88c5  sudo easy_install virtualenvwrapper\nmkdir $HOME/.virtualenvs\n#\u5728~/.bashrc\u4e2d\u6dfb\u52a0\u884c\uff1a\nexport WORKON_HOME=$HOME/.virtualenvs\n#\u5728~/.bashrc\u4e2d\u6dfb\u52a0\u884c\uff1a\nsource /usr/local/bin/virtualenvwrapper.sh\n#\u8fd0\u884c\uff1a\n source ~/.bashrc  \u4f7f\u7528  #\u5217\u51fa\u865a\u62df\u73af\u5883\u5217\u8868\nworkon\n#\u4e5f\u53ef\u4ee5\u4f7f\u7528\nlsvirtualenv\n#\u65b0\u5efa\u865a\u62df\u73af\u5883\nmkvirtualenv [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u542f\u52a8/\u5207\u6362\u865a\u62df\u73af\u5883\nworkon [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u5220\u9664\u865a\u62df\u73af\u5883\nrmvirtualenv [\u865a\u62df\u73af\u5883\u540d\u79f0]\n#\u79bb\u5f00\u865a\u62df\u73af\u5883\ndeactivate", 
            "title": "Virtualenvwrapper"
        }, 
        {
            "location": "/python/py_module_manager/#python_5", 
            "text": "", 
            "title": "python\u6280\u5de7"
        }, 
        {
            "location": "/python/py_module_manager/#consider-a-more-secure-location-set-with-set_extraction_path-or-the-python_egg_cache-environment-variable", 
            "text": "chmod g-wx,o-wx . /home/far/.python-eggs/", 
            "title": "Consider a more secure location (set with .set_extraction_path or the PYTHON_EGG_CACHE environment variable)"
        }, 
        {
            "location": "/python/py_module_manager/#insecureplatformwarning-a-true-sslcontext-object-is-not-available", 
            "text": "pip install pyopenssl ndg-httpsclient pyasn1", 
            "title": "InsecurePlatformWarning: A true SSLContext object is not available."
        }, 
        {
            "location": "/python/py_module_manager/#pip-cache-location", 
            "text": "%USERPROFILE%\\AppData\\Local\\pip\\cache", 
            "title": "pip cache location"
        }, 
        {
            "location": "/python/py_module_manager/#pythoneasy_install", 
            "text": "\u9519\u8bef\u8be6\u60c5:  File  C:\\Python27\\lib\\mimetypes.py , line 249, in enum_types\nctype = ctype.encode(default_encoding) # omit in 3.x!\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd7 in position 9: ordinal not in range(128)  \u89e3\u51b3:\n\u5728python\u5b89\u88c5\u76ee\u5f55Lib\u7684 mimetypes.py \u4e2d\uff0c default_encoding = sys.getdefaultencoding() \n\u8fd9\u53e5\u4e4b\u524d\u52a0\u4e0a\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u7801\uff0c\u6dfb\u52a0\u5982\u4e0b\u8bed\u53e5\uff1a  reload(sys)\nsys.setdefaultencoding( cp936 )", 
            "title": "python\u5b89\u88c5easy_install\u5931\u8d25\u7684\u89e3\u51b3\u529e\u6cd5"
        }, 
        {
            "location": "/python/py_module_manager/#python2python3", 
            "text": "", 
            "title": "\u517c\u5bb9python2\u548cpython3"
        }, 
        {
            "location": "/python/py_module_manager/#2to3", 
            "text": "python C:\\Python33\\Tools\\Scripts\\2to3.py -w 2to3Test.py  https://github.com/mitsuhiko/python-modernize\nhttp://haoluobo.com/2013/01/python2and3/", 
            "title": "2to3"
        }, 
        {
            "location": "/python/py_thread/", 
            "text": "\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\n\n\n\u8fdb\u7a0b\n\n\n\u8fdb\u7a0b\u662f\u4e00\u79cd\u53e4\u8001\u800c\u5178\u578b\u7684\u4e0a\u4e0b\u6587\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8d44\u6e90\u53e5\u67c4\uff0c\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u4e0d\u53d1\u751f\u5e72\u6270\u3002\n\n\n\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u5185\u6838\u4e2d\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u63cf\u8ff0\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3002\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u5305\u542b\u4e86\u7cfb\u7edf\u7ba1\u7406\u8fdb\u7a0b\u6240\u9700\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u653e\u5728\u4e00\u4e2a\u53eb\u505a\u4efb\u52a1\u961f\u5217\u7684\u961f\u5217\u91cc\u9762\u3002\u5f53\u65b0\u5efa\u8fdb\u7a0b\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5206\u914d\u65b0\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff0c\u5e76\u4e14\u5206\u914d\u65b0\u7684\u5730\u5740\u7a7a\u95f4(\u548c\u7236\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u662f\u4e24\u8005\u540c\u65f6\u8fdb\u5165COW\u72b6\u6001)\u3002\u8fd9\u4e9b\u8fc7\u7a0b\u9700\u8981\u4e00\u5b9a\u7684\u5f00\u9500\u3002\n\n\n\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u6982\u5ff5\u662f\u8fdb\u7a0b\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u91cd\u8981\u7684\u95ee\u9898\u662f\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\n\n\n\u8fdb\u7a0b\u662f\u201c\u7a0b\u5e8f\u6267\u884c\u7684\u4e00\u4e2a\u5b9e\u4f8b\u201d\uff0c\u62c5\u5f53\u5206\u914d\u7cfb\u7edf\u8d44\u6e90\u7684\u5b9e\u4f53\u3002\u8fdb\u7a0b\u521b\u5efa\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u5b8c\u6574\u7684\u72ec\u7acb\u5730\u5740\u7a7a\u95f4\u3002\n\n\n\u8fdb\u7a0b\u5207\u6362\u53ea\u53d1\u751f\u5728\u5185\u6838\u6001\uff0c\u4e24\u6b65\uff1a\n\n\n\n\n\u5207\u6362\u9875\u5168\u5c40\u76ee\u5f55\u4ee5\u5b89\u88c5\u4e00\u4e2a\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff1b\n\n\n\u5207\u6362\u5185\u6838\u6001\u5806\u6808\u548c\u786c\u4ef6\u4e0a\u4e0b\u6587\u3002\n\n\n\n\n\u8fdb\u7a0b\u72b6\u6001\n\n\n\u5ffd\u7565\u53bblinux\u5185\u6838\u590d\u6742\u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u628a\u8fdb\u7a0b\u72b6\u6001\u5f52\u7ed3\u4e3a\u4e09\u4e2a\u6700\u4e3b\u8981\u7684\u72b6\u6001\uff1a\n\u5c31\u7eea\u6001\n\uff0c\n\u8fd0\u884c\u6001\n\uff0c\n\u7761\u7720\u6001\n\u3002\u8fd9\u5c31\u662f\u4efb\u4f55\u4e00\u672c\u7cfb\u7edf\u4e66\u4e0a\u90fd\u6709\u7684\u4e09\u6001\u8f6c\u6362\u56fe\u3002\n\n\n\u5c31\u7eea\u548c\u6267\u884c\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\uff0c\u57fa\u672c\u8fd9\u5c31\u662f\u8c03\u5ea6\u7684\u8fc7\u7a0b\u3002\u800c\u5f53\u6267\u884c\u6001\u7a0b\u5e8f\u9700\u8981\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6(\u6700\u5178\u578b\u5c31\u662fIO)\u65f6\uff0c\u5c31\u4f1a\u9677\u5165\u7761\u7720\u6001\u3002\u800c\u6761\u4ef6\u8fbe\u6210\u540e\uff0c\u4e00\u822c\u4f1a\u81ea\u52a8\u8fdb\u5165\u5c31\u7eea\u3002\n\n\n\u4e0a\u4e0b\u6587\n\n\n\u6307\u7684\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u7528\u8c03\u7528\u6808\u6765\u8868\u793a\u8fd9\u4e2a\u72b6\u6001\u2014\u2014\u6808\u8bb0\u8f7d\u4e86\u6bcf\u4e2a\u8c03\u7528\u5c42\u7ea7\u6267\u884c\u5230\u54ea\u91cc\uff0c\u8fd8\u6709\u6267\u884c\u65f6\u7684\u73af\u5883\u60c5\u51b5\u7b49\u6240\u6709\u6709\u5173\u7684\u4fe1\u606f\n\n\n\u963b\u585e\n\n\n\u5f53\u8fdb\u7a0b\u9700\u8981\u5728\u67d0\u4e2a\u6587\u4ef6\u53e5\u67c4\u4e0a\u505aIO\uff0c\u8fd9\u4e2afd\u53c8\u6ca1\u6709\u6570\u636e\u7ed9\u4ed6\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u751f\u963b\u585e\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u8bb0\u5f55XX\u8fdb\u7a0b\u963b\u585e\u5728\u4e86XX fd\u4e0a\uff0c\u7136\u540e\u5c06\u8fdb\u7a0b\u6807\u8bb0\u4e3a\u7761\u7720\u6001\uff0c\u5e76\u8c03\u5ea6\u51fa\u53bb\u3002\u5f53fd\u4e0a\u6709\u6570\u636e\u65f6(\u4f8b\u5982\u5bf9\u7aef\u53d1\u9001\u7684\u6570\u636e\u5230\u8fbe)\uff0c\u5c31\u4f1a\u5524\u9192\u963b\u585e\u5728fd\u4e0a\u7684\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u4f1a\u968f\u540e\u8fdb\u5165\u5c31\u7eea\u961f\u5217\uff0c\u7b49\u5f85\u5408\u9002\u7684\u65f6\u95f4\u88ab\u8c03\u5ea6\u3002\n\n\n\u963b\u585e\u540e\u7684\u5524\u9192\u4e5f\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u8bdd\u9898\u3002\u5f53\u591a\u4e2a\u4e0a\u4e0b\u6587\u963b\u585e\u5728\u4e00\u4e2afd\u4e0a(\u867d\u7136\u4e0d\u591a\u89c1\uff0c\u4f46\u662f\u540e\u9762\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u4f8b\u5b50)\uff0c\u800c\u4e14fd\u5c31\u7eea\u65f6\uff0c\u5e94\u8be5\u5524\u9192\u591a\u5c11\u4e2a\u4e0a\u4e0b\u6587\u5462\uff1f\u4f20\u7edf\u4e0a\u5e94\u5f53\u5524\u9192\u6240\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u5982\u679c\u4ec5\u5524\u9192\u4e00\u4e2a\uff0c\u800c\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u53c8\u4e0d\u80fd\u6d88\u8d39\u6240\u6709\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u4f7f\u5f97\u5176\u4ed6\u4e0a\u4e0b\u6587\u5904\u4e8e\u65e0\u8c13\u7684\u6b7b\u9501\u4e2d\u3002\n\n\n\u4f46\u662f\u6709\u4e2a\u8457\u540d\u7684\u4f8b\u5b50\u2014\u2014accept\uff0c\u4e5f\u662f\u4f7f\u7528\u8bfb\u5c31\u7eea\u6765\u8868\u793a\u6536\u5230\u7684\u3002\u5982\u679c\u8bd5\u56fe\u7528\u591a\u4e2a\u7ebf\u7a0b\u6765accept\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5f53\u6709\u65b0\u8fde\u63a5\u65f6\uff0c\u6240\u6709\u4e0a\u4e0b\u6587\u90fd\u4f1a\u5c31\u7eea\uff0c\u4f46\u662f\u53ea\u6709\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u9645\u83b7\u5f97fd\uff0c\u5176\u4ed6\u7684\u88ab\u8c03\u5ea6\u540e\u53c8\u7acb\u523b\u963b\u585e\u3002\u8fd9\u5c31\u662f\u60ca\u7fa4\u95ee\u9898thundering herd problem\u3002\n\n\n\u73b0\u4ee3linux\u5185\u6838\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u65b9\u6cd5\u60ca\u4eba\u7684\u7b80\u5355\u2014\u2014accept\u65b9\u6cd5\u52a0\u9501\u3002\n\n\n\u5e76\u53d1\u548c\u5e76\u884c\n\n\n\u5728\u8fd9\u91cc\u5728\u591a\u8bb2\u4e00\u4e9b,\u5e76\u53d1\u548c\u5e76\u884c\u662f\u5f97\u4ece\u7269\u7406\u786c\u4ef6\u65b9\u9762\u6765\u8003\u8651.\u5728\u4ee5\u524d\u7535\u8111\u662f\u5355\u6838\u7684\u65f6\u5019,\u4e00\u4e2acup\u6838\u5fc3\u53ea\u80fd\u8fdb\u884c\u5355\u4e2a\u4efb\u52a1,\u5c06\u5355\u4e2acup\u8fd0\u884c\u65f6\u95f4\u5206\u914d\u7ed9\u591a\u4e2a\u4efb\u52a1\u8fd0\u884c,\u8fd9\u5c31\u662f\u5e76\u53d1,\u8ba9\u4f60\u770b\u8d77\u6765\u50cf\u662f\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u6267\u884c,\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u4efb\u52a1\u4e00\u4e2a\u4efb\u52a1\u7684\u6267\u884c.\n\n\n\u800c\u5e76\u884c,\u662f\u5728\u591a\u6838cup\u7535\u8111\u4e0a,\u4e3a\u6bcf\u4e00\u4e2acup\u6838\u5fc3\u5206\u914d\u4e00\u4e2a\u4efb\u52a1,\u662f\u771f\u6b63\u7684\u591a\u4efb\u52a1\u6267\u884c.\n\n\n\u540c\u6b65,\u5f02\u6b65,\u56de\u8c03\n\n\n\n\n\u540c\u6b65\n\u540c\u6b65\u5462.\u5c31\u662f\u7a0b\u5e8f\u4e00\u4e2a\u8bed\u53e5\u4e00\u4e2a\u8bed\u53e5\u987a\u5e8f\u6267\u884c,\u5f88\u7b26\u5408\u4eba\u5f97\u601d\u7ef4,\u662f\u7ebf\u6027\u6267\u884c.\n\n\n\u5f02\u6b65\n \u5f02\u6b65\u7684\u7279\u6027\u5c31\u662f\u6267\u884c\u8d77\u6765\u4e0d\u4f1a\u963b\u585e\n\n\n\u56de\u8c03\n \u56de\u8c03\u662f\u5728\u7b49\u5f85\u67d0\u4e00\u4ef6\u4e8b\u60c5\u5b8c\u6210\u4e4b\u540e,\u5728\u8fd0\u884c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\n\n\n\n\npython\u8fdb\u7a0b\n\n\nmultiprocessing\n\n\nfrom multiprocessing import Process\nimport os\n\n# \u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\ndef run_proc(name):\n    print('Run child process %s (%s)...' % (name, os.getpid()))\n\nif __name__=='__main__':\n    print('Parent process %s.' % os.getpid())\n    p = Process(target=run_proc, args=('test',))\n    print('Child process will start.')\n    p.start()\n    p.join()\n    print('Child process end.')\n\n'''\nParent process 928.\nProcess will start.\nRun child process test (929)...\nProcess end.\n'''\n\n\n\n\n\u8fdb\u7a0b\u6c60(Pool)\n\n\nfrom multiprocessing import Pool\nimport os, time, random\n\ndef long_time_task(name):\n    print('Run task %s (%s)...' % (name, os.getpid()))\n    start = time.time()\n    time.sleep(random.random() * 3)\n    end = time.time()\n    print('Task %s runs %0.2f seconds.' % (name, (end - start)))\n\nif __name__=='__main__':\n    print('Parent process %s.' % os.getpid())\n    p = Pool(4)\n    for i in range(5):\n        p.apply_async(long_time_task, args=(i,))\n    print('Waiting for all subprocesses done...')\n    p.close()\n    p.join()\n    print('All subprocesses done.')\n\n'''\nParent process 669.\nWaiting for all subprocesses done...\nRun task 0 (671)...\nRun task 1 (672)...\nRun task 2 (673)...\nRun task 3 (674)...\nTask 2 runs 0.14 seconds.\nRun task 4 (673)...\nTask 1 runs 0.27 seconds.\nTask 3 runs 0.86 seconds.\nTask 0 runs 1.41 seconds.\nTask 4 runs 1.91 seconds.\nAll subprocesses done.\n'''\n\n\n\n\n\u5b50\u8fdb\u7a0b subprocess\n\n\n\u6211\u4eec\u90fd\u662f\u5728\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u3002\u50cfLinux\u8fdb\u7a0b\u90a3\u6837\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5fork\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u8ba9\u8fd9\u4e2a\u5b50\u8fdb\u7a0bexec\u53e6\u5916\u4e00\u4e2a\u7a0b\u5e8f\u3002\u5728Python\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684subprocess\u5305\u6765fork\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u8fd0\u884c\u4e00\u4e2a\u5916\u90e8\u7684\u7a0b\u5e8f\n\nos.fork\n\u4e5f\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u8f7b\u677e\u521b\u5efa\u5b50\u8fdb\u7a0b\n\n\nimport subprocess\n\nprint('$ nslookup www.python.org')\nr = subprocess.call(['nslookup', 'www.python.org'])\nprint('Exit code:', r)\n\n\n\n\n\u8fdb\u7a0b\u95f4\u901a\u4fe1\n\n\nQueue\n\n\nfrom multiprocessing import Process, Queue\nimport os, time, random\n\n# \u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\ndef write(q):\n    print('Process to write: %s' % os.getpid())\n    for value in ['A', 'B', 'C']:\n        print('Put %s to queue...' % value)\n        q.put(value)\n        time.sleep(random.random())\n\n# \u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\ndef read(q):\n    print('Process to read: %s' % os.getpid())\n    while True:\n        value = q.get(True)\n        print('Get %s from queue.' % value)\n\nif __name__=='__main__':\n    # \u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1a\n    q = Queue()\n    pw = Process(target=write, args=(q,))\n    pr = Process(target=read, args=(q,))\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpw\uff0c\u5199\u5165:\n    pw.start()\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6:\n    pr.start()\n    # \u7b49\u5f85pw\u7ed3\u675f:\n    pw.join()\n    # pr\u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62:\n    pr.terminate()\n'''\nProcess to write: 50563\nPut A to queue...\nProcess to read: 50564\nGet A from queue.\nPut B to queue...\nGet B from queue.\nPut C to queue...\nGet C from queue.\n'''\n\n\n\n\n\u5728Unix/Linux\u4e0b\uff0cmultiprocessing\u6a21\u5757\u5c01\u88c5\u4e86fork()\u8c03\u7528\uff0c\u4f7f\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8fork()\u7684\u7ec6\u8282\u3002\u7531\u4e8eWindows\u6ca1\u6709fork\u8c03\u7528\uff0c\u56e0\u6b64\uff0cmultiprocessing\u9700\u8981\u201c\u6a21\u62df\u201d\u51fafork\u7684\u6548\u679c\uff0c\u7236\u8fdb\u7a0b\u6240\u6709Python\u5bf9\u8c61\u90fd\u5fc5\u987b\u901a\u8fc7pickle\u5e8f\u5217\u5316\u518d\u4f20\u5230\u5b50\u8fdb\u7a0b\u53bb\uff0c\u6240\u6709\uff0c\u5982\u679cmultiprocessing\u5728Windows\u4e0b\u8c03\u7528\u5931\u8d25\u4e86\uff0c\u8981\u5148\u8003\u8651\u662f\u4e0d\u662fpickle\u5931\u8d25\u4e86\n\n\n\u5206\u5e03\u5f0f\u8fdb\u7a0b\n\n\nPython\u7684multiprocessing\u6a21\u5757\u4e0d\u4f46\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u5176\u4e2dmanagers\u5b50\u6a21\u5757\u8fd8\u652f\u6301\u628a\u591a\u8fdb\u7a0b\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u4e0a\u3002\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u53ef\u4ee5\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5c06\u4efb\u52a1\u5206\u5e03\u5230\u5176\u4ed6\u591a\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u4f9d\u9760\u7f51\u7edc\u901a\u4fe1\u3002\u7531\u4e8emanagers\u6a21\u5757\u5c01\u88c5\u5f88\u597d\uff0c\u4e0d\u5fc5\u4e86\u89e3\u7f51\u7edc\u901a\u4fe1\u7684\u7ec6\u8282\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7f16\u5199\u5206\u5e03\u5f0f\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u3002\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u8fc7Queue\u901a\u4fe1\u7684\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u73b0\u5728\uff0c\u7531\u4e8e\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u4efb\u52a1\u7e41\u91cd\uff0c\u5e0c\u671b\u628a\u53d1\u9001\u4efb\u52a1\u7684\u8fdb\u7a0b\u548c\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u5206\u5e03\u5230\u4e24\u53f0\u673a\u5668\u4e0a\u3002\u600e\u4e48\u7528\u5206\u5e03\u5f0f\u8fdb\u7a0b\u5b9e\u73b0\uff1f\n\n\n\u539f\u6709\u7684Queue\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\uff0c\u4f46\u662f\uff0c\u901a\u8fc7managers\u6a21\u5757\u628aQueue\u901a\u8fc7\u7f51\u7edc\u66b4\u9732\u51fa\u53bb\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u4ed6\u673a\u5668\u7684\u8fdb\u7a0b\u8bbf\u95eeQueue\u4e86\u3002\n\n\n\u6211\u4eec\u5148\u770b\u670d\u52a1\u8fdb\u7a0b\uff0c\u670d\u52a1\u8fdb\u7a0b\u8d1f\u8d23\u542f\u52a8Queue\uff0c\u628aQueue\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a\uff0c\u7136\u540e\u5f80Queue\u91cc\u9762\u5199\u5165\u4efb\u52a1\n\n\n# task_master.py\n\nimport random, time, queue\nfrom multiprocessing.managers import BaseManager\n\n# \u53d1\u9001\u4efb\u52a1\u7684\u961f\u5217:\ntask_queue = queue.Queue()\n# \u63a5\u6536\u7ed3\u679c\u7684\u961f\u5217:\nresult_queue = queue.Queue()\n\n# \u4eceBaseManager\u7ee7\u627f\u7684QueueManager:\nclass QueueManager(BaseManager):\n    pass\n\n# \u628a\u4e24\u4e2aQueue\u90fd\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a, callable\u53c2\u6570\u5173\u8054\u4e86Queue\u5bf9\u8c61:\nQueueManager.register('get_task_queue', callable=lambda: task_queue)\nQueueManager.register('get_result_queue', callable=lambda: result_queue)\n# \u7ed1\u5b9a\u7aef\u53e35000, \u8bbe\u7f6e\u9a8c\u8bc1\u7801'abc':\nmanager = QueueManager(address=('', 5000), authkey=b'abc')\n# \u542f\u52a8Queue:\nmanager.start()\n# \u83b7\u5f97\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u7684Queue\u5bf9\u8c61:\ntask = manager.get_task_queue()\nresult = manager.get_result_queue()\n# \u653e\u51e0\u4e2a\u4efb\u52a1\u8fdb\u53bb:\nfor i in range(10):\n    n = random.randint(0, 10000)\n    print('Put task %d...' % n)\n    task.put(n)\n# \u4eceresult\u961f\u5217\u8bfb\u53d6\u7ed3\u679c:\nprint('Try get results...')\nfor i in range(10):\n    r = result.get(timeout=10)\n    print('Result: %s' % r)\n# \u5173\u95ed:\nmanager.shutdown()\nprint('master exit.')\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5199\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u65f6\uff0c\u521b\u5efa\u7684Queue\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\uff0c\u4f46\u662f\uff0c\u5728\u5206\u5e03\u5f0f\u591a\u8fdb\u7a0b\u73af\u5883\u4e0b\uff0c\u6dfb\u52a0\u4efb\u52a1\u5230Queue\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5bf9\u539f\u59cb\u7684task_queue\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u6837\u5c31\u7ed5\u8fc7\u4e86QueueManager\u7684\u5c01\u88c5\uff0c\u5fc5\u987b\u901a\u8fc7manager.get_task_queue()\u83b7\u5f97\u7684Queue\u63a5\u53e3\u6dfb\u52a0\u3002\n\n\n\u7136\u540e\uff0c\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u542f\u52a8\u4efb\u52a1\u8fdb\u7a0b\uff08\u672c\u673a\u4e0a\u542f\u52a8\u4e5f\u53ef\u4ee5\uff09\uff1a\n\n\n# task_worker.py\n\nimport time, sys, queue\nfrom multiprocessing.managers import BaseManager\n\n# \u521b\u5efa\u7c7b\u4f3c\u7684QueueManager:\nclass QueueManager(BaseManager):\n    pass\n\n# \u7531\u4e8e\u8fd9\u4e2aQueueManager\u53ea\u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6Queue\uff0c\u6240\u4ee5\u6ce8\u518c\u65f6\u53ea\u63d0\u4f9b\u540d\u5b57:\nQueueManager.register('get_task_queue')\nQueueManager.register('get_result_queue')\n\n# \u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u4e5f\u5c31\u662f\u8fd0\u884ctask_master.py\u7684\u673a\u5668:\nserver_addr = '127.0.0.1'\nprint('Connect to server %s...' % server_addr)\n# \u7aef\u53e3\u548c\u9a8c\u8bc1\u7801\u6ce8\u610f\u4fdd\u6301\u4e0etask_master.py\u8bbe\u7f6e\u7684\u5b8c\u5168\u4e00\u81f4:\nm = QueueManager(address=(server_addr, 5000), authkey=b'abc')\n# \u4ece\u7f51\u7edc\u8fde\u63a5:\nm.connect()\n# \u83b7\u53d6Queue\u7684\u5bf9\u8c61:\ntask = m.get_task_queue()\nresult = m.get_result_queue()\n# \u4ecetask\u961f\u5217\u53d6\u4efb\u52a1,\u5e76\u628a\u7ed3\u679c\u5199\u5165result\u961f\u5217:\nfor i in range(10):\n    try:\n        n = task.get(timeout=1)\n        print('run task %d * %d...' % (n, n))\n        r = '%d * %d = %d' % (n, n, n*n)\n        time.sleep(1)\n        result.put(r)\n    except Queue.Empty:\n        print('task queue is empty.')\n# \u5904\u7406\u7ed3\u675f:\nprint('worker exit.')\n\n\n\n\n\u4efb\u52a1\u8fdb\u7a0b\u8981\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u5230\u670d\u52a1\u8fdb\u7a0b\uff0c\u6240\u4ee5\u8981\u6307\u5b9a\u670d\u52a1\u8fdb\u7a0b\u7684IP\u3002\n\n\n\u73b0\u5728\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u5206\u5e03\u5f0f\u8fdb\u7a0b\u7684\u5de5\u4f5c\u6548\u679c\u4e86\u3002\u5148\u542f\u52a8task_master.py\u670d\u52a1\u8fdb\u7a0b\uff1a\n\n\n$ python3 task_master.py \nPut task 3411...\nPut task 1605...\nPut task 1398...\nPut task 4729...\nPut task 5300...\nPut task 7471...\nPut task 68...\nPut task 4219...\nPut task 339...\nPut task 7866...\nTry get results...\n\n\n\n\ntask_master.py\n\u8fdb\u7a0b\u53d1\u9001\u5b8c\u4efb\u52a1\u540e\uff0c\u5f00\u59cb\u7b49\u5f85result\u961f\u5217\u7684\u7ed3\u679c\u3002\u73b0\u5728\u542f\u52a8\ntask_worker.py\n\u8fdb\u7a0b\uff1a\n\n\n$ python3 task_worker.py\nConnect to server 127.0.0.1...\nrun task 3411 * 3411...\nrun task 1605 * 1605...\nrun task 1398 * 1398...\nrun task 4729 * 4729...\nrun task 5300 * 5300...\nrun task 7471 * 7471...\nrun task 68 * 68...\nrun task 4219 * 4219...\nrun task 339 * 339...\nrun task 7866 * 7866...\nworker exit.\n\n\n\n\ntask_worker.py\n\u8fdb\u7a0b\u7ed3\u675f\uff0c\u5728\ntask_master.py\n\u8fdb\u7a0b\u4e2d\u4f1a\u7ee7\u7eed\u6253\u5370\u51fa\u7ed3\u679c\uff1a\n\n\nResult: 3411 * 3411 = 11634921\nResult: 1605 * 1605 = 2576025\nResult: 1398 * 1398 = 1954404\nResult: 4729 * 4729 = 22363441\nResult: 5300 * 5300 = 28090000\nResult: 7471 * 7471 = 55815841\nResult: 68 * 68 = 4624\nResult: 4219 * 4219 = 17799961\nResult: 339 * 339 = 114921\nResult: 7866 * 7866 = 61873956\n\n\n\n\n\u4e2a\u7b80\u5355\u7684Master/Worker\u6a21\u578b\u6709\u4ec0\u4e48\u7528\uff1f\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u771f\u6b63\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u628a\u4ee3\u7801\u7a0d\u52a0\u6539\u9020\uff0c\u542f\u52a8\u591a\u4e2aworker\uff0c\u5c31\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u5e03\u5230\u51e0\u53f0\u751a\u81f3\u51e0\u5341\u53f0\u673a\u5668\u4e0a\uff0c\u6bd4\u5982\u628a\u8ba1\u7b97n*n\u7684\u4ee3\u7801\u6362\u6210\u53d1\u9001\u90ae\u4ef6\uff0c\u5c31\u5b9e\u73b0\u4e86\u90ae\u4ef6\u961f\u5217\u7684\u5f02\u6b65\u53d1\u9001\u3002\n\n\nQueue\u5bf9\u8c61\u5b58\u50a8\u5728\u54ea\uff1f\u6ce8\u610f\u5230task_worker.py\u4e2d\u6839\u672c\u6ca1\u6709\u521b\u5efaQueue\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\uff0cQueue\u5bf9\u8c61\u5b58\u50a8\u5728task_master.py\u8fdb\u7a0b\u4e2d\uff1a\n\n\n\n\u800c\nQueue\n\u4e4b\u6240\u4ee5\u80fd\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\uff0c\u5c31\u662f\u901a\u8fc7\nQueueManager\n\u5b9e\u73b0\u7684\u3002\u7531\u4e8e\nQueueManager\n\u7ba1\u7406\u7684\u4e0d\u6b62\u4e00\u4e2a\nQueue\n\uff0c\u6240\u4ee5\uff0c\u8981\u7ed9\u6bcf\u4e2a\nQueue\n\u7684\u7f51\u7edc\u8c03\u7528\u63a5\u53e3\u8d77\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\nget_task_queue\n\u3002\n\n\nauthkey\n\u6709\u4ec0\u4e48\u7528\uff1f\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e24\u53f0\u673a\u5668\u6b63\u5e38\u901a\u4fe1\uff0c\u4e0d\u88ab\u5176\u4ed6\u673a\u5668\u6076\u610f\u5e72\u6270\u3002\u5982\u679c\ntask_worker.py\n\u7684\nauthkey\n\u548c\ntask_master.py\n\u7684\nauthkey\n\u4e0d\u4e00\u81f4\uff0c\u80af\u5b9a\u8fde\u63a5\u4e0d\u4e0a\u3002\n\n\n\u7ebf\u7a0b\n\n\n\u7ebf\u7a0b\u662f\u4e00\u79cd\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5728linux\u5185\u6838\u4e2d\uff0c\u4e24\u8005\u51e0\u4e4e\u6ca1\u6709\u5dee\u522b\uff0c\u9664\u4e86\u4e00\u70b9\u2014\u2014\n\u7ebf\u7a0b\u5e76\u4e0d\u4ea7\u751f\u65b0\u7684\u5730\u5740\u7a7a\u95f4\u548c\u8d44\u6e90\u63cf\u8ff0\u7b26\u8868\uff0c\u800c\u662f\u590d\u7528\u7236\u8fdb\u7a0b\u7684\n\u3002\n\u4f46\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u8fdb\u7a0b\u4e00\u6837\uff0c\u5fc5\u987b\u9677\u5165\u5185\u6838\u6001\u3002\n\n\n\u7ebf\u7a0b\u662f\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u800c\u8fdb\u7a0b\u7531\u81f3\u5c11\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002\u5982\u4f55\u8c03\u5ea6\u8fdb\u7a0b\u548c\u7ebf\u7a0b\uff0c\u5b8c\u5168\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u7a0b\u5e8f\u81ea\u5df1\u4e0d\u80fd\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u6267\u884c\uff0c\u6267\u884c\u591a\u957f\u65f6\u95f4\u3002\n\n\n\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u6d41\uff0c\u72ec\u7acb\u6267\u884c\u5b83\u81ea\u5df1\u7684\u7a0b\u5e8f\u4ee3\u7801\u3002\u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\n\n\n\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e00\u822c\u53ea\u5305\u542bCPU\u4e0a\u4e0b\u6587\u53ca\u5176\u4ed6\u7684\u7ebf\u7a0b\u7ba1\u7406\u4fe1\u606f\u3002\u7ebf\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u4e3b\u8981\u53d6\u51b3\u4e8e\u4e3a\u7ebf\u7a0b\u5806\u6808\u7684\u5efa\u7acb\u800c\u5206\u914d\u5185\u5b58\u7684\u5f00\u9500\uff0c\u8fd9\u4e9b\u5f00\u9500\u5e76\u4e0d\u5927\u3002\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u53d1\u751f\u5728\u4e24\u4e2a\u7ebf\u7a0b\u9700\u8981\u540c\u6b65\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u8fdb\u5165\u5171\u4eab\u6570\u636e\u6bb5\u3002\u5207\u6362\u53eaCPU\u5bc4\u5b58\u5668\u503c\u9700\u8981\u5b58\u50a8\uff0c\u5e76\u968f\u540e\u7528\u5c06\u8981\u5207\u6362\u5230\u7684\u7ebf\u7a0b\u7684\u539f\u5148\u5b58\u50a8\u7684\u503c\u91cd\u65b0\u52a0\u8f7d\u5230CPU\u5bc4\u5b58\u5668\u4e2d\u53bb\u3002\n\n\n\u7528\u6237\u7ea7\u7ebf\u7a0b\u4e3b\u8981\u7f3a\u70b9\u5728\u4e8e\u5bf9\u5f15\u8d77\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u8c03\u7528\u4f1a\u7acb\u5373\u963b\u585e\u8be5\u7ebf\u7a0b\u6240\u5c5e\u7684\u6574\u4e2a\u8fdb\u7a0b\u3002\u5185\u6838\u5b9e\u73b0\u7ebf\u7a0b\u5219\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u8ddf\u8fdb\u7a0b\u4e00\u6837\u5927\uff0c\u6240\u4ee5\u6298\u8877\u7684\u65b9\u6cd5\u662f\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff08Lightweight\uff09\u3002\u5728 Linux \u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u57fa\u672c\u4e0a\u5c31\u662f\u5b9e\u73b0\u4e86\u591a\u7ebf\u7a0b\u5e94\u7528\u7684\u4e00\u7ec4\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u4e2d\u5b58\u5728\u7528\u6237\u7ebf\u7a0b\u3001\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3001\u5185\u6838\u7ebf\u7a0b\u3002\n\n\n\u8bed\u8a00\u5c42\u9762\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u7684\u6bd4\u8f83\u5c11\uff0cstackless python\uff0cerlang \u652f\u6301\uff0cjava \u5e76\u4e0d\u652f\u6301\u3002\n\n\npython\u7ebf\u7a0b\n\n\nPython\u7684\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6a21\u5757\uff1a\n_thread\n\u548c\nthreading\n\uff0c_\nthread\n\u662f\u4f4e\u7ea7\u6a21\u5757\uff0c\nthreading\n\u662f\u9ad8\u7ea7\u6a21\u5757\uff0c\u5bf9\n_thread\n\u8fdb\u884c\u4e86\u5c01\u88c5\u3002\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\nthreading\n\u8fd9\u4e2a\u9ad8\u7ea7\u6a21\u5757\n\n\nclass FetchUrls(threading.Thread):\n  \n\n  \u4e0b\u8f7dURL\u5185\u5bb9\u7684\u7ebf\u7a0b\n  \n\n\n  def __init__(self, urls, output):\n    \n\n    \u6784\u9020\u5668\n\n    @param urls \u9700\u8981\u4e0b\u8f7d\u7684URL\u5217\u8868\n    @param output \u5199URL\u5185\u5bb9\u7684\u8f93\u51fa\u6587\u4ef6\n    \n\n    threading.Thread.__init__(self)\n    self.urls = urls\n    self.output = output\n\n  def run(self):\n    \n\n    \u5b9e\u73b0\u7236\u7c7bThread\u7684run\u65b9\u6cd5\uff0c\u6253\u5f00URL\uff0c\u5e76\u4e14\u4e00\u4e2a\u4e00\u4e2a\u7684\u4e0b\u8f7dURL\u7684\u5185\u5bb9\n    \n\n    while self.urls:\n      url = self.urls.pop()\n      req = urllib2.Request(url)\n      try:\n        d = urllib2.urlopen(req)\n      except urllib2.URLError, e:\n        print 'URL %s failed: %s' % (url, e.reason)\n      self.output.write(d.read())\n      print 'write done by %s' % self.name\n      print 'URL %s fetched by %s' % (url, self.name)\n\ndef main():\n  # URL\u5217\u88681\n  urls1 = ['http://www.google.com', 'http://www.facebook.com']\n  # URL\u5217\u88682\n  urls2 = ['http://www.yahoo.com', 'http://www.youtube.com']\n  f = open('output.txt', 'w+')\n  t1 = FetchUrls(urls1, f)\n  t2 = FetchUrls(urls2, f)\n  t1.start()\n  t2.start()\n  t1.join()\n  t2.join()\n  f.close()\n\nif __name__ == '__main__':\n  main()\n\n\n\n\nFetchUrls\n\u7ee7\u627f\u81ea\nthreading.Thread\n\u542f\u52a8\u4e24\u4e2a\nFetchUrls\n\u7ebf\u7a0b\u4f7f\u7528\u4e0d\u540c\u7684urls\u5217\u8868\u5199\u540c\u4e00\u4efd\u6587\u4ef6,\u56e0\u4e3a\u7ebf\u7a0b\u8c03\u5ea6\u4e0d\u4e00\u6837\u5199\u6587\u4ef6\u4f1a\u51fa\u73b0\u672a\u5199\u5b8c\u4e00\u6b21\nresponse\n\u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2a\nresponse\n,\u8981\u4fdd\u8bc1\u5199\u6709\u5e8f\u53ef\u5f15\u5165\u9501\u673a\u5236\n\n\nLock(\u9501\u673a\u5236)\n\n\n\u591a\u7ebf\u7a0b\u4e2d\uff0c\u6240\u6709\u53d8\u91cf\u90fd\u7531\u6240\u6709\u7ebf\u7a0b\u5171\u4eab,\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u6700\u5927\u7684\u5371\u9669\u5728\u4e8e\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6539\u4e00\u4e2a\u53d8\u91cf,\u6240\u4ee5\u51fa\u73b0\u4e86\u9501\u673a\u5236\n\u9501\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u88ab\u9501\uff08\nlocked\n\uff09\u548c\u6ca1\u6709\u88ab\u9501\uff08\nunlocked\n\uff09\u3002\u62e5\u6709\nacquire()\n\u548c\nrelease()\n\u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u9075\u5faa\u4e00\u4e0b\u7684\u89c4\u5219\uff1a\n\n\n\n\n\u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662funlocked\uff0c\u8c03\u7528acquire()\u65b9\u6cd5\u6539\u53d8\u5b83\u7684\u72b6\u6001\u4e3alocked\uff1b\n\n\n\u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662flocked\uff0cacquire()\u65b9\u6cd5\u5c06\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528release()\u65b9\u6cd5\u91ca\u653e\u4e86\u9501\uff1b\n\n\n\u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662funlocked\u8c03\u7528release()\u4f1a\u629b\u51faRuntimeError\u5f02\u5e38\uff1b\n\n\n\u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662flocked\uff0c\u8c03\u7528release()\u65b9\u6cd5\u6539\u53d8\u5b83\u7684\u72b6\u6001\u4e3aunlocked\u3002\n\n\n\n\n\u89e3\u51b3\u4e0a\u9762\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199\u4e00\u4e2a\u6587\u4ef6\u7684\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f\uff1a\u6211\u4eec\u7ed9\u7c7bFetchUrls\u7684\u6784\u9020\u5668\u4e2d\u4f20\u5165\u4e00\u4e2a\u9501\uff08lock\uff09\uff0c\u4f7f\u7528\u8fd9\u4e2a\u9501\u6765\u4fdd\u62a4\u6587\u4ef6\u64cd\u4f5c\uff0c\u5b9e\u73b0\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5199\u6587\u4ef6\n\n\nimport time\nimport urllib2\nimport threading\n\nclass FetchUrls(threading.Thread):\n    \n\n    Thread checking URLs.\n    \n\n\n    def __init__(self, urls, output, lock):\n        \n\n        Constructor.\n        @param urls list of urls to check\n        @param output file to write urls output\n        \n\n        threading.Thread.__init__(self)\n        self.urls = urls\n        self.output = output\n        self.lock = lock\n\n    def run(self):\n        \n\n        Thread run method. Check URLs one by one.\n        \n\n        while self.urls:\n            url = self.urls.pop()\n            req = urllib2.Request(url)\n            try:\n                d = urllib2.urlopen(req)\n            except urllib2.URLError, e:\n                print 'URL %s failed: %s' % (url, e.reason)\n            self.lock.acquire()\n            print 'lock acquired by %s' % self.name\n            self.output.write(d.read())\n            print 'write done by %s' % self.name\n            print 'lock released by %s' % self.name\n            self.lock.release()\n            print 'URL %s fetched by %s' % (url, self.name)\n\ndef main():\n    # list 1 of urls to fetch\n    urls1 = ['http://www.google.com', 'http://www.facebook.com']\n    # list 2 of urls to fetch\n    urls2 = ['http://www.yahoo.com', 'http://www.youtube.com']\n    lock = threading.Lock()\n    f = open('output.txt', 'w+')\n    t1 = FetchUrls(urls1, f, lock)\n    t2 = FetchUrls(urls2, f, lock)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n    f.close()\n\nif __name__ == '__main__':\n    main()\n\n'''\nlock acquired by Thread-2\nwrite done by Thread-2\nlock released by Thread-2\nURL http://www.youtube.com fetched by Thread-2\nlock acquired by Thread-1\nwrite done by Thread-1\nlock released by Thread-1\nURL http://www.facebook.com fetched by Thread-1\nlock acquired by Thread-2\nwrite done by Thread-2\nlock released by Thread-2\nURL http://www.yahoo.com fetched by Thread-2\nlock acquired by Thread-1\nwrite done by Thread-1\nlock released by Thread-1\nURL http://www.google.com fetched by Thread-1\n'''\n\n\n\n\n\n\n\u53ef\u91cd\u5165\u9501\uff08RLock\uff09\n\n\nRLock\u662f\u53ef\u91cd\u5165\u9501\uff08reentrant lock\uff09\uff0cacquire()\u80fd\u591f\u4e0d\u88ab\u963b\u585e\u7684\u88ab\u540c\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u591a\u6b21\u3002\u8981\u6ce8\u610f\u7684\u662frelease()\u9700\u8981\u8c03\u7528\u4e0eacquire()\u76f8\u540c\u7684\u6b21\u6570\u624d\u80fd\u91ca\u653e\u9501\u3002\n\n\n\u4f7f\u7528Lock\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8c03\u7528acquire()\u65f6\u5c06\u88ab\u963b\u585e\uff1a\n\n\nlock = threading.Lock()\nlock.acquire()\nlock.acquire()\n\n\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fRLock\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8c03\u7528acquire()\u4e0d\u4f1a\u88ab\u963b\u585e:\n\n\nrlock = threading.RLock()\nrlock.acquire()\nrlock.acquire()\n\n\n\n\nRLock\u4f7f\u7528\u7684\u540c\u6837\u662fthread.allocate_lock()\uff0c\u4e0d\u540c\u7684\u662f\u4ed6\u8ddf\u8e2a\u5bbf\u4e3b\u7ebf\u7a0b\uff08the owner thread\uff09\u6765\u5b9e\u73b0\u53ef\u91cd\u5165\u7684\u7279\u6027\u3002\u4e0b\u9762\u662fRLock\u7684acquire()\u5b9e\u73b0\u3002\u5982\u679c\u8c03\u7528acquire()\u7684\u7ebf\u7a0b\u662f\u8d44\u6e90\u7684\u6240\u6709\u8005\uff0c\u8bb0\u5f55\u8c03\u7528acquire()\u6b21\u6570\u7684\u8ba1\u6570\u5668\u5c31\u4f1a\u52a01\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u5c06\u8bd5\u56fe\u53bb\u83b7\u53d6\u9501\u3002\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u83b7\u5f97\u9501\u65f6\uff0c\u9501\u7684\u62e5\u6709\u8005\u5c06\u4f1a\u88ab\u4fdd\u5b58\uff0c\u540c\u65f6\u8ba1\u6570\u5668\u521d\u59cb\u5316\u4e3a1\u3002\n\n\ndef acquire(self, blocking=1):\n    me = _get_ident()\n    if self.__owner == me:\n        self.__count = self.__count + 1\n        ...\n        return 1\n    rc = self.__block.acquire(blocking)\n    if rc:\n        self.__owner = me\n        self.__count = 1\n        ...\n    ...\n    return rc\n\n\n\n\n\u53ef\u91cd\u5165\u9501\uff08RLock\uff09\u7684release()\u65b9\u6cd5\u3002\u9996\u5148\u5b83\u4f1a\u53bb\u786e\u8ba4\u8c03\u7528\u8005\u662f\u5426\u662f\u9501\u7684\u62e5\u6709\u8005\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8ba1\u6570\u5668\u51cf1\uff1b\u5982\u679c\u8ba1\u6570\u5668\u4e3a0\uff0c\u90a3\u4e48\u9501\u5c06\u4f1a\u88ab\u91ca\u653e\uff0c\u8fd9\u65f6\u5176\u4ed6\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u53bb\u83b7\u53d6\u9501\u4e86\n\n\ndef release(self):\n    if self.__owner != _get_ident():\n        raise RuntimeError(\ncannot release un-acquired lock\n)\n    self.__count = count = self.__count - 1\n    if not count:\n        self.__owner = None\n        self.__block.release()\n        ...\n    ...\n\n\n\n\n\u6761\u4ef6(Condition)\n\n\n\u6761\u4ef6\u540c\u6b65\u673a\u5236\u662f\u6307\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u7279\u5b9a\u6761\u4ef6\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u7684\u4fe1\u53f7\u3002 \u89e3\u91ca\u6761\u4ef6\u540c\u6b65\u673a\u5236\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\uff08producer/consumer\uff09\u6a21\u578b\u3002\u751f\u4ea7\u8005\u968f\u673a\u7684\u5f80\u5217\u8868\u4e2d\u201c\u751f\u4ea7\u201d\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u800c\u6d88\u8d39\u8005\u4ece\u5217\u8868\u4e2d\u201c\u6d88\u8d39\u201d\u6574\u6570\u3002\u5b8c\u6574\u7684\u6e90\u7801\u53ef\u4ee5\u5728threads/condition.py\u4e2d\u627e\u5230\n\n\n\u5728producer\u7c7b\u4e2d\uff0cproducer\u83b7\u5f97\u9501\uff0c\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u6709\u4e86\u53ef\u7528\u7684\u201c\u5546\u54c1\u201d\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002producer\u65e0\u9650\u5730\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u6574\u6570\uff0c\u540c\u65f6\u5728\u4e24\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e2d\u95f4\u968f\u673a\u7684\u505c\u987f\u4e00\u4f1a\u513f\u3002\n\n\nimport time\nimport urllib2\nimport threading\nimport random\n\nclass Producer(threading.Thread):\n    \n\n    Produces random integers to a list\n    \n\n\n    def __init__(self, integers, condition):\n        \n\n        Constructor.\n        @param integers list of integers\n        @param condition condition synchronization object\n        \n\n        threading.Thread.__init__(self)\n        self.integers = integers\n        self.condition = condition\n\n    def run(self):\n        \n\n        Thread run method. Append random integers to the integers list at\n        random time.\n        \n\n        for i in range(10):\n            integer = random.randint(0, 256)\n            self.condition.acquire()\n            print 'condition acquired by %s' % self.name\n            self.integers.append(integer)\n            print '%d appended to list by %s' % (integer, self.name)\n            print 'condition notified by %s' % self.name\n            self.condition.notify()\n            print 'condition released by %s' % self.name\n            self.condition.release()\n            time.sleep(1)\n\nclass Consumer(threading.Thread):\n    \n\n    Consumes random integers from a list\n    \n\n\n    def __init__(self, integers, condition):\n        \n\n        Constructor.\n        @param integers list of integers\n        @param condition condition synchronization object\n        \n\n        threading.Thread.__init__(self)\n        self.integers = integers\n        self.condition = condition\n\n    def run(self):\n        \n\n        Thread run method. Consumes integers from list\n        \n\n        while True:\n            self.condition.acquire()\n            print 'condition acquired by %s' % self.name\n            while True:\n                if self.integers:\n                    integer = self.integers.pop()\n                    print '%d popped from list by %s' % (integer, self.name)\n                    break\n                print 'condition wait by %s' % self.name\n                self.condition.wait()\n            print 'condition released by %s' % self.name\n            self.condition.release()\n\ndef main():\n    integers = []\n    condition = threading.Condition()\n    t1 = Producer(integers, condition)\n    t2 = Consumer(integers, condition)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n\nif __name__ == '__main__':\n    main()\n'''\ncondition acquired by Thread-1\n159 appended to list by Thread-1\ncondition notified by Thread-1\ncondition released by Thread-1\ncondition acquired by Thread-2\n159 popped from list by Thread-2\ncondition released by Thread-2\ncondition acquired by Thread-2\ncondition wait by Thread-2\ncondition acquired by Thread-1\n116 appended to list by Thread-1\ncondition notified by Thread-1\ncondition released by Thread-1\n116 popped from list by Thread-2\ncondition released by Thread-2\ncondition acquired by Thread-2\ncondition wait by Thread-2\n'''\n\n\n\n\n\u5728producer\u7c7b\u4e2d\uff0cproducer\u83b7\u5f97\u9501\uff0c\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u6709\u4e86\u53ef\u7528\u7684\u201c\u5546\u54c1\u201d\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002producer\u65e0\u9650\u5730\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u6574\u6570\uff0c\u540c\u65f6\u5728\u4e24\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e2d\u95f4\u968f\u673a\u7684\u505c\u987f\u4e00\u4f1a\u513f\n\u6d88\u8d39\u8005\uff08consumer\uff09\u7c7b\u3002\u5b83\u83b7\u53d6\u9501\uff0c\u68c0\u67e5\u5217\u8868\u4e2d\u662f\u5426\u6709\u6574\u6570\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u7b49\u5f85\u751f\u4ea7\u8005\u7684\u901a\u77e5\u3002\u5f53\u6d88\u8d39\u8005\u83b7\u53d6\u6574\u6570\u4e4b\u540e\uff0c\u91ca\u653e\u9501\u3002\n\u6ce8\u610f\u5728wait()\u65b9\u6cd5\u4e2d\u4f1a\u91ca\u653e\u9501\uff0c\u8fd9\u6837\u751f\u4ea7\u8005\u5c31\u80fd\u83b7\u5f97\u8d44\u6e90\u5e76\u4e14\u751f\u4ea7\u201c\u5546\u54c1\u201d\u3002\n\n\n\nThread-1\u6dfb\u52a0159\u5230\u5217\u8868\u4e2d\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u540c\u65f6\u91ca\u653e\u9501\uff0cThread-2\u83b7\u5f97\u9501\uff0c\u53d6\u56de159\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002\u6b64\u65f6\u56e0\u4e3a\u6267\u884ctime.sleep(1)\uff0c\u751f\u4ea7\u8005\u6b63\u5728\u7761\u7720\uff0c\u5f53\u6d88\u8d39\u8005\u518d\u6b21\u8bd5\u56fe\u83b7\u53d6\u6574\u6570\u65f6\uff0c\u5217\u8868\u4e2d\u5e76\u6ca1\u6709\u6574\u6570\uff0c\u8fd9\u65f6\u6d88\u8d39\u8005\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u7b49\u5f85\u751f\u4ea7\u8005\u7684\u901a\u77e5\u3002\u5f53wait()\u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u91ca\u653e\u8d44\u6e90\uff0c\u4ece\u800c\u751f\u4ea7\u8005\u80fd\u591f\u5229\u7528\u8d44\u6e90\u751f\u4ea7\u6574\u6570\u3002\n\n\n\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bPython\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u6761\u4ef6\u540c\u6b65\u673a\u5236\u7684\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u4f20\u5165\u9501\uff08lock\uff09\u5bf9\u8c61\uff0ccondition\u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u4e00\u4e2a\u53ef\u91cd\u5165\u9501\uff08RLock\uff09\uff0c\u8fd9\u4e2a\u9501\u5c06\u4f1a\u5728\u8c03\u7528acquire()\u548crelease()\u65f6\u4f7f\u7528\n\n\nclass _Condition(_Verbose):\n\n    def __init__(self, lock=None, verbose=None):\n        _Verbose.__init__(self, verbose)\n        if lock is None:\n            lock = RLock()\n        self.__lock = lock\n\n\n\n\n\u63a5\u4e0b\u6765\u662fwait()\u65b9\u6cd5\u3002\u4e3a\u4e86\u7b80\u5316\u8bf4\u660e\uff0c\u6211\u4eec\u5047\u5b9a\u5728\u8c03\u7528wait()\u65b9\u6cd5\u65f6\u4e0d\u4f7f\u7528timeout\u53c2\u6570\u3002wait()\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3awaiter\u7684\u9501\uff0c\u5e76\u4e14\u8bbe\u7f6e\u9501\u7684\u72b6\u6001\u4e3alocked\u3002\u8fd9\u4e2awaiter\u9501\u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u901a\u8baf\uff0c\u8fd9\u6837\u751f\u4ea7\u8005\uff08\u5728\u751f\u4ea7\u5b8c\u6574\u6570\u4e4b\u540e\uff09\u5c31\u53ef\u4ee5\u901a\u77e5\u6d88\u8d39\u8005\u91ca\u653ewaiter()\u9501\u3002\u9501\u5bf9\u8c61\u5c06\u4f1a\u88ab\u6dfb\u52a0\u5230\u7b49\u5f85\u8005\u5217\u8868\uff0c\u5e76\u4e14\u5728\u8c03\u7528waiter.acquire()\u65f6\u88ab\u963b\u585e\u3002\u4e00\u5f00\u59cbcondition\u9501\u7684\u72b6\u6001\u88ab\u4fdd\u5b58\uff0c\u5e76\u4e14\u5728wait()\u7ed3\u675f\u65f6\u88ab\u6062\u590d\u3002\n\n\ndef wait(self, timeout=None):\n    ...\n    waiter = _allocate_lock()\n    waiter.acquire()\n    self.__waiters.append(waiter)\n    saved_state = self._release_save()\n    try:    # \u65e0\u8bba\u5982\u4f55\u6062\u590d\u72b6\u6001 (\u4f8b\u5982, KeyboardInterrupt)\n        if timeout is None:\n            waiter.acquire()\n            ...\n        ...\n    finally:\n        self._acquire_restore(saved_state)\n\n\n\n\n\u5f53\u751f\u4ea7\u8005\u8c03\u7528notify()\u65b9\u6cd5\u65f6\uff0cnotify()\u91ca\u653ewaiter\u9501\uff0c\u5524\u9192\u88ab\u963b\u585e\u7684\u6d88\u8d39\u8005\u3002\n\n\ndef notify(self, n=1):\n    ...\n    __waiters = self.__waiters\n    waiters = __waiters[:n]\n    ...\n    for waiter in waiters:\n        waiter.release()\n        try:\n            __waiters.remove(waiter)\n        except ValueError:\n            pass\n\n\n\n\n\u540c\u6837Condition\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u548c\u201cwith\u201d\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u6837\u201cwith\u201d\u8bed\u53e5\u4e0a\u4e0b\u6587\u4f1a\u5e2e\u6211\u4eec\u8c03\u7528acquire()\u548crelease()\u65b9\u6cd5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u201cwith\u201d\u8bed\u53e5\u6539\u5199\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7c7b\u3002\n\n\nclass Producer(threading.Thread):\n  ...\n  def run(self):\n    while True:\n      integer = random.randint(0, 256)\n      with self.condition:\n        print 'condition acquired by %s' % self.name\n        self.integers.append(integer)\n        print '%d appended to list by %s' % (integer, self.name)\n        print 'condition notified by %s' % self.name\n        self.condition.notify()\n        print 'condition released by %s' % self.name\n      time.sleep(1)\n\nclass Consumer(threading.Thread):\n  ...\n  def run(self):\n    while True:\n      with self.condition:\n        print 'condition acquired by %s' % self.name\n        while True:\n          if self.integers:\n            integer = self.integers.pop()\n            print '%d popped from list by %s' % (integer, self.name)\n            break\n          print 'condition wait by %s' % self.name\n          self.condition.wait()\n        print 'condition released by %s' % self.name\n\n\n\n\n\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\n\n\n\u4fe1\u53f7\u91cf\u540c\u6b65\u57fa\u4e8e\u5185\u90e8\u8ba1\u6570\u5668\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21acquire()\uff0c\u8ba1\u6570\u5668\u51cf1\uff1b\u6bcf\u8c03\u7528\u4e00\u6b21release()\uff0c\u8ba1\u6570\u5668\u52a01.\u5f53\u8ba1\u6570\u5668\u4e3a0\u65f6\uff0cacquire()\u8c03\u7528\u88ab\u963b\u585e\u3002\u8fd9\u662f\u8fea\u79d1\u65af\u5f7b\uff08Dijkstra\uff09\u4fe1\u53f7\u91cf\u6982\u5ff5P()\u548cV()\u7684Python\u5b9e\u73b0\u3002\u4fe1\u53f7\u91cf\u540c\u6b65\u673a\u5236\u9002\u7528\u4e8e\u8bbf\u95ee\u50cf\u670d\u52a1\u5668\u8fd9\u6837\u7684\u6709\u9650\u8d44\u6e90\u3002\n\u4fe1\u53f7\u91cf\u540c\u6b65\u7684\u4f8b\u5b50\uff1a\n\n\nsemaphore = threading.Semaphore()\nsemaphore.acquire()\n # \u4f7f\u7528\u5171\u4eab\u8d44\u6e90\n...\nsemaphore.release()\n\n\n\n\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u4fe1\u53f7\u91cf\u540c\u6b65\u5728Python\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u6784\u9020\u5668\u4f7f\u7528\u53c2\u6570value\u6765\u8868\u793a\u8ba1\u6570\u5668\u7684\u521d\u59cb\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002\u4e00\u4e2a\u6761\u4ef6\u9501\u5b9e\u4f8b\u7528\u4e8e\u4fdd\u62a4\u8ba1\u6570\u5668\uff0c\u540c\u65f6\u5f53\u4fe1\u53f7\u91cf\u88ab\u91ca\u653e\u65f6\u901a\u77e5\u5176\u4ed6\u7ebf\u7a0b\u3002\n\n\nlass _Semaphore(_Verbose):\n    ...\n    def __init__(self, value=1, verbose=None):\n        _Verbose.__init__(self, verbose)\n        self.__cond = Condition(Lock())\n        self.__value = value\n\n\n\n\nacquire()\u65b9\u6cd5\u3002\u5982\u679c\u4fe1\u53f7\u91cf\u4e3a0\uff0c\u7ebf\u7a0b\u88ab\u6761\u4ef6\u9501\u7684wait()\u65b9\u6cd5\u963b\u585e\uff0c\u76f4\u5230\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5524\u9192\uff1b\u5982\u679c\u8ba1\u6570\u5668\u5927\u4e8e0\uff0c\u8c03\u7528acquire()\u4f7f\u8ba1\u6570\u5668\u51cf1\u3002\n\n\ndef acquire(self, blocking=1):\n    rc = False\n    self.__cond.acquire()\n    while self.__value == 0:\n        ...\n        self.__cond.wait()\n    else:\n        self.__value = self.__value - 1\n        rc = True\n    self.__cond.release()\n    return rc\n\n\n\n\n\u4fe1\u53f7\u91cf\u7c7b\u7684release()\u65b9\u6cd5\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\u5e76\u4e14\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u3002\n\n\ndef release(self):\n    self.__cond.acquire()\n    self.__value = self.__value + 1\n    self.__cond.notify()\n    self.__cond.release()\n\n\n\n\n\u8fd8\u6709\u4e00\u4e2a\u201c\u6709\u9650\u201d(bounded)\u4fe1\u53f7\u91cf\u7c7b\uff0c\u53ef\u4ee5\u786e\u4fddrelease()\u65b9\u6cd5\u7684\u8c03\u7528\u6b21\u6570\u4e0d\u80fd\u8d85\u8fc7\u7ed9\u5b9a\u7684\u521d\u59cb\u4fe1\u53f7\u91cf\u6570\u503c(value\u53c2\u6570)\uff0c\u4e0b\u9762\u662f\u201c\u6709\u9650\u201d\u4fe1\u53f7\u91cf\u7c7b\u7684Python\u4ee3\u7801\uff1a\n\n\nclass _BoundedSemaphore(_Semaphore):\n    \n\u68c0\u67e5release()\u7684\u8c03\u7528\u6b21\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8eacquire()\u6b21\u6570\n\n    def __init__(self, value=1, verbose=None):\n        _Semaphore.__init__(self, value, verbose)\n        self._initial_value = value\n\n    def release(self):\n        if self._Semaphore__value \n= self._initial_value:\n            raise ValueError, \nSemaphore released too many times\n\n        return _Semaphore.release(self)\n\n\n\n\n\u540c\u6837\u4fe1\u53f7\u91cf(Semaphore)\u5bf9\u8c61\u53ef\u4ee5\u548c\u201cwith\u201d\u4e00\u8d77\u4f7f\u7528\uff1a\n\n\nsemaphore = threading.Semaphore()\nwith semaphore:\n  # \u4f7f\u7528\u5171\u4eab\u8d44\u6e90\n  ...\n\n\n\n\n\u4e8b\u4ef6\uff08Event\uff09\n\n\n\u57fa\u4e8e\u4e8b\u4ef6\u7684\u540c\u6b65\u662f\u6307\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u9001/\u4f20\u9012\u4e8b\u4ef6\uff0c\u53e6\u5916\u7684\u7ebf\u7a0b\u7b49\u5f85\u4e8b\u4ef6\u7684\u89e6\u53d1\u3002 \u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u524d\u9762\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u628a\u5b83\u8f6c\u6362\u6210\u4f7f\u7528\u4e8b\u4ef6\u540c\u6b65\u800c\u4e0d\u662f\u6761\u4ef6\u540c\u6b65\u3002\u5b8c\u6574\u7684\u6e90\u7801\u53ef\u4ee5\u5728threads/event.py\u91cc\u9762\u627e\u5230\u3002\n\n\n\u9996\u5148\u662f\u751f\u4ea7\u8005\u7c7b\uff0c\u6211\u4eec\u4f20\u5165\u4e00\u4e2aEvent\u5b9e\u4f8b\u7ed9\u6784\u9020\u5668\u800c\u4e0d\u662fCondition\u5b9e\u4f8b\u3002\u4e00\u65e6\u6574\u6570\u88ab\u6dfb\u52a0\u8fdb\u5217\u8868\uff0c\u4e8b\u4ef6(event)\u88ab\u8bbe\u7f6e\u548c\u53d1\u9001\u53bb\u5524\u9192\u6d88\u8d39\u8005\u3002\u6ce8\u610f\u4e8b\u4ef6(event)\u5b9e\u4f8b\u9ed8\u8ba4\u662f\u88ab\u53d1\u9001\u7684\u3002\n\n\nclass Producer(threading.Thread):\n  \n\n  \u5411\u5217\u8868\u4e2d\u751f\u4ea7\u968f\u673a\u6574\u6570\n  \n\n\n  def __init__(self, integers, event):\n    \n\n    \u6784\u9020\u5668\n\n    @param integers \u6574\u6570\u5217\u8868\n    @param event \u4e8b\u4ef6\u540c\u6b65\u5bf9\u8c61\n    \n\n    threading.Thread.__init__(self)\n    self.integers = integers\n    self.event = event\n\n  def run(self):\n    \n\n    \u5b9e\u73b0Thread\u7684run\u65b9\u6cd5\u3002\u5728\u968f\u673a\u65f6\u95f4\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u968f\u673a\u6574\u6570\n    \n\n    while True:\n      integer = random.randint(0, 256)\n      self.integers.append(integer)\n      print '%d appended to list by %s' % (integer, self.name)\n      print 'event set by %s' % self.name\n      self.event.set()      #\u8bbe\u7f6e\u4e8b\u4ef6\n      self.event.clear()    #\u53d1\u9001\u4e8b\u4ef6\n      print 'event cleared by %s' % self.name\n      time.sleep(1)\n\n\n\n\n\n\n\u4e8b\u4ef6\u9501\u7684Python\u5185\u90e8\u5b9e\u73b0\uff0c\u9996\u5148\u662fEvent\u9501\u7684\u6784\u9020\u5668\u3002\u6784\u9020\u5668\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u6761\u4ef6\uff08Condition\uff09\u9501\uff0c\u6765\u4fdd\u62a4\u4e8b\u4ef6\u6807\u5fd7\uff08event flag\uff09,\u540c\u4e8b\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u5f53\u4e8b\u4ef6\u88ab\u8bbe\u7f6e\u65f6\u3002\n\n\nclass _Event(_Verbose):\n    def __init__(self, verbose=None):\n        _Verbose.__init__(self, verbose)\n        self.__cond = Condition(Lock())\n        self.__flag = False\n\n\n\n\n\u63a5\u4e0b\u6765\u662fset()\u65b9\u6cd5\uff0c\u5b83\u8bbe\u7f6e\u4e8b\u4ef6\u6807\u5fd7\u4e3aTrue\uff0c\u5e76\u4e14\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u3002\u6761\u4ef6\u9501\u5bf9\u8c61\u4fdd\u62a4\u7a0b\u5e8f\u4fee\u6539\u4e8b\u4ef6\u6807\u5fd7\u72b6\u6001\u7684\u5173\u952e\u90e8\u5206\u3002\n\n\ndef set(self):\n    self.__cond.acquire()\n    try:\n        self.__flag = True\n        self.__cond.notify_all()\n    finally:\n        self.__cond.release()\n\n\n\n\n\u800cclear()\u65b9\u6cd5\u6b63\u597d\u76f8\u53cd\uff0c\u5b83\u8bbe\u7f6e\u65f6\u95f4\u6807\u5fd7\u4e3aFalse\u3002\n\n\ndef clear(self):\n    self.__cond.acquire()\n    try:\n        self.__flag = False\n    finally:\n        self.__cond.release()\n\n\n\n\n\u6700\u540e\uff0cwait()\u65b9\u6cd5\u5c06\u963b\u585e\u76f4\u5230\u8c03\u7528\u4e86set()\u65b9\u6cd5\uff0c\u5f53\u4e8b\u4ef6\u6807\u5fd7\u4e3aTrue\u65f6\uff0cwait()\u65b9\u6cd5\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002\n\n\ndef wait(self, timeout=None):\n    self.__cond.acquire()\n    try:\n        if not self.__flag: #\u5982\u679cflag\u4e0d\u4e3a\u771f\n            self.__cond.wait(timeout)\n    finally:\n        self.__cond.release()\n\n\n\n\n\u961f\u5217\uff08Queue\uff09\n\n\n\u961f\u5217\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7ebf\u7a0b\u540c\u6b65\u673a\u5236\uff0c\u4f7f\u7528\u961f\u5217\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u9501\uff0c\u961f\u5217\u4f1a\u4e3a\u6211\u4eec\u5904\u7406\u9501\u7684\u95ee\u9898\u3002 \u961f\u5217(Queue)\u6709\u4ee5\u4e0b4\u4e2a\u7528\u6237\u611f\u5174\u8da3\u7684\u65b9\u6cd5\uff1a\n\n\n\n\nput: \u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9879\uff1b\n\n\nget: \u4ece\u961f\u5217\u4e2d\u5220\u9664\u5e76\u8fd4\u56de\u4e00\u4e2a\u9879\uff1b\n\n\ntask_done: \u5f53\u67d0\u4e00\u9879\u4efb\u52a1\u5b8c\u6210\u65f6\u8c03\u7528\uff1b\n\n\njoin: \u963b\u585e\u77e5\u9053\u6240\u6709\u7684\u9879\u76ee\u90fd\u88ab\u5904\u7406\u5b8c\n\u4e0b\u9762\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u7684\u4f8b\u5b50\u8f6c\u6362\u6210\u4f7f\u7528\u961f\u5217\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728threads/queue.py\u4e2d\u627e\u5230\u3002\n\n\n\n\n\u9996\u5148\u662f\u751f\u4ea7\u8005\u7c7b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6574\u6570\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u961f\u5217\u5c31\u53ef\u4ee5\u5b58\u50a8\u751f\u6210\u7684\u6574\u6570\u3002\u751f\u4ea7\u8005\u7ebf\u7a0b\u5728\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\u751f\u6210\u6574\u6570\u5e76\u5c06\u751f\u6210\u7684\u6574\u6570\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u3002\n\n\nimport time\nimport threading\nimport random\nimport Queue\n\nclass Producer(threading.Thread):\n    \n\n    Produces random integers to a list\n    \n\n\n    def __init__(self, queue):\n        \n\n        Constructor.\n        @param integers list of integers\n        @param queue queue synchronization object\n        \n\n        threading.Thread.__init__(self)\n        self.queue = queue\n\n    def run(self):\n        \n\n        Thread run method. Append random integers to the integers\n        list at random time.\n        \n\n        while True:\n            integer = random.randint(0, 256)\n            self.queue.put(integer)\n            print '%d put to queue by %s' % (integer, self.name)\n            time.sleep(1)\n\nclass Consumer(threading.Thread):\n    \n\n    Consumes random integers from a list\n    \n\n\n    def __init__(self, queue):\n        \n\n        Constructor.\n        @param integers list of integers\n        @param queue queue synchronization object\n        \n\n        threading.Thread.__init__(self)\n        self.queue = queue\n\n    def run(self):\n        \n\n        Thread run method. Consumes integers from list\n        \n\n        while True:\n            integer = self.queue.get()\n            print '%d popped from list by %s' % (integer, self.name)\n            self.queue.task_done()\n\ndef main():\n    integers = []\n    queue = Queue.Queue()\n    t1 = Producer(queue)\n    t2 = Consumer(queue)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\u961f\u5217\u540c\u6b65\u7684\u6700\u5927\u597d\u5904\u5c31\u662f\u961f\u5217\u5e2e\u6211\u4eec\u5904\u7406\u4e86\u9501\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u53bb\u770b\u770b\u5728Python\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u961f\u5217\u540c\u6b65\u673a\u5236\u7684\u3002\n\n\n\u961f\u5217\uff08Queue\uff09\u6784\u9020\u5668\u521b\u5efa\u4e00\u4e2a\u9501\uff0c\u4fdd\u62a4\u961f\u5217\u5143\u7d20\u7684\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e9b\u6761\u4ef6\u9501\u5bf9\u8c61\u5904\u7406\u961f\u5217\u4e8b\u4ef6\uff0c\u6bd4\u5982\u961f\u5217\u4e0d\u7a7a\u4e8b\u4ef6\uff08\u524a\u9664get()\u7684\u963b\u585e\uff09\uff0c\u961f\u5217\u4e0d\u6ee1\u4e8b\u4ef6\uff08\u524a\u9664put()\u7684\u963b\u585e\uff09\u548c\u6240\u6709\u9879\u76ee\u90fd\u88ab\u5904\u7406\u5b8c\u4e8b\u4ef6\uff08\u524a\u9664join()\u7684\u963b\u585e\uff09\u3002\n\n\nclass Queue:\n    def __init__(self, maxsize=0):\n        ...\n        self.mutex = threading.Lock()\n        self.not_empty = threading.Condition(self.mutex)\n        self.not_full = threading.Condition(self.mutex)\n        self.all_tasks_done = threading.Condition(self.mutex)\n        self.unfinished_tasks = 0\n\n\n\n\nput()\u65b9\u6cd5\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9879\uff0c\u6216\u8005\u963b\u585e\u5982\u679c\u961f\u5217\u5df2\u6ee1\u3002\u8fd9\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u5b83\u5524\u9192\u963b\u585e\u5728get()\u65b9\u6cd5\u4e2d\u7684\u7ebf\u7a0b\u3002\u66f4\u591a\u5173\u4e8eCondition\u9501\u7684\u5185\u5bb9\u8bf7\u67e5\u770b\u4e0a\u9762\u7684\u8bb2\u89e3\u3002\n\n\ndef put(self, item, block=True, timeout=None):\n    ...\n    self.not_full.acquire()\n    try:\n        if self.maxsize \n 0:\n            ...\n            elif timeout is None:\n                while self._qsize() == self.maxsize:\n                    self.not_full.wait()\n        self._put(item)\n        self.unfinished_tasks += 1\n        self.not_empty.notify()\n    finally:\n        self.not_full.release()\n\n\n\n\nget()\u65b9\u6cd5\u4ece\u961f\u5217\u4e2d\u83b7\u5f97\u5e76\u5220\u9664\u4e00\u4e2a\u9879\uff0c\u6216\u8005\u963b\u585e\u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\u3002\u8fd9\u65f6\u961f\u5217\u4e0d\u6ee1\uff0c\u4ed6\u5524\u9192\u963b\u585e\u5728put()\u65b9\u6cd5\u4e2d\u7684\u7ebf\u7a0b\u3002\n\n\ndef get(self, block=True, timeout=None):\n    ...\n    self.not_empty.acquire()\n    try:\n        ...\n        elif timeout is None:\n            while not self._qsize():\n                self.not_empty.wait()\n        item = self._get()\n        self.not_full.notify()\n        return item\n    finally:\n        self.not_empty.release()\n\n\n\n\n\u5f53\u8c03\u7528task_done()\u65b9\u6cd5\u65f6\uff0c\u672a\u5b8c\u6210\u4efb\u52a1\u7684\u6570\u91cf\u51cf1\u3002\u5982\u679c\u672a\u5b8c\u6210\u4efb\u52a1\u7684\u6570\u91cf\u4e3a0\uff0c\u7ebf\u7a0b\u7b49\u5f85\u961f\u5217\u5b8c\u6210join()\u65b9\u6cd5\u3002\n\n\ndef task_done(self):\n    self.all_tasks_done.acquire()\n    try:\n        unfinished = self.unfinished_tasks - 1\n        if unfinished \n= 0:\n            if unfinished \n 0:\n                raise ValueError('task_done() called too many times')\n            self.all_tasks_done.notify_all()\n        self.unfinished_tasks = unfinished\n    finally:\n        self.all_tasks_done.release()\n\ndef join(self):\n    self.all_tasks_done.acquire()\n    try:\n        while self.unfinished_tasks:\n            self.all_tasks_done.wait()\n    finally:\n        self.all_tasks_done.release()\n\n\n\n\n\n\nThreadLocal\n\n\nimport threading\n\n# \u521b\u5efa\u5168\u5c40ThreadLocal\u5bf9\u8c61:\nlocal_school = threading.local()\n\ndef process_student():\n    # \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5173\u8054\u7684student:\n    std = local_school.student\n    print('Hello, %s (in %s)' % (std, threading.current_thread().name))\n\ndef process_thread(name):\n    # \u7ed1\u5b9aThreadLocal\u7684student:\n    local_school.student = name\n    process_student()\n\nt1 = threading.Thread(target= process_thread, args=('Alice',), name='Thread-A')\nt2 = threading.Thread(target= process_thread, args=('Bob',), name='Thread-B')\nt1.start()\nt2.start()\nt1.join()\nt2.join()\n'''\nHello, Alice (in Thread-A)\nHello, Bob (in Thread-B)\n'''\n\n\n\n\n\u5168\u5c40\u53d8\u91cflocal_school\u5c31\u662f\u4e00\u4e2aThreadLocal\u5bf9\u8c61\uff0c\u6bcf\u4e2aThread\u5bf9\u5b83\u90fd\u53ef\u4ee5\u8bfb\u5199student\u5c5e\u6027\uff0c\u4f46\u4e92\u4e0d\u5f71\u54cd\u3002\u4f60\u53ef\u4ee5\u628alocal_school\u770b\u6210\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u6bcf\u4e2a\u5c5e\u6027\u5982local_school.student\u90fd\u662f\u7ebf\u7a0b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u53ef\u4ee5\u4efb\u610f\u8bfb\u5199\u800c\u4e92\u4e0d\u5e72\u6270\uff0c\u4e5f\u4e0d\u7528\u7ba1\u7406\u9501\u7684\u95ee\u9898\uff0cThreadLocal\u5185\u90e8\u4f1a\u5904\u7406\n\n\n\u591a\u6838cpu\n\n\n\u5982\u679c\u4f60\u4e0d\u5e78\u62e5\u6709\u4e00\u4e2a\u591a\u6838CPU\uff0c\u4f60\u80af\u5b9a\u5728\u60f3\uff0c\u591a\u6838\u5e94\u8be5\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u3002\n\n\n\u5982\u679c\u5199\u4e00\u4e2a\u6b7b\u5faa\u73af\u7684\u8bdd\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\n\n\n\u6253\u5f00Mac OS X\u7684Activity Monitor\uff0c\u6216\u8005Windows\u7684Task Manager\uff0c\u90fd\u53ef\u4ee5\u76d1\u63a7\u67d0\u4e2a\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u76d1\u63a7\u5230\u4e00\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\u4f1a100%\u5360\u7528\u4e00\u4e2aCPU\u3002\n\n\n\u5982\u679c\u6709\u4e24\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\uff0c\u5728\u591a\u6838CPU\u4e2d\uff0c\u53ef\u4ee5\u76d1\u63a7\u5230\u4f1a\u5360\u7528200%\u7684CPU\uff0c\u4e5f\u5c31\u662f\u5360\u7528\u4e24\u4e2aCPU\u6838\u5fc3\u3002\n\n\n\u8981\u60f3\u628aN\u6838CPU\u7684\u6838\u5fc3\u5168\u90e8\u8dd1\u6ee1\uff0c\u5c31\u5fc5\u987b\u542f\u52a8N\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\u3002\n\n\n\u8bd5\u8bd5\u7528Python\u5199\u4e2a\u6b7b\u5faa\u73af\uff1a\n\n\nimport threading, multiprocessing\n\ndef loop():\n    x = 0\n    while True:\n        x = x ^ 1\n\nfor i in range(multiprocessing.cpu_count()):\n    t = threading.Thread(target=loop)\n    t.start()\n\n\n\n\n\u542f\u52a8\u4e0eCPU\u6838\u5fc3\u6570\u91cf\u76f8\u540c\u7684N\u4e2a\u7ebf\u7a0b\uff0c\u57284\u6838CPU\u4e0a\u53ef\u4ee5\u76d1\u63a7\u5230CPU\u5360\u7528\u7387\u4ec5\u6709102%\uff0c\u4e5f\u5c31\u662f\u4ec5\u4f7f\u7528\u4e86\u4e00\u6838\u3002\n\n\n\u4f46\u662f\u7528C\u3001C++\u6216Java\u6765\u6539\u5199\u76f8\u540c\u7684\u6b7b\u5faa\u73af\uff0c\u76f4\u63a5\u53ef\u4ee5\u628a\u5168\u90e8\u6838\u5fc3\u8dd1\u6ee1\uff0c4\u6838\u5c31\u8dd1\u5230400%\uff0c8\u6838\u5c31\u8dd1\u5230800%\uff0c\u4e3a\u4ec0\u4e48Python\u4e0d\u884c\u5462\uff1f\n\n\n\u56e0\u4e3aPython\u7684\u7ebf\u7a0b\u867d\u7136\u662f\u771f\u6b63\u7684\u7ebf\u7a0b\uff0c\u4f46\u89e3\u91ca\u5668\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u6709\u4e00\u4e2aGIL\u9501\uff1aGlobal Interpreter Lock\uff0c\u4efb\u4f55Python\u7ebf\u7a0b\u6267\u884c\u524d\uff0c\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u8fd9\u4e2aGIL\u5168\u5c40\u9501\u5b9e\u9645\u4e0a\u628a\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u4ee3\u7801\u90fd\u7ed9\u4e0a\u4e86\u9501\uff0c\u6240\u4ee5\uff0c\u591a\u7ebf\u7a0b\u5728Python\u4e2d\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u5373\u4f7f100\u4e2a\u7ebf\u7a0b\u8dd1\u5728100\u6838CPU\u4e0a\uff0c\u4e5f\u53ea\u80fd\u7528\u52301\u4e2a\u6838\u3002\n\n\nGIL\u662fPython\u89e3\u91ca\u5668\u8bbe\u8ba1\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u901a\u5e38\u6211\u4eec\u7528\u7684\u89e3\u91ca\u5668\u662f\u5b98\u65b9\u5b9e\u73b0\u7684CPython\uff0c\u8981\u771f\u6b63\u5229\u7528\u591a\u6838\uff0c\u9664\u975e\u91cd\u5199\u4e00\u4e2a\u4e0d\u5e26GIL\u7684\u89e3\u91ca\u5668\u3002\n\n\n\u6240\u4ee5\uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u4f46\u4e0d\u8981\u6307\u671b\u80fd\u6709\u6548\u5229\u7528\u591a\u6838\u3002\u5982\u679c\u4e00\u5b9a\u8981\u901a\u8fc7\u591a\u7ebf\u7a0b\u5229\u7528\u591a\u6838\uff0c\u90a3\u53ea\u80fd\u901a\u8fc7C\u6269\u5c55\u6765\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u8fd9\u6837\u5c31\u5931\u53bb\u4e86Python\u7b80\u5355\u6613\u7528\u7684\u7279\u70b9\u3002\n\n\n\u4e0d\u8fc7\uff0c\u4e5f\u4e0d\u7528\u8fc7\u4e8e\u62c5\u5fc3\uff0cPython\u867d\u7136\u4e0d\u80fd\u5229\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\u3002\u591a\u4e2aPython\u8fdb\u7a0b\u6709\u5404\u81ea\u72ec\u7acb\u7684GIL\u9501\uff0c\u4e92\u4e0d\u5f71\u54cd\n\n\n\u8ba1\u7b97\u5bc6\u96c6\u578b vs. IO\u5bc6\u96c6\u578b\n\n\n\u662f\u5426\u91c7\u7528\u591a\u4efb\u52a1\u7684\u7b2c\u4e8c\u4e2a\u8003\u8651\u662f\u4efb\u52a1\u7684\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u4e3a\u8ba1\u7b97\u5bc6\u96c6\u578b\u548cIO\u5bc6\u96c6\u578b\u3002\n\n\n\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u662f\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8ba1\u7b97\uff0c\u6d88\u8017CPU\u8d44\u6e90\uff0c\u6bd4\u5982\u8ba1\u7b97\u5706\u5468\u7387\u3001\u5bf9\u89c6\u9891\u8fdb\u884c\u9ad8\u6e05\u89e3\u7801\u7b49\u7b49\uff0c\u5168\u9760CPU\u7684\u8fd0\u7b97\u80fd\u529b\u3002\u8fd9\u79cd\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u4efb\u52a1\u8d8a\u591a\uff0c\u82b1\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\u5c31\u8d8a\u591a\uff0cCPU\u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\uff0c\u6240\u4ee5\uff0c\u8981\u6700\u9ad8\u6548\u5730\u5229\u7528CPU\uff0c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\u7684\u6570\u91cf\u5e94\u5f53\u7b49\u4e8eCPU\u7684\u6838\u5fc3\u6570\u3002\n\n\n\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7531\u4e8e\u4e3b\u8981\u6d88\u8017CPU\u8d44\u6e90\uff0c\u56e0\u6b64\uff0c\u4ee3\u7801\u8fd0\u884c\u6548\u7387\u81f3\u5173\u91cd\u8981\u3002Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u8fd0\u884c\u6548\u7387\u5f88\u4f4e\uff0c\u5b8c\u5168\u4e0d\u9002\u5408\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6700\u597d\u7528C\u8bed\u8a00\u7f16\u5199\u3002\n\n\n\u7b2c\u4e8c\u79cd\u4efb\u52a1\u7684\u7c7b\u578b\u662fIO\u5bc6\u96c6\u578b\uff0c\u6d89\u53ca\u5230\u7f51\u7edc\u3001\u78c1\u76d8IO\u7684\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662fCPU\u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3aIO\u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8eCPU\u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4efb\u52a1\u8d8a\u591a\uff0cCPU\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002\u5e38\u89c1\u7684\u5927\u90e8\u5206\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6bd4\u5982Web\u5e94\u7528\u3002\n\n\nIO\u5bc6\u96c6\u578b\u4efb\u52a1\u6267\u884c\u671f\u95f4\uff0c99%\u7684\u65f6\u95f4\u90fd\u82b1\u5728IO\u4e0a\uff0c\u82b1\u5728CPU\u4e0a\u7684\u65f6\u95f4\u5f88\u5c11\uff0c\u56e0\u6b64\uff0c\u7528\u8fd0\u884c\u901f\u5ea6\u6781\u5feb\u7684C\u8bed\u8a00\u66ff\u6362\u7528Python\u8fd9\u6837\u8fd0\u884c\u901f\u5ea6\u6781\u4f4e\u7684\u811a\u672c\u8bed\u8a00\uff0c\u5b8c\u5168\u65e0\u6cd5\u63d0\u5347\u8fd0\u884c\u6548\u7387\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6700\u5408\u9002\u7684\u8bed\u8a00\u5c31\u662f\u5f00\u53d1\u6548\u7387\u6700\u9ad8\uff08\u4ee3\u7801\u91cf\u6700\u5c11\uff09\u7684\u8bed\u8a00\uff0c\u811a\u672c\u8bed\u8a00\u662f\u9996\u9009\uff0cC\u8bed\u8a00\u6700\u5dee\u3002\n\n\n\u534f\u7a0b\n\n\n\u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u8f7b\u677e\u521b\u5efa\u6570\u5341\u4e07\u8ba1\u7684\u534f\u7a0b\u3002\u4ece\u7ef4\u57fa\u767e\u79d1\u4e0a\u770b\uff0c\u4eceKnuth\u8001\u7237\u5b50\u7684\u57fa\u672c\u7b97\u6cd5\u5377\u4e0a\u770b\u201c\u5b50\u7a0b\u5e8f\u5176\u5b9e\u662f\u534f\u7a0b\u7684\u7279\u4f8b\u201d\u3002\u5b50\u7a0b\u5e8f\u662f\u4ec0\u4e48\uff1f\u5b50\u7a0b\u5e8f\uff08Subroutine, procedure, function, routine, method, subprogram\uff09\uff0c\u5c31\u662f\u51fd\u6570\u561b\uff01\u6240\u4ee5\u534f\u7a0b\u4e5f\u6ca1\u4ec0\u4e48\u4e86\u4e0d\u8d77\u7684\uff0c\u5c31\u662f\u66f4\u4e00\u822c\u610f\u4e49\u7684\u7a0b\u5e8f\u7ec4\u4ef6\uff0c\u90a3\u4f60\u5185\u5b58\u7a7a\u95f4\u591f\u5927\uff0c\u521b\u5efa\u591a\u5c11\u4e2a\u51fd\u6570\u8fd8\u4e0d\u662f\u968f\u4f60\u5417\uff1f\n\n\n\u534f\u7a0b\u53ef\u4ee5\u901a\u8fc7yield\u6765\u8c03\u7528\u5176\u5b83\u534f\u7a0b\u3002\u901a\u8fc7yield\u65b9\u5f0f\u8f6c\u79fb\u6267\u884c\u6743\u7684\u534f\u7a0b\u4e4b\u95f4\u4e0d\u662f\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u7684\u5173\u7cfb\uff0c\u800c\u662f\u5f7c\u6b64\u5bf9\u79f0\u3001\u5e73\u7b49\u7684\u3002\u534f\u7a0b\u7684\u8d77\u59cb\u5904\u662f\u7b2c\u4e00\u4e2a\u5165\u53e3\u70b9\uff0c\u5728\u534f\u7a0b\u91cc\uff0c\u8fd4\u56de\u70b9\u4e4b\u540e\u662f\u63a5\u4e0b\u6765\u7684\u5165\u53e3\u70b9\u3002\u5b50\u4f8b\u7a0b\u7684\u751f\u547d\u671f\u9075\u5faa\u540e\u8fdb\u5148\u51fa\uff08\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684\u5b50\u4f8b\u7a0b\u6700\u5148\u8fd4\u56de\uff09\uff1b\u76f8\u53cd\uff0c\u534f\u7a0b\u7684\u751f\u547d\u671f\u5b8c\u5168\u7531\u4ed6\u4eec\u7684\u4f7f\u7528\u7684\u9700\u8981\u51b3\u5b9a\u3002\n\n\n\u7ebf\u7a0b\u548c\u534f\u7a0b\u7684\u533a\u522b\n\n\n\u4e00\u65e6\u521b\u5efa\u5b8c\u7ebf\u7a0b\uff0c\u4f60\u5c31\u65e0\u6cd5\u51b3\u5b9a\u4ed6\u4ec0\u4e48\u65f6\u5019\u83b7\u5f97\u65f6\u95f4\u7247\uff0c\u4ec0\u4e48\u65f6\u5019\u8ba9\u51fa\u65f6\u95f4\u7247\u4e86\uff0c\u4f60\u628a\u5b83\u4ea4\u7ed9\u4e86\u5185\u6838\u3002\u800c\u534f\u7a0b\u7f16\u5199\u8005\uff0c\u4e00\u662f\u53ef\u63a7\u7684\u5207\u6362\u65f6\u673a\uff0c\u4e8c\u662f\u5f88\u5c0f\u7684\u5207\u6362\u4ee3\u4ef7\u3002\u4ece\u64cd\u4f5c\u7cfb\u7edf\u6709\u6ca1\u6709\u8c03\u5ea6\u6743\u4e0a\u770b\uff0c\u534f\u7a0b\u5c31\u662f\u56e0\u4e3a\u4e0d\u9700\u8981\u8fdb\u884c\u5185\u6838\u6001\u7684\u5207\u6362\uff0c\u6240\u4ee5\u4f1a\u4f7f\u7528\u5b83\n\n\n\u4e3a\u4ec0\u4e48\u8981\u7528\u534f\u7a0b\n\n\n\n\n\u72b6\u6001\u673a:\u5728\u4e00\u4e2a\u5b50\u4f8b\u7a0b\u91cc\u5b9e\u73b0\u72b6\u6001\u673a\uff0c\u8fd9\u91cc\u72b6\u6001\u7531\u8be5\u8fc7\u7a0b\u5f53\u524d\u7684\u51fa\u53e3\uff0f\u5165\u53e3\u70b9\u786e\u5b9a\uff1b\u8fd9\u53ef\u4ee5\u4ea7\u751f\u53ef\u8bfb\u6027\u66f4\u9ad8\u7684\u4ee3\u7801\u3002\n\n\n\u89d2\u8272\u6a21\u578b:\u5e76\u884c\u7684\u89d2\u8272\u6a21\u578b\uff0c\u4f8b\u5982\u8ba1\u7b97\u673a\u6e38\u620f\u3002\u6bcf\u4e2a\u89d2\u8272\u6709\u81ea\u5df1\u7684\u8fc7\u7a0b\uff08\u8fd9\u53c8\u5728\u903b\u8f91\u4e0a\u5206\u79bb\u4e86\u4ee3\u7801\uff09\uff0c\u4f46\u4ed6\u4eec\u81ea\u613f\u5730\u5411\u987a\u5e8f\u6267\u884c\u5404\u89d2\u8272\u8fc7\u7a0b\u7684 \u4e2d\u592e\u8c03\u5ea6\u5668\u4ea4\u51fa\u63a7\u5236\uff08\u8fd9\u662f\u5408\u4f5c\u5f0f\u591a\u4efb\u52a1\u7684\u4e00\u79cd\u5f62\u5f0f\uff09\u3002\n\n\n\u4ea7\u751f\u5668:\u5b83\u6709\u52a9\u4e8e\u8f93\u5165\uff0f\u8f93\u51fa\u548c\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u901a\u7528\u904d\u5386\u3002\n\n\n\n\n\u7f16\u7a0b\u8bed\u8a00\u534f\u7a0b\u5b9e\u73b0\n\n\n\n\n\n\n\n\n\u8bed\u8a00/\u5e73\u53f0\n\n\n\u5b9e\u73b0\u7248\u672c\n\n\n\u534f\u7a0b\u540d\u79f0\n\n\n\u5907\u6ce8\n\n\n\n\n\n\n\n\n\n\nGoLang\n\n\n\u539f\u751f\u652f\u6301\n\n\ngoroutine\n\n\n\n\n\n\n\n\nErlang\n\n\n\u539f\u751f\u652f\u6301\n\n\nprocess\n\n\n\u51fd\u6570\u5f0f\u7f16\u7a0b\n\n\n\n\n\n\nScala\n\n\n\u539f\u751f\u652f\u6301\n\n\nactor\n\n\n\u51fd\u6570\u5f0f\u7f16\u7a0b\n\n\n\n\n\n\nPython\n\n\n2.5 \u7248\u672c\u540e\n\n\ncoroutine\n\n\n\u5b98\u65b9 Python\u4e0d\u5b8c\u5168\u5b9e\u73b0\uff0cStackless\n\n\n\n\n\n\nPerl\n\n\n6.0 \u7248\u672c\u540e\n\n\ncoroutine\n\n\n\n\n\n\n\n\nRuby\n\n\n1.9 \u7248\u672c\u540e\n\n\nfiber\n\n\n\n\n\n\n\n\nLua\n\n\n\u539f\u751f\u652f\u6301\n\n\ncoroutine\n\n\n\n\n\n\n\n\nC#\n\n\n.Net  2.0 \u7248\u672c\u540e\n\n\nfiber\n\n\n\n\n\n\n\n\n\n\nhttps://segmentfault.com/a/1190000001813992\n\n\nhttp://boolan.com/lecture/1000001045\n\n\nhttp://www.cnblogs.com/shenguanpu/archive/2013/05/05/3060616.html\n\n\nhttp://yoyzhou.github.io/blog/2013/02/28/python-threads-synchronization-locks/", 
            "title": "\u7ebf\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_1", 
            "text": "", 
            "title": "\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_2", 
            "text": "\u8fdb\u7a0b\u662f\u4e00\u79cd\u53e4\u8001\u800c\u5178\u578b\u7684\u4e0a\u4e0b\u6587\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8d44\u6e90\u53e5\u67c4\uff0c\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u4e0d\u53d1\u751f\u5e72\u6270\u3002  \u6bcf\u4e2a\u8fdb\u7a0b\u5728\u5185\u6838\u4e2d\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u63cf\u8ff0\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3002\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u5305\u542b\u4e86\u7cfb\u7edf\u7ba1\u7406\u8fdb\u7a0b\u6240\u9700\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u653e\u5728\u4e00\u4e2a\u53eb\u505a\u4efb\u52a1\u961f\u5217\u7684\u961f\u5217\u91cc\u9762\u3002\u5f53\u65b0\u5efa\u8fdb\u7a0b\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5206\u914d\u65b0\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff0c\u5e76\u4e14\u5206\u914d\u65b0\u7684\u5730\u5740\u7a7a\u95f4(\u548c\u7236\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u662f\u4e24\u8005\u540c\u65f6\u8fdb\u5165COW\u72b6\u6001)\u3002\u8fd9\u4e9b\u8fc7\u7a0b\u9700\u8981\u4e00\u5b9a\u7684\u5f00\u9500\u3002  \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u6982\u5ff5\u662f\u8fdb\u7a0b\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u91cd\u8981\u7684\u95ee\u9898\u662f\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002  \u8fdb\u7a0b\u662f\u201c\u7a0b\u5e8f\u6267\u884c\u7684\u4e00\u4e2a\u5b9e\u4f8b\u201d\uff0c\u62c5\u5f53\u5206\u914d\u7cfb\u7edf\u8d44\u6e90\u7684\u5b9e\u4f53\u3002\u8fdb\u7a0b\u521b\u5efa\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u5b8c\u6574\u7684\u72ec\u7acb\u5730\u5740\u7a7a\u95f4\u3002  \u8fdb\u7a0b\u5207\u6362\u53ea\u53d1\u751f\u5728\u5185\u6838\u6001\uff0c\u4e24\u6b65\uff1a   \u5207\u6362\u9875\u5168\u5c40\u76ee\u5f55\u4ee5\u5b89\u88c5\u4e00\u4e2a\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff1b  \u5207\u6362\u5185\u6838\u6001\u5806\u6808\u548c\u786c\u4ef6\u4e0a\u4e0b\u6587\u3002", 
            "title": "\u8fdb\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_3", 
            "text": "\u5ffd\u7565\u53bblinux\u5185\u6838\u590d\u6742\u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u628a\u8fdb\u7a0b\u72b6\u6001\u5f52\u7ed3\u4e3a\u4e09\u4e2a\u6700\u4e3b\u8981\u7684\u72b6\u6001\uff1a \u5c31\u7eea\u6001 \uff0c \u8fd0\u884c\u6001 \uff0c \u7761\u7720\u6001 \u3002\u8fd9\u5c31\u662f\u4efb\u4f55\u4e00\u672c\u7cfb\u7edf\u4e66\u4e0a\u90fd\u6709\u7684\u4e09\u6001\u8f6c\u6362\u56fe\u3002  \u5c31\u7eea\u548c\u6267\u884c\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\uff0c\u57fa\u672c\u8fd9\u5c31\u662f\u8c03\u5ea6\u7684\u8fc7\u7a0b\u3002\u800c\u5f53\u6267\u884c\u6001\u7a0b\u5e8f\u9700\u8981\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6(\u6700\u5178\u578b\u5c31\u662fIO)\u65f6\uff0c\u5c31\u4f1a\u9677\u5165\u7761\u7720\u6001\u3002\u800c\u6761\u4ef6\u8fbe\u6210\u540e\uff0c\u4e00\u822c\u4f1a\u81ea\u52a8\u8fdb\u5165\u5c31\u7eea\u3002", 
            "title": "\u8fdb\u7a0b\u72b6\u6001"
        }, 
        {
            "location": "/python/py_thread/#_4", 
            "text": "\u6307\u7684\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u7528\u8c03\u7528\u6808\u6765\u8868\u793a\u8fd9\u4e2a\u72b6\u6001\u2014\u2014\u6808\u8bb0\u8f7d\u4e86\u6bcf\u4e2a\u8c03\u7528\u5c42\u7ea7\u6267\u884c\u5230\u54ea\u91cc\uff0c\u8fd8\u6709\u6267\u884c\u65f6\u7684\u73af\u5883\u60c5\u51b5\u7b49\u6240\u6709\u6709\u5173\u7684\u4fe1\u606f", 
            "title": "\u4e0a\u4e0b\u6587"
        }, 
        {
            "location": "/python/py_thread/#_5", 
            "text": "\u5f53\u8fdb\u7a0b\u9700\u8981\u5728\u67d0\u4e2a\u6587\u4ef6\u53e5\u67c4\u4e0a\u505aIO\uff0c\u8fd9\u4e2afd\u53c8\u6ca1\u6709\u6570\u636e\u7ed9\u4ed6\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u751f\u963b\u585e\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u8bb0\u5f55XX\u8fdb\u7a0b\u963b\u585e\u5728\u4e86XX fd\u4e0a\uff0c\u7136\u540e\u5c06\u8fdb\u7a0b\u6807\u8bb0\u4e3a\u7761\u7720\u6001\uff0c\u5e76\u8c03\u5ea6\u51fa\u53bb\u3002\u5f53fd\u4e0a\u6709\u6570\u636e\u65f6(\u4f8b\u5982\u5bf9\u7aef\u53d1\u9001\u7684\u6570\u636e\u5230\u8fbe)\uff0c\u5c31\u4f1a\u5524\u9192\u963b\u585e\u5728fd\u4e0a\u7684\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u4f1a\u968f\u540e\u8fdb\u5165\u5c31\u7eea\u961f\u5217\uff0c\u7b49\u5f85\u5408\u9002\u7684\u65f6\u95f4\u88ab\u8c03\u5ea6\u3002  \u963b\u585e\u540e\u7684\u5524\u9192\u4e5f\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u8bdd\u9898\u3002\u5f53\u591a\u4e2a\u4e0a\u4e0b\u6587\u963b\u585e\u5728\u4e00\u4e2afd\u4e0a(\u867d\u7136\u4e0d\u591a\u89c1\uff0c\u4f46\u662f\u540e\u9762\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u4f8b\u5b50)\uff0c\u800c\u4e14fd\u5c31\u7eea\u65f6\uff0c\u5e94\u8be5\u5524\u9192\u591a\u5c11\u4e2a\u4e0a\u4e0b\u6587\u5462\uff1f\u4f20\u7edf\u4e0a\u5e94\u5f53\u5524\u9192\u6240\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u5982\u679c\u4ec5\u5524\u9192\u4e00\u4e2a\uff0c\u800c\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u53c8\u4e0d\u80fd\u6d88\u8d39\u6240\u6709\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u4f7f\u5f97\u5176\u4ed6\u4e0a\u4e0b\u6587\u5904\u4e8e\u65e0\u8c13\u7684\u6b7b\u9501\u4e2d\u3002  \u4f46\u662f\u6709\u4e2a\u8457\u540d\u7684\u4f8b\u5b50\u2014\u2014accept\uff0c\u4e5f\u662f\u4f7f\u7528\u8bfb\u5c31\u7eea\u6765\u8868\u793a\u6536\u5230\u7684\u3002\u5982\u679c\u8bd5\u56fe\u7528\u591a\u4e2a\u7ebf\u7a0b\u6765accept\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5f53\u6709\u65b0\u8fde\u63a5\u65f6\uff0c\u6240\u6709\u4e0a\u4e0b\u6587\u90fd\u4f1a\u5c31\u7eea\uff0c\u4f46\u662f\u53ea\u6709\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u9645\u83b7\u5f97fd\uff0c\u5176\u4ed6\u7684\u88ab\u8c03\u5ea6\u540e\u53c8\u7acb\u523b\u963b\u585e\u3002\u8fd9\u5c31\u662f\u60ca\u7fa4\u95ee\u9898thundering herd problem\u3002  \u73b0\u4ee3linux\u5185\u6838\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u65b9\u6cd5\u60ca\u4eba\u7684\u7b80\u5355\u2014\u2014accept\u65b9\u6cd5\u52a0\u9501\u3002", 
            "title": "\u963b\u585e"
        }, 
        {
            "location": "/python/py_thread/#_6", 
            "text": "\u5728\u8fd9\u91cc\u5728\u591a\u8bb2\u4e00\u4e9b,\u5e76\u53d1\u548c\u5e76\u884c\u662f\u5f97\u4ece\u7269\u7406\u786c\u4ef6\u65b9\u9762\u6765\u8003\u8651.\u5728\u4ee5\u524d\u7535\u8111\u662f\u5355\u6838\u7684\u65f6\u5019,\u4e00\u4e2acup\u6838\u5fc3\u53ea\u80fd\u8fdb\u884c\u5355\u4e2a\u4efb\u52a1,\u5c06\u5355\u4e2acup\u8fd0\u884c\u65f6\u95f4\u5206\u914d\u7ed9\u591a\u4e2a\u4efb\u52a1\u8fd0\u884c,\u8fd9\u5c31\u662f\u5e76\u53d1,\u8ba9\u4f60\u770b\u8d77\u6765\u50cf\u662f\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u6267\u884c,\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u4efb\u52a1\u4e00\u4e2a\u4efb\u52a1\u7684\u6267\u884c.  \u800c\u5e76\u884c,\u662f\u5728\u591a\u6838cup\u7535\u8111\u4e0a,\u4e3a\u6bcf\u4e00\u4e2acup\u6838\u5fc3\u5206\u914d\u4e00\u4e2a\u4efb\u52a1,\u662f\u771f\u6b63\u7684\u591a\u4efb\u52a1\u6267\u884c.", 
            "title": "\u5e76\u53d1\u548c\u5e76\u884c"
        }, 
        {
            "location": "/python/py_thread/#_7", 
            "text": "\u540c\u6b65 \u540c\u6b65\u5462.\u5c31\u662f\u7a0b\u5e8f\u4e00\u4e2a\u8bed\u53e5\u4e00\u4e2a\u8bed\u53e5\u987a\u5e8f\u6267\u884c,\u5f88\u7b26\u5408\u4eba\u5f97\u601d\u7ef4,\u662f\u7ebf\u6027\u6267\u884c.  \u5f02\u6b65  \u5f02\u6b65\u7684\u7279\u6027\u5c31\u662f\u6267\u884c\u8d77\u6765\u4e0d\u4f1a\u963b\u585e  \u56de\u8c03  \u56de\u8c03\u662f\u5728\u7b49\u5f85\u67d0\u4e00\u4ef6\u4e8b\u60c5\u5b8c\u6210\u4e4b\u540e,\u5728\u8fd0\u884c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570", 
            "title": "\u540c\u6b65,\u5f02\u6b65,\u56de\u8c03"
        }, 
        {
            "location": "/python/py_thread/#python", 
            "text": "", 
            "title": "python\u8fdb\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#multiprocessing", 
            "text": "from multiprocessing import Process\nimport os\n\n# \u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\ndef run_proc(name):\n    print('Run child process %s (%s)...' % (name, os.getpid()))\n\nif __name__=='__main__':\n    print('Parent process %s.' % os.getpid())\n    p = Process(target=run_proc, args=('test',))\n    print('Child process will start.')\n    p.start()\n    p.join()\n    print('Child process end.')\n\n'''\nParent process 928.\nProcess will start.\nRun child process test (929)...\nProcess end.\n'''", 
            "title": "multiprocessing"
        }, 
        {
            "location": "/python/py_thread/#pool", 
            "text": "from multiprocessing import Pool\nimport os, time, random\n\ndef long_time_task(name):\n    print('Run task %s (%s)...' % (name, os.getpid()))\n    start = time.time()\n    time.sleep(random.random() * 3)\n    end = time.time()\n    print('Task %s runs %0.2f seconds.' % (name, (end - start)))\n\nif __name__=='__main__':\n    print('Parent process %s.' % os.getpid())\n    p = Pool(4)\n    for i in range(5):\n        p.apply_async(long_time_task, args=(i,))\n    print('Waiting for all subprocesses done...')\n    p.close()\n    p.join()\n    print('All subprocesses done.')\n\n'''\nParent process 669.\nWaiting for all subprocesses done...\nRun task 0 (671)...\nRun task 1 (672)...\nRun task 2 (673)...\nRun task 3 (674)...\nTask 2 runs 0.14 seconds.\nRun task 4 (673)...\nTask 1 runs 0.27 seconds.\nTask 3 runs 0.86 seconds.\nTask 0 runs 1.41 seconds.\nTask 4 runs 1.91 seconds.\nAll subprocesses done.\n'''", 
            "title": "\u8fdb\u7a0b\u6c60(Pool)"
        }, 
        {
            "location": "/python/py_thread/#subprocess", 
            "text": "\u6211\u4eec\u90fd\u662f\u5728\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u3002\u50cfLinux\u8fdb\u7a0b\u90a3\u6837\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5fork\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u8ba9\u8fd9\u4e2a\u5b50\u8fdb\u7a0bexec\u53e6\u5916\u4e00\u4e2a\u7a0b\u5e8f\u3002\u5728Python\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684subprocess\u5305\u6765fork\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u8fd0\u884c\u4e00\u4e2a\u5916\u90e8\u7684\u7a0b\u5e8f os.fork \u4e5f\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u8f7b\u677e\u521b\u5efa\u5b50\u8fdb\u7a0b  import subprocess\n\nprint('$ nslookup www.python.org')\nr = subprocess.call(['nslookup', 'www.python.org'])\nprint('Exit code:', r)", 
            "title": "\u5b50\u8fdb\u7a0b subprocess"
        }, 
        {
            "location": "/python/py_thread/#_8", 
            "text": "Queue  from multiprocessing import Process, Queue\nimport os, time, random\n\n# \u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\ndef write(q):\n    print('Process to write: %s' % os.getpid())\n    for value in ['A', 'B', 'C']:\n        print('Put %s to queue...' % value)\n        q.put(value)\n        time.sleep(random.random())\n\n# \u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\ndef read(q):\n    print('Process to read: %s' % os.getpid())\n    while True:\n        value = q.get(True)\n        print('Get %s from queue.' % value)\n\nif __name__=='__main__':\n    # \u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1a\n    q = Queue()\n    pw = Process(target=write, args=(q,))\n    pr = Process(target=read, args=(q,))\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpw\uff0c\u5199\u5165:\n    pw.start()\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6:\n    pr.start()\n    # \u7b49\u5f85pw\u7ed3\u675f:\n    pw.join()\n    # pr\u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62:\n    pr.terminate()\n'''\nProcess to write: 50563\nPut A to queue...\nProcess to read: 50564\nGet A from queue.\nPut B to queue...\nGet B from queue.\nPut C to queue...\nGet C from queue.\n'''  \u5728Unix/Linux\u4e0b\uff0cmultiprocessing\u6a21\u5757\u5c01\u88c5\u4e86fork()\u8c03\u7528\uff0c\u4f7f\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8fork()\u7684\u7ec6\u8282\u3002\u7531\u4e8eWindows\u6ca1\u6709fork\u8c03\u7528\uff0c\u56e0\u6b64\uff0cmultiprocessing\u9700\u8981\u201c\u6a21\u62df\u201d\u51fafork\u7684\u6548\u679c\uff0c\u7236\u8fdb\u7a0b\u6240\u6709Python\u5bf9\u8c61\u90fd\u5fc5\u987b\u901a\u8fc7pickle\u5e8f\u5217\u5316\u518d\u4f20\u5230\u5b50\u8fdb\u7a0b\u53bb\uff0c\u6240\u6709\uff0c\u5982\u679cmultiprocessing\u5728Windows\u4e0b\u8c03\u7528\u5931\u8d25\u4e86\uff0c\u8981\u5148\u8003\u8651\u662f\u4e0d\u662fpickle\u5931\u8d25\u4e86", 
            "title": "\u8fdb\u7a0b\u95f4\u901a\u4fe1"
        }, 
        {
            "location": "/python/py_thread/#_9", 
            "text": "Python\u7684multiprocessing\u6a21\u5757\u4e0d\u4f46\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u5176\u4e2dmanagers\u5b50\u6a21\u5757\u8fd8\u652f\u6301\u628a\u591a\u8fdb\u7a0b\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u4e0a\u3002\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u53ef\u4ee5\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5c06\u4efb\u52a1\u5206\u5e03\u5230\u5176\u4ed6\u591a\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u4f9d\u9760\u7f51\u7edc\u901a\u4fe1\u3002\u7531\u4e8emanagers\u6a21\u5757\u5c01\u88c5\u5f88\u597d\uff0c\u4e0d\u5fc5\u4e86\u89e3\u7f51\u7edc\u901a\u4fe1\u7684\u7ec6\u8282\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7f16\u5199\u5206\u5e03\u5f0f\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u8fc7Queue\u901a\u4fe1\u7684\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u73b0\u5728\uff0c\u7531\u4e8e\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u4efb\u52a1\u7e41\u91cd\uff0c\u5e0c\u671b\u628a\u53d1\u9001\u4efb\u52a1\u7684\u8fdb\u7a0b\u548c\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u5206\u5e03\u5230\u4e24\u53f0\u673a\u5668\u4e0a\u3002\u600e\u4e48\u7528\u5206\u5e03\u5f0f\u8fdb\u7a0b\u5b9e\u73b0\uff1f  \u539f\u6709\u7684Queue\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\uff0c\u4f46\u662f\uff0c\u901a\u8fc7managers\u6a21\u5757\u628aQueue\u901a\u8fc7\u7f51\u7edc\u66b4\u9732\u51fa\u53bb\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u4ed6\u673a\u5668\u7684\u8fdb\u7a0b\u8bbf\u95eeQueue\u4e86\u3002  \u6211\u4eec\u5148\u770b\u670d\u52a1\u8fdb\u7a0b\uff0c\u670d\u52a1\u8fdb\u7a0b\u8d1f\u8d23\u542f\u52a8Queue\uff0c\u628aQueue\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a\uff0c\u7136\u540e\u5f80Queue\u91cc\u9762\u5199\u5165\u4efb\u52a1  # task_master.py\n\nimport random, time, queue\nfrom multiprocessing.managers import BaseManager\n\n# \u53d1\u9001\u4efb\u52a1\u7684\u961f\u5217:\ntask_queue = queue.Queue()\n# \u63a5\u6536\u7ed3\u679c\u7684\u961f\u5217:\nresult_queue = queue.Queue()\n\n# \u4eceBaseManager\u7ee7\u627f\u7684QueueManager:\nclass QueueManager(BaseManager):\n    pass\n\n# \u628a\u4e24\u4e2aQueue\u90fd\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a, callable\u53c2\u6570\u5173\u8054\u4e86Queue\u5bf9\u8c61:\nQueueManager.register('get_task_queue', callable=lambda: task_queue)\nQueueManager.register('get_result_queue', callable=lambda: result_queue)\n# \u7ed1\u5b9a\u7aef\u53e35000, \u8bbe\u7f6e\u9a8c\u8bc1\u7801'abc':\nmanager = QueueManager(address=('', 5000), authkey=b'abc')\n# \u542f\u52a8Queue:\nmanager.start()\n# \u83b7\u5f97\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u7684Queue\u5bf9\u8c61:\ntask = manager.get_task_queue()\nresult = manager.get_result_queue()\n# \u653e\u51e0\u4e2a\u4efb\u52a1\u8fdb\u53bb:\nfor i in range(10):\n    n = random.randint(0, 10000)\n    print('Put task %d...' % n)\n    task.put(n)\n# \u4eceresult\u961f\u5217\u8bfb\u53d6\u7ed3\u679c:\nprint('Try get results...')\nfor i in range(10):\n    r = result.get(timeout=10)\n    print('Result: %s' % r)\n# \u5173\u95ed:\nmanager.shutdown()\nprint('master exit.')  \u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5199\u591a\u8fdb\u7a0b\u7a0b\u5e8f\u65f6\uff0c\u521b\u5efa\u7684Queue\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\uff0c\u4f46\u662f\uff0c\u5728\u5206\u5e03\u5f0f\u591a\u8fdb\u7a0b\u73af\u5883\u4e0b\uff0c\u6dfb\u52a0\u4efb\u52a1\u5230Queue\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5bf9\u539f\u59cb\u7684task_queue\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u6837\u5c31\u7ed5\u8fc7\u4e86QueueManager\u7684\u5c01\u88c5\uff0c\u5fc5\u987b\u901a\u8fc7manager.get_task_queue()\u83b7\u5f97\u7684Queue\u63a5\u53e3\u6dfb\u52a0\u3002  \u7136\u540e\uff0c\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u542f\u52a8\u4efb\u52a1\u8fdb\u7a0b\uff08\u672c\u673a\u4e0a\u542f\u52a8\u4e5f\u53ef\u4ee5\uff09\uff1a  # task_worker.py\n\nimport time, sys, queue\nfrom multiprocessing.managers import BaseManager\n\n# \u521b\u5efa\u7c7b\u4f3c\u7684QueueManager:\nclass QueueManager(BaseManager):\n    pass\n\n# \u7531\u4e8e\u8fd9\u4e2aQueueManager\u53ea\u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6Queue\uff0c\u6240\u4ee5\u6ce8\u518c\u65f6\u53ea\u63d0\u4f9b\u540d\u5b57:\nQueueManager.register('get_task_queue')\nQueueManager.register('get_result_queue')\n\n# \u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u4e5f\u5c31\u662f\u8fd0\u884ctask_master.py\u7684\u673a\u5668:\nserver_addr = '127.0.0.1'\nprint('Connect to server %s...' % server_addr)\n# \u7aef\u53e3\u548c\u9a8c\u8bc1\u7801\u6ce8\u610f\u4fdd\u6301\u4e0etask_master.py\u8bbe\u7f6e\u7684\u5b8c\u5168\u4e00\u81f4:\nm = QueueManager(address=(server_addr, 5000), authkey=b'abc')\n# \u4ece\u7f51\u7edc\u8fde\u63a5:\nm.connect()\n# \u83b7\u53d6Queue\u7684\u5bf9\u8c61:\ntask = m.get_task_queue()\nresult = m.get_result_queue()\n# \u4ecetask\u961f\u5217\u53d6\u4efb\u52a1,\u5e76\u628a\u7ed3\u679c\u5199\u5165result\u961f\u5217:\nfor i in range(10):\n    try:\n        n = task.get(timeout=1)\n        print('run task %d * %d...' % (n, n))\n        r = '%d * %d = %d' % (n, n, n*n)\n        time.sleep(1)\n        result.put(r)\n    except Queue.Empty:\n        print('task queue is empty.')\n# \u5904\u7406\u7ed3\u675f:\nprint('worker exit.')  \u4efb\u52a1\u8fdb\u7a0b\u8981\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u5230\u670d\u52a1\u8fdb\u7a0b\uff0c\u6240\u4ee5\u8981\u6307\u5b9a\u670d\u52a1\u8fdb\u7a0b\u7684IP\u3002  \u73b0\u5728\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u5206\u5e03\u5f0f\u8fdb\u7a0b\u7684\u5de5\u4f5c\u6548\u679c\u4e86\u3002\u5148\u542f\u52a8task_master.py\u670d\u52a1\u8fdb\u7a0b\uff1a  $ python3 task_master.py \nPut task 3411...\nPut task 1605...\nPut task 1398...\nPut task 4729...\nPut task 5300...\nPut task 7471...\nPut task 68...\nPut task 4219...\nPut task 339...\nPut task 7866...\nTry get results...  task_master.py \u8fdb\u7a0b\u53d1\u9001\u5b8c\u4efb\u52a1\u540e\uff0c\u5f00\u59cb\u7b49\u5f85result\u961f\u5217\u7684\u7ed3\u679c\u3002\u73b0\u5728\u542f\u52a8 task_worker.py \u8fdb\u7a0b\uff1a  $ python3 task_worker.py\nConnect to server 127.0.0.1...\nrun task 3411 * 3411...\nrun task 1605 * 1605...\nrun task 1398 * 1398...\nrun task 4729 * 4729...\nrun task 5300 * 5300...\nrun task 7471 * 7471...\nrun task 68 * 68...\nrun task 4219 * 4219...\nrun task 339 * 339...\nrun task 7866 * 7866...\nworker exit.  task_worker.py \u8fdb\u7a0b\u7ed3\u675f\uff0c\u5728 task_master.py \u8fdb\u7a0b\u4e2d\u4f1a\u7ee7\u7eed\u6253\u5370\u51fa\u7ed3\u679c\uff1a  Result: 3411 * 3411 = 11634921\nResult: 1605 * 1605 = 2576025\nResult: 1398 * 1398 = 1954404\nResult: 4729 * 4729 = 22363441\nResult: 5300 * 5300 = 28090000\nResult: 7471 * 7471 = 55815841\nResult: 68 * 68 = 4624\nResult: 4219 * 4219 = 17799961\nResult: 339 * 339 = 114921\nResult: 7866 * 7866 = 61873956  \u4e2a\u7b80\u5355\u7684Master/Worker\u6a21\u578b\u6709\u4ec0\u4e48\u7528\uff1f\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u771f\u6b63\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u628a\u4ee3\u7801\u7a0d\u52a0\u6539\u9020\uff0c\u542f\u52a8\u591a\u4e2aworker\uff0c\u5c31\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u5e03\u5230\u51e0\u53f0\u751a\u81f3\u51e0\u5341\u53f0\u673a\u5668\u4e0a\uff0c\u6bd4\u5982\u628a\u8ba1\u7b97n*n\u7684\u4ee3\u7801\u6362\u6210\u53d1\u9001\u90ae\u4ef6\uff0c\u5c31\u5b9e\u73b0\u4e86\u90ae\u4ef6\u961f\u5217\u7684\u5f02\u6b65\u53d1\u9001\u3002  Queue\u5bf9\u8c61\u5b58\u50a8\u5728\u54ea\uff1f\u6ce8\u610f\u5230task_worker.py\u4e2d\u6839\u672c\u6ca1\u6709\u521b\u5efaQueue\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\uff0cQueue\u5bf9\u8c61\u5b58\u50a8\u5728task_master.py\u8fdb\u7a0b\u4e2d\uff1a  \u800c Queue \u4e4b\u6240\u4ee5\u80fd\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\uff0c\u5c31\u662f\u901a\u8fc7 QueueManager \u5b9e\u73b0\u7684\u3002\u7531\u4e8e QueueManager \u7ba1\u7406\u7684\u4e0d\u6b62\u4e00\u4e2a Queue \uff0c\u6240\u4ee5\uff0c\u8981\u7ed9\u6bcf\u4e2a Queue \u7684\u7f51\u7edc\u8c03\u7528\u63a5\u53e3\u8d77\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982 get_task_queue \u3002  authkey \u6709\u4ec0\u4e48\u7528\uff1f\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e24\u53f0\u673a\u5668\u6b63\u5e38\u901a\u4fe1\uff0c\u4e0d\u88ab\u5176\u4ed6\u673a\u5668\u6076\u610f\u5e72\u6270\u3002\u5982\u679c task_worker.py \u7684 authkey \u548c task_master.py \u7684 authkey \u4e0d\u4e00\u81f4\uff0c\u80af\u5b9a\u8fde\u63a5\u4e0d\u4e0a\u3002", 
            "title": "\u5206\u5e03\u5f0f\u8fdb\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_10", 
            "text": "\u7ebf\u7a0b\u662f\u4e00\u79cd\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5728linux\u5185\u6838\u4e2d\uff0c\u4e24\u8005\u51e0\u4e4e\u6ca1\u6709\u5dee\u522b\uff0c\u9664\u4e86\u4e00\u70b9\u2014\u2014 \u7ebf\u7a0b\u5e76\u4e0d\u4ea7\u751f\u65b0\u7684\u5730\u5740\u7a7a\u95f4\u548c\u8d44\u6e90\u63cf\u8ff0\u7b26\u8868\uff0c\u800c\u662f\u590d\u7528\u7236\u8fdb\u7a0b\u7684 \u3002\n\u4f46\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u8fdb\u7a0b\u4e00\u6837\uff0c\u5fc5\u987b\u9677\u5165\u5185\u6838\u6001\u3002  \u7ebf\u7a0b\u662f\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u800c\u8fdb\u7a0b\u7531\u81f3\u5c11\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002\u5982\u4f55\u8c03\u5ea6\u8fdb\u7a0b\u548c\u7ebf\u7a0b\uff0c\u5b8c\u5168\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u7a0b\u5e8f\u81ea\u5df1\u4e0d\u80fd\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u6267\u884c\uff0c\u6267\u884c\u591a\u957f\u65f6\u95f4\u3002  \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u6d41\uff0c\u72ec\u7acb\u6267\u884c\u5b83\u81ea\u5df1\u7684\u7a0b\u5e8f\u4ee3\u7801\u3002\u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002  \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e00\u822c\u53ea\u5305\u542bCPU\u4e0a\u4e0b\u6587\u53ca\u5176\u4ed6\u7684\u7ebf\u7a0b\u7ba1\u7406\u4fe1\u606f\u3002\u7ebf\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u4e3b\u8981\u53d6\u51b3\u4e8e\u4e3a\u7ebf\u7a0b\u5806\u6808\u7684\u5efa\u7acb\u800c\u5206\u914d\u5185\u5b58\u7684\u5f00\u9500\uff0c\u8fd9\u4e9b\u5f00\u9500\u5e76\u4e0d\u5927\u3002\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u53d1\u751f\u5728\u4e24\u4e2a\u7ebf\u7a0b\u9700\u8981\u540c\u6b65\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u8fdb\u5165\u5171\u4eab\u6570\u636e\u6bb5\u3002\u5207\u6362\u53eaCPU\u5bc4\u5b58\u5668\u503c\u9700\u8981\u5b58\u50a8\uff0c\u5e76\u968f\u540e\u7528\u5c06\u8981\u5207\u6362\u5230\u7684\u7ebf\u7a0b\u7684\u539f\u5148\u5b58\u50a8\u7684\u503c\u91cd\u65b0\u52a0\u8f7d\u5230CPU\u5bc4\u5b58\u5668\u4e2d\u53bb\u3002  \u7528\u6237\u7ea7\u7ebf\u7a0b\u4e3b\u8981\u7f3a\u70b9\u5728\u4e8e\u5bf9\u5f15\u8d77\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u8c03\u7528\u4f1a\u7acb\u5373\u963b\u585e\u8be5\u7ebf\u7a0b\u6240\u5c5e\u7684\u6574\u4e2a\u8fdb\u7a0b\u3002\u5185\u6838\u5b9e\u73b0\u7ebf\u7a0b\u5219\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u8ddf\u8fdb\u7a0b\u4e00\u6837\u5927\uff0c\u6240\u4ee5\u6298\u8877\u7684\u65b9\u6cd5\u662f\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff08Lightweight\uff09\u3002\u5728 Linux \u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u57fa\u672c\u4e0a\u5c31\u662f\u5b9e\u73b0\u4e86\u591a\u7ebf\u7a0b\u5e94\u7528\u7684\u4e00\u7ec4\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u4e2d\u5b58\u5728\u7528\u6237\u7ebf\u7a0b\u3001\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3001\u5185\u6838\u7ebf\u7a0b\u3002  \u8bed\u8a00\u5c42\u9762\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u7684\u6bd4\u8f83\u5c11\uff0cstackless python\uff0cerlang \u652f\u6301\uff0cjava \u5e76\u4e0d\u652f\u6301\u3002", 
            "title": "\u7ebf\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#python_1", 
            "text": "Python\u7684\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6a21\u5757\uff1a _thread \u548c threading \uff0c_ thread \u662f\u4f4e\u7ea7\u6a21\u5757\uff0c threading \u662f\u9ad8\u7ea7\u6a21\u5757\uff0c\u5bf9 _thread \u8fdb\u884c\u4e86\u5c01\u88c5\u3002\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528 threading \u8fd9\u4e2a\u9ad8\u7ea7\u6a21\u5757  class FetchUrls(threading.Thread):\n   \n  \u4e0b\u8f7dURL\u5185\u5bb9\u7684\u7ebf\u7a0b\n   \n\n  def __init__(self, urls, output):\n     \n    \u6784\u9020\u5668\n\n    @param urls \u9700\u8981\u4e0b\u8f7d\u7684URL\u5217\u8868\n    @param output \u5199URL\u5185\u5bb9\u7684\u8f93\u51fa\u6587\u4ef6\n     \n    threading.Thread.__init__(self)\n    self.urls = urls\n    self.output = output\n\n  def run(self):\n     \n    \u5b9e\u73b0\u7236\u7c7bThread\u7684run\u65b9\u6cd5\uff0c\u6253\u5f00URL\uff0c\u5e76\u4e14\u4e00\u4e2a\u4e00\u4e2a\u7684\u4e0b\u8f7dURL\u7684\u5185\u5bb9\n     \n    while self.urls:\n      url = self.urls.pop()\n      req = urllib2.Request(url)\n      try:\n        d = urllib2.urlopen(req)\n      except urllib2.URLError, e:\n        print 'URL %s failed: %s' % (url, e.reason)\n      self.output.write(d.read())\n      print 'write done by %s' % self.name\n      print 'URL %s fetched by %s' % (url, self.name)\n\ndef main():\n  # URL\u5217\u88681\n  urls1 = ['http://www.google.com', 'http://www.facebook.com']\n  # URL\u5217\u88682\n  urls2 = ['http://www.yahoo.com', 'http://www.youtube.com']\n  f = open('output.txt', 'w+')\n  t1 = FetchUrls(urls1, f)\n  t2 = FetchUrls(urls2, f)\n  t1.start()\n  t2.start()\n  t1.join()\n  t2.join()\n  f.close()\n\nif __name__ == '__main__':\n  main()  FetchUrls \u7ee7\u627f\u81ea threading.Thread \u542f\u52a8\u4e24\u4e2a FetchUrls \u7ebf\u7a0b\u4f7f\u7528\u4e0d\u540c\u7684urls\u5217\u8868\u5199\u540c\u4e00\u4efd\u6587\u4ef6,\u56e0\u4e3a\u7ebf\u7a0b\u8c03\u5ea6\u4e0d\u4e00\u6837\u5199\u6587\u4ef6\u4f1a\u51fa\u73b0\u672a\u5199\u5b8c\u4e00\u6b21 response \u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2a response ,\u8981\u4fdd\u8bc1\u5199\u6709\u5e8f\u53ef\u5f15\u5165\u9501\u673a\u5236", 
            "title": "python\u7ebf\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#lock", 
            "text": "\u591a\u7ebf\u7a0b\u4e2d\uff0c\u6240\u6709\u53d8\u91cf\u90fd\u7531\u6240\u6709\u7ebf\u7a0b\u5171\u4eab,\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u6700\u5927\u7684\u5371\u9669\u5728\u4e8e\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6539\u4e00\u4e2a\u53d8\u91cf,\u6240\u4ee5\u51fa\u73b0\u4e86\u9501\u673a\u5236\n\u9501\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u88ab\u9501\uff08 locked \uff09\u548c\u6ca1\u6709\u88ab\u9501\uff08 unlocked \uff09\u3002\u62e5\u6709 acquire() \u548c release() \u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u9075\u5faa\u4e00\u4e0b\u7684\u89c4\u5219\uff1a   \u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662funlocked\uff0c\u8c03\u7528acquire()\u65b9\u6cd5\u6539\u53d8\u5b83\u7684\u72b6\u6001\u4e3alocked\uff1b  \u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662flocked\uff0cacquire()\u65b9\u6cd5\u5c06\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528release()\u65b9\u6cd5\u91ca\u653e\u4e86\u9501\uff1b  \u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662funlocked\u8c03\u7528release()\u4f1a\u629b\u51faRuntimeError\u5f02\u5e38\uff1b  \u5982\u679c\u4e00\u4e2a\u9501\u7684\u72b6\u6001\u662flocked\uff0c\u8c03\u7528release()\u65b9\u6cd5\u6539\u53d8\u5b83\u7684\u72b6\u6001\u4e3aunlocked\u3002   \u89e3\u51b3\u4e0a\u9762\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199\u4e00\u4e2a\u6587\u4ef6\u7684\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f\uff1a\u6211\u4eec\u7ed9\u7c7bFetchUrls\u7684\u6784\u9020\u5668\u4e2d\u4f20\u5165\u4e00\u4e2a\u9501\uff08lock\uff09\uff0c\u4f7f\u7528\u8fd9\u4e2a\u9501\u6765\u4fdd\u62a4\u6587\u4ef6\u64cd\u4f5c\uff0c\u5b9e\u73b0\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5199\u6587\u4ef6  import time\nimport urllib2\nimport threading\n\nclass FetchUrls(threading.Thread):\n     \n    Thread checking URLs.\n     \n\n    def __init__(self, urls, output, lock):\n         \n        Constructor.\n        @param urls list of urls to check\n        @param output file to write urls output\n         \n        threading.Thread.__init__(self)\n        self.urls = urls\n        self.output = output\n        self.lock = lock\n\n    def run(self):\n         \n        Thread run method. Check URLs one by one.\n         \n        while self.urls:\n            url = self.urls.pop()\n            req = urllib2.Request(url)\n            try:\n                d = urllib2.urlopen(req)\n            except urllib2.URLError, e:\n                print 'URL %s failed: %s' % (url, e.reason)\n            self.lock.acquire()\n            print 'lock acquired by %s' % self.name\n            self.output.write(d.read())\n            print 'write done by %s' % self.name\n            print 'lock released by %s' % self.name\n            self.lock.release()\n            print 'URL %s fetched by %s' % (url, self.name)\n\ndef main():\n    # list 1 of urls to fetch\n    urls1 = ['http://www.google.com', 'http://www.facebook.com']\n    # list 2 of urls to fetch\n    urls2 = ['http://www.yahoo.com', 'http://www.youtube.com']\n    lock = threading.Lock()\n    f = open('output.txt', 'w+')\n    t1 = FetchUrls(urls1, f, lock)\n    t2 = FetchUrls(urls2, f, lock)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n    f.close()\n\nif __name__ == '__main__':\n    main()\n\n'''\nlock acquired by Thread-2\nwrite done by Thread-2\nlock released by Thread-2\nURL http://www.youtube.com fetched by Thread-2\nlock acquired by Thread-1\nwrite done by Thread-1\nlock released by Thread-1\nURL http://www.facebook.com fetched by Thread-1\nlock acquired by Thread-2\nwrite done by Thread-2\nlock released by Thread-2\nURL http://www.yahoo.com fetched by Thread-2\nlock acquired by Thread-1\nwrite done by Thread-1\nlock released by Thread-1\nURL http://www.google.com fetched by Thread-1\n'''", 
            "title": "Lock(\u9501\u673a\u5236)"
        }, 
        {
            "location": "/python/py_thread/#rlock", 
            "text": "RLock\u662f\u53ef\u91cd\u5165\u9501\uff08reentrant lock\uff09\uff0cacquire()\u80fd\u591f\u4e0d\u88ab\u963b\u585e\u7684\u88ab\u540c\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u591a\u6b21\u3002\u8981\u6ce8\u610f\u7684\u662frelease()\u9700\u8981\u8c03\u7528\u4e0eacquire()\u76f8\u540c\u7684\u6b21\u6570\u624d\u80fd\u91ca\u653e\u9501\u3002  \u4f7f\u7528Lock\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8c03\u7528acquire()\u65f6\u5c06\u88ab\u963b\u585e\uff1a  lock = threading.Lock()\nlock.acquire()\nlock.acquire()  \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fRLock\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b2c\u4e8c\u6b21\u8c03\u7528acquire()\u4e0d\u4f1a\u88ab\u963b\u585e:  rlock = threading.RLock()\nrlock.acquire()\nrlock.acquire()  RLock\u4f7f\u7528\u7684\u540c\u6837\u662fthread.allocate_lock()\uff0c\u4e0d\u540c\u7684\u662f\u4ed6\u8ddf\u8e2a\u5bbf\u4e3b\u7ebf\u7a0b\uff08the owner thread\uff09\u6765\u5b9e\u73b0\u53ef\u91cd\u5165\u7684\u7279\u6027\u3002\u4e0b\u9762\u662fRLock\u7684acquire()\u5b9e\u73b0\u3002\u5982\u679c\u8c03\u7528acquire()\u7684\u7ebf\u7a0b\u662f\u8d44\u6e90\u7684\u6240\u6709\u8005\uff0c\u8bb0\u5f55\u8c03\u7528acquire()\u6b21\u6570\u7684\u8ba1\u6570\u5668\u5c31\u4f1a\u52a01\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u5c06\u8bd5\u56fe\u53bb\u83b7\u53d6\u9501\u3002\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u83b7\u5f97\u9501\u65f6\uff0c\u9501\u7684\u62e5\u6709\u8005\u5c06\u4f1a\u88ab\u4fdd\u5b58\uff0c\u540c\u65f6\u8ba1\u6570\u5668\u521d\u59cb\u5316\u4e3a1\u3002  def acquire(self, blocking=1):\n    me = _get_ident()\n    if self.__owner == me:\n        self.__count = self.__count + 1\n        ...\n        return 1\n    rc = self.__block.acquire(blocking)\n    if rc:\n        self.__owner = me\n        self.__count = 1\n        ...\n    ...\n    return rc  \u53ef\u91cd\u5165\u9501\uff08RLock\uff09\u7684release()\u65b9\u6cd5\u3002\u9996\u5148\u5b83\u4f1a\u53bb\u786e\u8ba4\u8c03\u7528\u8005\u662f\u5426\u662f\u9501\u7684\u62e5\u6709\u8005\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8ba1\u6570\u5668\u51cf1\uff1b\u5982\u679c\u8ba1\u6570\u5668\u4e3a0\uff0c\u90a3\u4e48\u9501\u5c06\u4f1a\u88ab\u91ca\u653e\uff0c\u8fd9\u65f6\u5176\u4ed6\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u53bb\u83b7\u53d6\u9501\u4e86  def release(self):\n    if self.__owner != _get_ident():\n        raise RuntimeError( cannot release un-acquired lock )\n    self.__count = count = self.__count - 1\n    if not count:\n        self.__owner = None\n        self.__block.release()\n        ...\n    ...", 
            "title": "\u53ef\u91cd\u5165\u9501\uff08RLock\uff09"
        }, 
        {
            "location": "/python/py_thread/#condition", 
            "text": "\u6761\u4ef6\u540c\u6b65\u673a\u5236\u662f\u6307\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u7279\u5b9a\u6761\u4ef6\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u7684\u4fe1\u53f7\u3002 \u89e3\u91ca\u6761\u4ef6\u540c\u6b65\u673a\u5236\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\uff08producer/consumer\uff09\u6a21\u578b\u3002\u751f\u4ea7\u8005\u968f\u673a\u7684\u5f80\u5217\u8868\u4e2d\u201c\u751f\u4ea7\u201d\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u800c\u6d88\u8d39\u8005\u4ece\u5217\u8868\u4e2d\u201c\u6d88\u8d39\u201d\u6574\u6570\u3002\u5b8c\u6574\u7684\u6e90\u7801\u53ef\u4ee5\u5728threads/condition.py\u4e2d\u627e\u5230  \u5728producer\u7c7b\u4e2d\uff0cproducer\u83b7\u5f97\u9501\uff0c\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u6709\u4e86\u53ef\u7528\u7684\u201c\u5546\u54c1\u201d\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002producer\u65e0\u9650\u5730\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u6574\u6570\uff0c\u540c\u65f6\u5728\u4e24\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e2d\u95f4\u968f\u673a\u7684\u505c\u987f\u4e00\u4f1a\u513f\u3002  import time\nimport urllib2\nimport threading\nimport random\n\nclass Producer(threading.Thread):\n     \n    Produces random integers to a list\n     \n\n    def __init__(self, integers, condition):\n         \n        Constructor.\n        @param integers list of integers\n        @param condition condition synchronization object\n         \n        threading.Thread.__init__(self)\n        self.integers = integers\n        self.condition = condition\n\n    def run(self):\n         \n        Thread run method. Append random integers to the integers list at\n        random time.\n         \n        for i in range(10):\n            integer = random.randint(0, 256)\n            self.condition.acquire()\n            print 'condition acquired by %s' % self.name\n            self.integers.append(integer)\n            print '%d appended to list by %s' % (integer, self.name)\n            print 'condition notified by %s' % self.name\n            self.condition.notify()\n            print 'condition released by %s' % self.name\n            self.condition.release()\n            time.sleep(1)\n\nclass Consumer(threading.Thread):\n     \n    Consumes random integers from a list\n     \n\n    def __init__(self, integers, condition):\n         \n        Constructor.\n        @param integers list of integers\n        @param condition condition synchronization object\n         \n        threading.Thread.__init__(self)\n        self.integers = integers\n        self.condition = condition\n\n    def run(self):\n         \n        Thread run method. Consumes integers from list\n         \n        while True:\n            self.condition.acquire()\n            print 'condition acquired by %s' % self.name\n            while True:\n                if self.integers:\n                    integer = self.integers.pop()\n                    print '%d popped from list by %s' % (integer, self.name)\n                    break\n                print 'condition wait by %s' % self.name\n                self.condition.wait()\n            print 'condition released by %s' % self.name\n            self.condition.release()\n\ndef main():\n    integers = []\n    condition = threading.Condition()\n    t1 = Producer(integers, condition)\n    t2 = Consumer(integers, condition)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n\nif __name__ == '__main__':\n    main()\n'''\ncondition acquired by Thread-1\n159 appended to list by Thread-1\ncondition notified by Thread-1\ncondition released by Thread-1\ncondition acquired by Thread-2\n159 popped from list by Thread-2\ncondition released by Thread-2\ncondition acquired by Thread-2\ncondition wait by Thread-2\ncondition acquired by Thread-1\n116 appended to list by Thread-1\ncondition notified by Thread-1\ncondition released by Thread-1\n116 popped from list by Thread-2\ncondition released by Thread-2\ncondition acquired by Thread-2\ncondition wait by Thread-2\n'''  \u5728producer\u7c7b\u4e2d\uff0cproducer\u83b7\u5f97\u9501\uff0c\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u6709\u4e86\u53ef\u7528\u7684\u201c\u5546\u54c1\u201d\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002producer\u65e0\u9650\u5730\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u6574\u6570\uff0c\u540c\u65f6\u5728\u4e24\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e2d\u95f4\u968f\u673a\u7684\u505c\u987f\u4e00\u4f1a\u513f\n\u6d88\u8d39\u8005\uff08consumer\uff09\u7c7b\u3002\u5b83\u83b7\u53d6\u9501\uff0c\u68c0\u67e5\u5217\u8868\u4e2d\u662f\u5426\u6709\u6574\u6570\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u7b49\u5f85\u751f\u4ea7\u8005\u7684\u901a\u77e5\u3002\u5f53\u6d88\u8d39\u8005\u83b7\u53d6\u6574\u6570\u4e4b\u540e\uff0c\u91ca\u653e\u9501\u3002\n\u6ce8\u610f\u5728wait()\u65b9\u6cd5\u4e2d\u4f1a\u91ca\u653e\u9501\uff0c\u8fd9\u6837\u751f\u4ea7\u8005\u5c31\u80fd\u83b7\u5f97\u8d44\u6e90\u5e76\u4e14\u751f\u4ea7\u201c\u5546\u54c1\u201d\u3002  Thread-1\u6dfb\u52a0159\u5230\u5217\u8868\u4e2d\uff0c\u901a\u77e5\u6d88\u8d39\u8005\u540c\u65f6\u91ca\u653e\u9501\uff0cThread-2\u83b7\u5f97\u9501\uff0c\u53d6\u56de159\uff0c\u5e76\u4e14\u91ca\u653e\u9501\u3002\u6b64\u65f6\u56e0\u4e3a\u6267\u884ctime.sleep(1)\uff0c\u751f\u4ea7\u8005\u6b63\u5728\u7761\u7720\uff0c\u5f53\u6d88\u8d39\u8005\u518d\u6b21\u8bd5\u56fe\u83b7\u53d6\u6574\u6570\u65f6\uff0c\u5217\u8868\u4e2d\u5e76\u6ca1\u6709\u6574\u6570\uff0c\u8fd9\u65f6\u6d88\u8d39\u8005\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u7b49\u5f85\u751f\u4ea7\u8005\u7684\u901a\u77e5\u3002\u5f53wait()\u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u91ca\u653e\u8d44\u6e90\uff0c\u4ece\u800c\u751f\u4ea7\u8005\u80fd\u591f\u5229\u7528\u8d44\u6e90\u751f\u4ea7\u6574\u6570\u3002  \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bPython\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u6761\u4ef6\u540c\u6b65\u673a\u5236\u7684\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u4f20\u5165\u9501\uff08lock\uff09\u5bf9\u8c61\uff0ccondition\u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u4e00\u4e2a\u53ef\u91cd\u5165\u9501\uff08RLock\uff09\uff0c\u8fd9\u4e2a\u9501\u5c06\u4f1a\u5728\u8c03\u7528acquire()\u548crelease()\u65f6\u4f7f\u7528  class _Condition(_Verbose):\n\n    def __init__(self, lock=None, verbose=None):\n        _Verbose.__init__(self, verbose)\n        if lock is None:\n            lock = RLock()\n        self.__lock = lock  \u63a5\u4e0b\u6765\u662fwait()\u65b9\u6cd5\u3002\u4e3a\u4e86\u7b80\u5316\u8bf4\u660e\uff0c\u6211\u4eec\u5047\u5b9a\u5728\u8c03\u7528wait()\u65b9\u6cd5\u65f6\u4e0d\u4f7f\u7528timeout\u53c2\u6570\u3002wait()\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3awaiter\u7684\u9501\uff0c\u5e76\u4e14\u8bbe\u7f6e\u9501\u7684\u72b6\u6001\u4e3alocked\u3002\u8fd9\u4e2awaiter\u9501\u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u901a\u8baf\uff0c\u8fd9\u6837\u751f\u4ea7\u8005\uff08\u5728\u751f\u4ea7\u5b8c\u6574\u6570\u4e4b\u540e\uff09\u5c31\u53ef\u4ee5\u901a\u77e5\u6d88\u8d39\u8005\u91ca\u653ewaiter()\u9501\u3002\u9501\u5bf9\u8c61\u5c06\u4f1a\u88ab\u6dfb\u52a0\u5230\u7b49\u5f85\u8005\u5217\u8868\uff0c\u5e76\u4e14\u5728\u8c03\u7528waiter.acquire()\u65f6\u88ab\u963b\u585e\u3002\u4e00\u5f00\u59cbcondition\u9501\u7684\u72b6\u6001\u88ab\u4fdd\u5b58\uff0c\u5e76\u4e14\u5728wait()\u7ed3\u675f\u65f6\u88ab\u6062\u590d\u3002  def wait(self, timeout=None):\n    ...\n    waiter = _allocate_lock()\n    waiter.acquire()\n    self.__waiters.append(waiter)\n    saved_state = self._release_save()\n    try:    # \u65e0\u8bba\u5982\u4f55\u6062\u590d\u72b6\u6001 (\u4f8b\u5982, KeyboardInterrupt)\n        if timeout is None:\n            waiter.acquire()\n            ...\n        ...\n    finally:\n        self._acquire_restore(saved_state)  \u5f53\u751f\u4ea7\u8005\u8c03\u7528notify()\u65b9\u6cd5\u65f6\uff0cnotify()\u91ca\u653ewaiter\u9501\uff0c\u5524\u9192\u88ab\u963b\u585e\u7684\u6d88\u8d39\u8005\u3002  def notify(self, n=1):\n    ...\n    __waiters = self.__waiters\n    waiters = __waiters[:n]\n    ...\n    for waiter in waiters:\n        waiter.release()\n        try:\n            __waiters.remove(waiter)\n        except ValueError:\n            pass  \u540c\u6837Condition\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u548c\u201cwith\u201d\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u6837\u201cwith\u201d\u8bed\u53e5\u4e0a\u4e0b\u6587\u4f1a\u5e2e\u6211\u4eec\u8c03\u7528acquire()\u548crelease()\u65b9\u6cd5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u201cwith\u201d\u8bed\u53e5\u6539\u5199\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7c7b\u3002  class Producer(threading.Thread):\n  ...\n  def run(self):\n    while True:\n      integer = random.randint(0, 256)\n      with self.condition:\n        print 'condition acquired by %s' % self.name\n        self.integers.append(integer)\n        print '%d appended to list by %s' % (integer, self.name)\n        print 'condition notified by %s' % self.name\n        self.condition.notify()\n        print 'condition released by %s' % self.name\n      time.sleep(1)\n\nclass Consumer(threading.Thread):\n  ...\n  def run(self):\n    while True:\n      with self.condition:\n        print 'condition acquired by %s' % self.name\n        while True:\n          if self.integers:\n            integer = self.integers.pop()\n            print '%d popped from list by %s' % (integer, self.name)\n            break\n          print 'condition wait by %s' % self.name\n          self.condition.wait()\n        print 'condition released by %s' % self.name", 
            "title": "\u6761\u4ef6(Condition)"
        }, 
        {
            "location": "/python/py_thread/#semaphore", 
            "text": "\u4fe1\u53f7\u91cf\u540c\u6b65\u57fa\u4e8e\u5185\u90e8\u8ba1\u6570\u5668\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21acquire()\uff0c\u8ba1\u6570\u5668\u51cf1\uff1b\u6bcf\u8c03\u7528\u4e00\u6b21release()\uff0c\u8ba1\u6570\u5668\u52a01.\u5f53\u8ba1\u6570\u5668\u4e3a0\u65f6\uff0cacquire()\u8c03\u7528\u88ab\u963b\u585e\u3002\u8fd9\u662f\u8fea\u79d1\u65af\u5f7b\uff08Dijkstra\uff09\u4fe1\u53f7\u91cf\u6982\u5ff5P()\u548cV()\u7684Python\u5b9e\u73b0\u3002\u4fe1\u53f7\u91cf\u540c\u6b65\u673a\u5236\u9002\u7528\u4e8e\u8bbf\u95ee\u50cf\u670d\u52a1\u5668\u8fd9\u6837\u7684\u6709\u9650\u8d44\u6e90\u3002\n\u4fe1\u53f7\u91cf\u540c\u6b65\u7684\u4f8b\u5b50\uff1a  semaphore = threading.Semaphore()\nsemaphore.acquire()\n # \u4f7f\u7528\u5171\u4eab\u8d44\u6e90\n...\nsemaphore.release()  \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u4fe1\u53f7\u91cf\u540c\u6b65\u5728Python\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u6784\u9020\u5668\u4f7f\u7528\u53c2\u6570value\u6765\u8868\u793a\u8ba1\u6570\u5668\u7684\u521d\u59cb\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002\u4e00\u4e2a\u6761\u4ef6\u9501\u5b9e\u4f8b\u7528\u4e8e\u4fdd\u62a4\u8ba1\u6570\u5668\uff0c\u540c\u65f6\u5f53\u4fe1\u53f7\u91cf\u88ab\u91ca\u653e\u65f6\u901a\u77e5\u5176\u4ed6\u7ebf\u7a0b\u3002  lass _Semaphore(_Verbose):\n    ...\n    def __init__(self, value=1, verbose=None):\n        _Verbose.__init__(self, verbose)\n        self.__cond = Condition(Lock())\n        self.__value = value  acquire()\u65b9\u6cd5\u3002\u5982\u679c\u4fe1\u53f7\u91cf\u4e3a0\uff0c\u7ebf\u7a0b\u88ab\u6761\u4ef6\u9501\u7684wait()\u65b9\u6cd5\u963b\u585e\uff0c\u76f4\u5230\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5524\u9192\uff1b\u5982\u679c\u8ba1\u6570\u5668\u5927\u4e8e0\uff0c\u8c03\u7528acquire()\u4f7f\u8ba1\u6570\u5668\u51cf1\u3002  def acquire(self, blocking=1):\n    rc = False\n    self.__cond.acquire()\n    while self.__value == 0:\n        ...\n        self.__cond.wait()\n    else:\n        self.__value = self.__value - 1\n        rc = True\n    self.__cond.release()\n    return rc  \u4fe1\u53f7\u91cf\u7c7b\u7684release()\u65b9\u6cd5\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\u5e76\u4e14\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u3002  def release(self):\n    self.__cond.acquire()\n    self.__value = self.__value + 1\n    self.__cond.notify()\n    self.__cond.release()  \u8fd8\u6709\u4e00\u4e2a\u201c\u6709\u9650\u201d(bounded)\u4fe1\u53f7\u91cf\u7c7b\uff0c\u53ef\u4ee5\u786e\u4fddrelease()\u65b9\u6cd5\u7684\u8c03\u7528\u6b21\u6570\u4e0d\u80fd\u8d85\u8fc7\u7ed9\u5b9a\u7684\u521d\u59cb\u4fe1\u53f7\u91cf\u6570\u503c(value\u53c2\u6570)\uff0c\u4e0b\u9762\u662f\u201c\u6709\u9650\u201d\u4fe1\u53f7\u91cf\u7c7b\u7684Python\u4ee3\u7801\uff1a  class _BoundedSemaphore(_Semaphore):\n     \u68c0\u67e5release()\u7684\u8c03\u7528\u6b21\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8eacquire()\u6b21\u6570 \n    def __init__(self, value=1, verbose=None):\n        _Semaphore.__init__(self, value, verbose)\n        self._initial_value = value\n\n    def release(self):\n        if self._Semaphore__value  = self._initial_value:\n            raise ValueError,  Semaphore released too many times \n        return _Semaphore.release(self)  \u540c\u6837\u4fe1\u53f7\u91cf(Semaphore)\u5bf9\u8c61\u53ef\u4ee5\u548c\u201cwith\u201d\u4e00\u8d77\u4f7f\u7528\uff1a  semaphore = threading.Semaphore()\nwith semaphore:\n  # \u4f7f\u7528\u5171\u4eab\u8d44\u6e90\n  ...", 
            "title": "\u4fe1\u53f7\u91cf\uff08Semaphore\uff09"
        }, 
        {
            "location": "/python/py_thread/#event", 
            "text": "\u57fa\u4e8e\u4e8b\u4ef6\u7684\u540c\u6b65\u662f\u6307\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u9001/\u4f20\u9012\u4e8b\u4ef6\uff0c\u53e6\u5916\u7684\u7ebf\u7a0b\u7b49\u5f85\u4e8b\u4ef6\u7684\u89e6\u53d1\u3002 \u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u524d\u9762\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u4f8b\u5b50\uff0c\u73b0\u5728\u6211\u4eec\u628a\u5b83\u8f6c\u6362\u6210\u4f7f\u7528\u4e8b\u4ef6\u540c\u6b65\u800c\u4e0d\u662f\u6761\u4ef6\u540c\u6b65\u3002\u5b8c\u6574\u7684\u6e90\u7801\u53ef\u4ee5\u5728threads/event.py\u91cc\u9762\u627e\u5230\u3002  \u9996\u5148\u662f\u751f\u4ea7\u8005\u7c7b\uff0c\u6211\u4eec\u4f20\u5165\u4e00\u4e2aEvent\u5b9e\u4f8b\u7ed9\u6784\u9020\u5668\u800c\u4e0d\u662fCondition\u5b9e\u4f8b\u3002\u4e00\u65e6\u6574\u6570\u88ab\u6dfb\u52a0\u8fdb\u5217\u8868\uff0c\u4e8b\u4ef6(event)\u88ab\u8bbe\u7f6e\u548c\u53d1\u9001\u53bb\u5524\u9192\u6d88\u8d39\u8005\u3002\u6ce8\u610f\u4e8b\u4ef6(event)\u5b9e\u4f8b\u9ed8\u8ba4\u662f\u88ab\u53d1\u9001\u7684\u3002  class Producer(threading.Thread):\n   \n  \u5411\u5217\u8868\u4e2d\u751f\u4ea7\u968f\u673a\u6574\u6570\n   \n\n  def __init__(self, integers, event):\n     \n    \u6784\u9020\u5668\n\n    @param integers \u6574\u6570\u5217\u8868\n    @param event \u4e8b\u4ef6\u540c\u6b65\u5bf9\u8c61\n     \n    threading.Thread.__init__(self)\n    self.integers = integers\n    self.event = event\n\n  def run(self):\n     \n    \u5b9e\u73b0Thread\u7684run\u65b9\u6cd5\u3002\u5728\u968f\u673a\u65f6\u95f4\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u968f\u673a\u6574\u6570\n     \n    while True:\n      integer = random.randint(0, 256)\n      self.integers.append(integer)\n      print '%d appended to list by %s' % (integer, self.name)\n      print 'event set by %s' % self.name\n      self.event.set()      #\u8bbe\u7f6e\u4e8b\u4ef6\n      self.event.clear()    #\u53d1\u9001\u4e8b\u4ef6\n      print 'event cleared by %s' % self.name\n      time.sleep(1)   \u4e8b\u4ef6\u9501\u7684Python\u5185\u90e8\u5b9e\u73b0\uff0c\u9996\u5148\u662fEvent\u9501\u7684\u6784\u9020\u5668\u3002\u6784\u9020\u5668\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u6761\u4ef6\uff08Condition\uff09\u9501\uff0c\u6765\u4fdd\u62a4\u4e8b\u4ef6\u6807\u5fd7\uff08event flag\uff09,\u540c\u4e8b\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u5f53\u4e8b\u4ef6\u88ab\u8bbe\u7f6e\u65f6\u3002  class _Event(_Verbose):\n    def __init__(self, verbose=None):\n        _Verbose.__init__(self, verbose)\n        self.__cond = Condition(Lock())\n        self.__flag = False  \u63a5\u4e0b\u6765\u662fset()\u65b9\u6cd5\uff0c\u5b83\u8bbe\u7f6e\u4e8b\u4ef6\u6807\u5fd7\u4e3aTrue\uff0c\u5e76\u4e14\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\u3002\u6761\u4ef6\u9501\u5bf9\u8c61\u4fdd\u62a4\u7a0b\u5e8f\u4fee\u6539\u4e8b\u4ef6\u6807\u5fd7\u72b6\u6001\u7684\u5173\u952e\u90e8\u5206\u3002  def set(self):\n    self.__cond.acquire()\n    try:\n        self.__flag = True\n        self.__cond.notify_all()\n    finally:\n        self.__cond.release()  \u800cclear()\u65b9\u6cd5\u6b63\u597d\u76f8\u53cd\uff0c\u5b83\u8bbe\u7f6e\u65f6\u95f4\u6807\u5fd7\u4e3aFalse\u3002  def clear(self):\n    self.__cond.acquire()\n    try:\n        self.__flag = False\n    finally:\n        self.__cond.release()  \u6700\u540e\uff0cwait()\u65b9\u6cd5\u5c06\u963b\u585e\u76f4\u5230\u8c03\u7528\u4e86set()\u65b9\u6cd5\uff0c\u5f53\u4e8b\u4ef6\u6807\u5fd7\u4e3aTrue\u65f6\uff0cwait()\u65b9\u6cd5\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002  def wait(self, timeout=None):\n    self.__cond.acquire()\n    try:\n        if not self.__flag: #\u5982\u679cflag\u4e0d\u4e3a\u771f\n            self.__cond.wait(timeout)\n    finally:\n        self.__cond.release()", 
            "title": "\u4e8b\u4ef6\uff08Event\uff09"
        }, 
        {
            "location": "/python/py_thread/#queue", 
            "text": "\u961f\u5217\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7ebf\u7a0b\u540c\u6b65\u673a\u5236\uff0c\u4f7f\u7528\u961f\u5217\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u9501\uff0c\u961f\u5217\u4f1a\u4e3a\u6211\u4eec\u5904\u7406\u9501\u7684\u95ee\u9898\u3002 \u961f\u5217(Queue)\u6709\u4ee5\u4e0b4\u4e2a\u7528\u6237\u611f\u5174\u8da3\u7684\u65b9\u6cd5\uff1a   put: \u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9879\uff1b  get: \u4ece\u961f\u5217\u4e2d\u5220\u9664\u5e76\u8fd4\u56de\u4e00\u4e2a\u9879\uff1b  task_done: \u5f53\u67d0\u4e00\u9879\u4efb\u52a1\u5b8c\u6210\u65f6\u8c03\u7528\uff1b  join: \u963b\u585e\u77e5\u9053\u6240\u6709\u7684\u9879\u76ee\u90fd\u88ab\u5904\u7406\u5b8c\n\u4e0b\u9762\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u7684\u4f8b\u5b50\u8f6c\u6362\u6210\u4f7f\u7528\u961f\u5217\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728threads/queue.py\u4e2d\u627e\u5230\u3002   \u9996\u5148\u662f\u751f\u4ea7\u8005\u7c7b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6574\u6570\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u961f\u5217\u5c31\u53ef\u4ee5\u5b58\u50a8\u751f\u6210\u7684\u6574\u6570\u3002\u751f\u4ea7\u8005\u7ebf\u7a0b\u5728\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\u751f\u6210\u6574\u6570\u5e76\u5c06\u751f\u6210\u7684\u6574\u6570\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u3002  import time\nimport threading\nimport random\nimport Queue\n\nclass Producer(threading.Thread):\n     \n    Produces random integers to a list\n     \n\n    def __init__(self, queue):\n         \n        Constructor.\n        @param integers list of integers\n        @param queue queue synchronization object\n         \n        threading.Thread.__init__(self)\n        self.queue = queue\n\n    def run(self):\n         \n        Thread run method. Append random integers to the integers\n        list at random time.\n         \n        while True:\n            integer = random.randint(0, 256)\n            self.queue.put(integer)\n            print '%d put to queue by %s' % (integer, self.name)\n            time.sleep(1)\n\nclass Consumer(threading.Thread):\n     \n    Consumes random integers from a list\n     \n\n    def __init__(self, queue):\n         \n        Constructor.\n        @param integers list of integers\n        @param queue queue synchronization object\n         \n        threading.Thread.__init__(self)\n        self.queue = queue\n\n    def run(self):\n         \n        Thread run method. Consumes integers from list\n         \n        while True:\n            integer = self.queue.get()\n            print '%d popped from list by %s' % (integer, self.name)\n            self.queue.task_done()\n\ndef main():\n    integers = []\n    queue = Queue.Queue()\n    t1 = Producer(queue)\n    t2 = Consumer(queue)\n    t1.start()\n    t2.start()\n    t1.join()\n    t2.join()\n\nif __name__ == '__main__':\n    main()  \u961f\u5217\u540c\u6b65\u7684\u6700\u5927\u597d\u5904\u5c31\u662f\u961f\u5217\u5e2e\u6211\u4eec\u5904\u7406\u4e86\u9501\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u53bb\u770b\u770b\u5728Python\u5185\u90e8\u662f\u5982\u4f55\u5b9e\u73b0\u961f\u5217\u540c\u6b65\u673a\u5236\u7684\u3002  \u961f\u5217\uff08Queue\uff09\u6784\u9020\u5668\u521b\u5efa\u4e00\u4e2a\u9501\uff0c\u4fdd\u62a4\u961f\u5217\u5143\u7d20\u7684\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e9b\u6761\u4ef6\u9501\u5bf9\u8c61\u5904\u7406\u961f\u5217\u4e8b\u4ef6\uff0c\u6bd4\u5982\u961f\u5217\u4e0d\u7a7a\u4e8b\u4ef6\uff08\u524a\u9664get()\u7684\u963b\u585e\uff09\uff0c\u961f\u5217\u4e0d\u6ee1\u4e8b\u4ef6\uff08\u524a\u9664put()\u7684\u963b\u585e\uff09\u548c\u6240\u6709\u9879\u76ee\u90fd\u88ab\u5904\u7406\u5b8c\u4e8b\u4ef6\uff08\u524a\u9664join()\u7684\u963b\u585e\uff09\u3002  class Queue:\n    def __init__(self, maxsize=0):\n        ...\n        self.mutex = threading.Lock()\n        self.not_empty = threading.Condition(self.mutex)\n        self.not_full = threading.Condition(self.mutex)\n        self.all_tasks_done = threading.Condition(self.mutex)\n        self.unfinished_tasks = 0  put()\u65b9\u6cd5\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9879\uff0c\u6216\u8005\u963b\u585e\u5982\u679c\u961f\u5217\u5df2\u6ee1\u3002\u8fd9\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u5b83\u5524\u9192\u963b\u585e\u5728get()\u65b9\u6cd5\u4e2d\u7684\u7ebf\u7a0b\u3002\u66f4\u591a\u5173\u4e8eCondition\u9501\u7684\u5185\u5bb9\u8bf7\u67e5\u770b\u4e0a\u9762\u7684\u8bb2\u89e3\u3002  def put(self, item, block=True, timeout=None):\n    ...\n    self.not_full.acquire()\n    try:\n        if self.maxsize   0:\n            ...\n            elif timeout is None:\n                while self._qsize() == self.maxsize:\n                    self.not_full.wait()\n        self._put(item)\n        self.unfinished_tasks += 1\n        self.not_empty.notify()\n    finally:\n        self.not_full.release()  get()\u65b9\u6cd5\u4ece\u961f\u5217\u4e2d\u83b7\u5f97\u5e76\u5220\u9664\u4e00\u4e2a\u9879\uff0c\u6216\u8005\u963b\u585e\u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\u3002\u8fd9\u65f6\u961f\u5217\u4e0d\u6ee1\uff0c\u4ed6\u5524\u9192\u963b\u585e\u5728put()\u65b9\u6cd5\u4e2d\u7684\u7ebf\u7a0b\u3002  def get(self, block=True, timeout=None):\n    ...\n    self.not_empty.acquire()\n    try:\n        ...\n        elif timeout is None:\n            while not self._qsize():\n                self.not_empty.wait()\n        item = self._get()\n        self.not_full.notify()\n        return item\n    finally:\n        self.not_empty.release()  \u5f53\u8c03\u7528task_done()\u65b9\u6cd5\u65f6\uff0c\u672a\u5b8c\u6210\u4efb\u52a1\u7684\u6570\u91cf\u51cf1\u3002\u5982\u679c\u672a\u5b8c\u6210\u4efb\u52a1\u7684\u6570\u91cf\u4e3a0\uff0c\u7ebf\u7a0b\u7b49\u5f85\u961f\u5217\u5b8c\u6210join()\u65b9\u6cd5\u3002  def task_done(self):\n    self.all_tasks_done.acquire()\n    try:\n        unfinished = self.unfinished_tasks - 1\n        if unfinished  = 0:\n            if unfinished   0:\n                raise ValueError('task_done() called too many times')\n            self.all_tasks_done.notify_all()\n        self.unfinished_tasks = unfinished\n    finally:\n        self.all_tasks_done.release()\n\ndef join(self):\n    self.all_tasks_done.acquire()\n    try:\n        while self.unfinished_tasks:\n            self.all_tasks_done.wait()\n    finally:\n        self.all_tasks_done.release()", 
            "title": "\u961f\u5217\uff08Queue\uff09"
        }, 
        {
            "location": "/python/py_thread/#threadlocal", 
            "text": "import threading\n\n# \u521b\u5efa\u5168\u5c40ThreadLocal\u5bf9\u8c61:\nlocal_school = threading.local()\n\ndef process_student():\n    # \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5173\u8054\u7684student:\n    std = local_school.student\n    print('Hello, %s (in %s)' % (std, threading.current_thread().name))\n\ndef process_thread(name):\n    # \u7ed1\u5b9aThreadLocal\u7684student:\n    local_school.student = name\n    process_student()\n\nt1 = threading.Thread(target= process_thread, args=('Alice',), name='Thread-A')\nt2 = threading.Thread(target= process_thread, args=('Bob',), name='Thread-B')\nt1.start()\nt2.start()\nt1.join()\nt2.join()\n'''\nHello, Alice (in Thread-A)\nHello, Bob (in Thread-B)\n'''  \u5168\u5c40\u53d8\u91cflocal_school\u5c31\u662f\u4e00\u4e2aThreadLocal\u5bf9\u8c61\uff0c\u6bcf\u4e2aThread\u5bf9\u5b83\u90fd\u53ef\u4ee5\u8bfb\u5199student\u5c5e\u6027\uff0c\u4f46\u4e92\u4e0d\u5f71\u54cd\u3002\u4f60\u53ef\u4ee5\u628alocal_school\u770b\u6210\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u6bcf\u4e2a\u5c5e\u6027\u5982local_school.student\u90fd\u662f\u7ebf\u7a0b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u53ef\u4ee5\u4efb\u610f\u8bfb\u5199\u800c\u4e92\u4e0d\u5e72\u6270\uff0c\u4e5f\u4e0d\u7528\u7ba1\u7406\u9501\u7684\u95ee\u9898\uff0cThreadLocal\u5185\u90e8\u4f1a\u5904\u7406", 
            "title": "ThreadLocal"
        }, 
        {
            "location": "/python/py_thread/#cpu", 
            "text": "\u5982\u679c\u4f60\u4e0d\u5e78\u62e5\u6709\u4e00\u4e2a\u591a\u6838CPU\uff0c\u4f60\u80af\u5b9a\u5728\u60f3\uff0c\u591a\u6838\u5e94\u8be5\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u3002  \u5982\u679c\u5199\u4e00\u4e2a\u6b7b\u5faa\u73af\u7684\u8bdd\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f  \u6253\u5f00Mac OS X\u7684Activity Monitor\uff0c\u6216\u8005Windows\u7684Task Manager\uff0c\u90fd\u53ef\u4ee5\u76d1\u63a7\u67d0\u4e2a\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002  \u6211\u4eec\u53ef\u4ee5\u76d1\u63a7\u5230\u4e00\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\u4f1a100%\u5360\u7528\u4e00\u4e2aCPU\u3002  \u5982\u679c\u6709\u4e24\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\uff0c\u5728\u591a\u6838CPU\u4e2d\uff0c\u53ef\u4ee5\u76d1\u63a7\u5230\u4f1a\u5360\u7528200%\u7684CPU\uff0c\u4e5f\u5c31\u662f\u5360\u7528\u4e24\u4e2aCPU\u6838\u5fc3\u3002  \u8981\u60f3\u628aN\u6838CPU\u7684\u6838\u5fc3\u5168\u90e8\u8dd1\u6ee1\uff0c\u5c31\u5fc5\u987b\u542f\u52a8N\u4e2a\u6b7b\u5faa\u73af\u7ebf\u7a0b\u3002  \u8bd5\u8bd5\u7528Python\u5199\u4e2a\u6b7b\u5faa\u73af\uff1a  import threading, multiprocessing\n\ndef loop():\n    x = 0\n    while True:\n        x = x ^ 1\n\nfor i in range(multiprocessing.cpu_count()):\n    t = threading.Thread(target=loop)\n    t.start()  \u542f\u52a8\u4e0eCPU\u6838\u5fc3\u6570\u91cf\u76f8\u540c\u7684N\u4e2a\u7ebf\u7a0b\uff0c\u57284\u6838CPU\u4e0a\u53ef\u4ee5\u76d1\u63a7\u5230CPU\u5360\u7528\u7387\u4ec5\u6709102%\uff0c\u4e5f\u5c31\u662f\u4ec5\u4f7f\u7528\u4e86\u4e00\u6838\u3002  \u4f46\u662f\u7528C\u3001C++\u6216Java\u6765\u6539\u5199\u76f8\u540c\u7684\u6b7b\u5faa\u73af\uff0c\u76f4\u63a5\u53ef\u4ee5\u628a\u5168\u90e8\u6838\u5fc3\u8dd1\u6ee1\uff0c4\u6838\u5c31\u8dd1\u5230400%\uff0c8\u6838\u5c31\u8dd1\u5230800%\uff0c\u4e3a\u4ec0\u4e48Python\u4e0d\u884c\u5462\uff1f  \u56e0\u4e3aPython\u7684\u7ebf\u7a0b\u867d\u7136\u662f\u771f\u6b63\u7684\u7ebf\u7a0b\uff0c\u4f46\u89e3\u91ca\u5668\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u6709\u4e00\u4e2aGIL\u9501\uff1aGlobal Interpreter Lock\uff0c\u4efb\u4f55Python\u7ebf\u7a0b\u6267\u884c\u524d\uff0c\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u8fd9\u4e2aGIL\u5168\u5c40\u9501\u5b9e\u9645\u4e0a\u628a\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u4ee3\u7801\u90fd\u7ed9\u4e0a\u4e86\u9501\uff0c\u6240\u4ee5\uff0c\u591a\u7ebf\u7a0b\u5728Python\u4e2d\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u5373\u4f7f100\u4e2a\u7ebf\u7a0b\u8dd1\u5728100\u6838CPU\u4e0a\uff0c\u4e5f\u53ea\u80fd\u7528\u52301\u4e2a\u6838\u3002  GIL\u662fPython\u89e3\u91ca\u5668\u8bbe\u8ba1\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u901a\u5e38\u6211\u4eec\u7528\u7684\u89e3\u91ca\u5668\u662f\u5b98\u65b9\u5b9e\u73b0\u7684CPython\uff0c\u8981\u771f\u6b63\u5229\u7528\u591a\u6838\uff0c\u9664\u975e\u91cd\u5199\u4e00\u4e2a\u4e0d\u5e26GIL\u7684\u89e3\u91ca\u5668\u3002  \u6240\u4ee5\uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u4f46\u4e0d\u8981\u6307\u671b\u80fd\u6709\u6548\u5229\u7528\u591a\u6838\u3002\u5982\u679c\u4e00\u5b9a\u8981\u901a\u8fc7\u591a\u7ebf\u7a0b\u5229\u7528\u591a\u6838\uff0c\u90a3\u53ea\u80fd\u901a\u8fc7C\u6269\u5c55\u6765\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u8fd9\u6837\u5c31\u5931\u53bb\u4e86Python\u7b80\u5355\u6613\u7528\u7684\u7279\u70b9\u3002  \u4e0d\u8fc7\uff0c\u4e5f\u4e0d\u7528\u8fc7\u4e8e\u62c5\u5fc3\uff0cPython\u867d\u7136\u4e0d\u80fd\u5229\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\u3002\u591a\u4e2aPython\u8fdb\u7a0b\u6709\u5404\u81ea\u72ec\u7acb\u7684GIL\u9501\uff0c\u4e92\u4e0d\u5f71\u54cd", 
            "title": "\u591a\u6838cpu"
        }, 
        {
            "location": "/python/py_thread/#vs-io", 
            "text": "\u662f\u5426\u91c7\u7528\u591a\u4efb\u52a1\u7684\u7b2c\u4e8c\u4e2a\u8003\u8651\u662f\u4efb\u52a1\u7684\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u4e3a\u8ba1\u7b97\u5bc6\u96c6\u578b\u548cIO\u5bc6\u96c6\u578b\u3002  \u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u662f\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8ba1\u7b97\uff0c\u6d88\u8017CPU\u8d44\u6e90\uff0c\u6bd4\u5982\u8ba1\u7b97\u5706\u5468\u7387\u3001\u5bf9\u89c6\u9891\u8fdb\u884c\u9ad8\u6e05\u89e3\u7801\u7b49\u7b49\uff0c\u5168\u9760CPU\u7684\u8fd0\u7b97\u80fd\u529b\u3002\u8fd9\u79cd\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u4efb\u52a1\u8d8a\u591a\uff0c\u82b1\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\u5c31\u8d8a\u591a\uff0cCPU\u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\uff0c\u6240\u4ee5\uff0c\u8981\u6700\u9ad8\u6548\u5730\u5229\u7528CPU\uff0c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\u7684\u6570\u91cf\u5e94\u5f53\u7b49\u4e8eCPU\u7684\u6838\u5fc3\u6570\u3002  \u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7531\u4e8e\u4e3b\u8981\u6d88\u8017CPU\u8d44\u6e90\uff0c\u56e0\u6b64\uff0c\u4ee3\u7801\u8fd0\u884c\u6548\u7387\u81f3\u5173\u91cd\u8981\u3002Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u8fd0\u884c\u6548\u7387\u5f88\u4f4e\uff0c\u5b8c\u5168\u4e0d\u9002\u5408\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6700\u597d\u7528C\u8bed\u8a00\u7f16\u5199\u3002  \u7b2c\u4e8c\u79cd\u4efb\u52a1\u7684\u7c7b\u578b\u662fIO\u5bc6\u96c6\u578b\uff0c\u6d89\u53ca\u5230\u7f51\u7edc\u3001\u78c1\u76d8IO\u7684\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662fCPU\u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3aIO\u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8eCPU\u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4efb\u52a1\u8d8a\u591a\uff0cCPU\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002\u5e38\u89c1\u7684\u5927\u90e8\u5206\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6bd4\u5982Web\u5e94\u7528\u3002  IO\u5bc6\u96c6\u578b\u4efb\u52a1\u6267\u884c\u671f\u95f4\uff0c99%\u7684\u65f6\u95f4\u90fd\u82b1\u5728IO\u4e0a\uff0c\u82b1\u5728CPU\u4e0a\u7684\u65f6\u95f4\u5f88\u5c11\uff0c\u56e0\u6b64\uff0c\u7528\u8fd0\u884c\u901f\u5ea6\u6781\u5feb\u7684C\u8bed\u8a00\u66ff\u6362\u7528Python\u8fd9\u6837\u8fd0\u884c\u901f\u5ea6\u6781\u4f4e\u7684\u811a\u672c\u8bed\u8a00\uff0c\u5b8c\u5168\u65e0\u6cd5\u63d0\u5347\u8fd0\u884c\u6548\u7387\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6700\u5408\u9002\u7684\u8bed\u8a00\u5c31\u662f\u5f00\u53d1\u6548\u7387\u6700\u9ad8\uff08\u4ee3\u7801\u91cf\u6700\u5c11\uff09\u7684\u8bed\u8a00\uff0c\u811a\u672c\u8bed\u8a00\u662f\u9996\u9009\uff0cC\u8bed\u8a00\u6700\u5dee\u3002", 
            "title": "\u8ba1\u7b97\u5bc6\u96c6\u578b vs. IO\u5bc6\u96c6\u578b"
        }, 
        {
            "location": "/python/py_thread/#_11", 
            "text": "\u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u8f7b\u677e\u521b\u5efa\u6570\u5341\u4e07\u8ba1\u7684\u534f\u7a0b\u3002\u4ece\u7ef4\u57fa\u767e\u79d1\u4e0a\u770b\uff0c\u4eceKnuth\u8001\u7237\u5b50\u7684\u57fa\u672c\u7b97\u6cd5\u5377\u4e0a\u770b\u201c\u5b50\u7a0b\u5e8f\u5176\u5b9e\u662f\u534f\u7a0b\u7684\u7279\u4f8b\u201d\u3002\u5b50\u7a0b\u5e8f\u662f\u4ec0\u4e48\uff1f\u5b50\u7a0b\u5e8f\uff08Subroutine, procedure, function, routine, method, subprogram\uff09\uff0c\u5c31\u662f\u51fd\u6570\u561b\uff01\u6240\u4ee5\u534f\u7a0b\u4e5f\u6ca1\u4ec0\u4e48\u4e86\u4e0d\u8d77\u7684\uff0c\u5c31\u662f\u66f4\u4e00\u822c\u610f\u4e49\u7684\u7a0b\u5e8f\u7ec4\u4ef6\uff0c\u90a3\u4f60\u5185\u5b58\u7a7a\u95f4\u591f\u5927\uff0c\u521b\u5efa\u591a\u5c11\u4e2a\u51fd\u6570\u8fd8\u4e0d\u662f\u968f\u4f60\u5417\uff1f  \u534f\u7a0b\u53ef\u4ee5\u901a\u8fc7yield\u6765\u8c03\u7528\u5176\u5b83\u534f\u7a0b\u3002\u901a\u8fc7yield\u65b9\u5f0f\u8f6c\u79fb\u6267\u884c\u6743\u7684\u534f\u7a0b\u4e4b\u95f4\u4e0d\u662f\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u7684\u5173\u7cfb\uff0c\u800c\u662f\u5f7c\u6b64\u5bf9\u79f0\u3001\u5e73\u7b49\u7684\u3002\u534f\u7a0b\u7684\u8d77\u59cb\u5904\u662f\u7b2c\u4e00\u4e2a\u5165\u53e3\u70b9\uff0c\u5728\u534f\u7a0b\u91cc\uff0c\u8fd4\u56de\u70b9\u4e4b\u540e\u662f\u63a5\u4e0b\u6765\u7684\u5165\u53e3\u70b9\u3002\u5b50\u4f8b\u7a0b\u7684\u751f\u547d\u671f\u9075\u5faa\u540e\u8fdb\u5148\u51fa\uff08\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684\u5b50\u4f8b\u7a0b\u6700\u5148\u8fd4\u56de\uff09\uff1b\u76f8\u53cd\uff0c\u534f\u7a0b\u7684\u751f\u547d\u671f\u5b8c\u5168\u7531\u4ed6\u4eec\u7684\u4f7f\u7528\u7684\u9700\u8981\u51b3\u5b9a\u3002", 
            "title": "\u534f\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_12", 
            "text": "\u4e00\u65e6\u521b\u5efa\u5b8c\u7ebf\u7a0b\uff0c\u4f60\u5c31\u65e0\u6cd5\u51b3\u5b9a\u4ed6\u4ec0\u4e48\u65f6\u5019\u83b7\u5f97\u65f6\u95f4\u7247\uff0c\u4ec0\u4e48\u65f6\u5019\u8ba9\u51fa\u65f6\u95f4\u7247\u4e86\uff0c\u4f60\u628a\u5b83\u4ea4\u7ed9\u4e86\u5185\u6838\u3002\u800c\u534f\u7a0b\u7f16\u5199\u8005\uff0c\u4e00\u662f\u53ef\u63a7\u7684\u5207\u6362\u65f6\u673a\uff0c\u4e8c\u662f\u5f88\u5c0f\u7684\u5207\u6362\u4ee3\u4ef7\u3002\u4ece\u64cd\u4f5c\u7cfb\u7edf\u6709\u6ca1\u6709\u8c03\u5ea6\u6743\u4e0a\u770b\uff0c\u534f\u7a0b\u5c31\u662f\u56e0\u4e3a\u4e0d\u9700\u8981\u8fdb\u884c\u5185\u6838\u6001\u7684\u5207\u6362\uff0c\u6240\u4ee5\u4f1a\u4f7f\u7528\u5b83", 
            "title": "\u7ebf\u7a0b\u548c\u534f\u7a0b\u7684\u533a\u522b"
        }, 
        {
            "location": "/python/py_thread/#_13", 
            "text": "\u72b6\u6001\u673a:\u5728\u4e00\u4e2a\u5b50\u4f8b\u7a0b\u91cc\u5b9e\u73b0\u72b6\u6001\u673a\uff0c\u8fd9\u91cc\u72b6\u6001\u7531\u8be5\u8fc7\u7a0b\u5f53\u524d\u7684\u51fa\u53e3\uff0f\u5165\u53e3\u70b9\u786e\u5b9a\uff1b\u8fd9\u53ef\u4ee5\u4ea7\u751f\u53ef\u8bfb\u6027\u66f4\u9ad8\u7684\u4ee3\u7801\u3002  \u89d2\u8272\u6a21\u578b:\u5e76\u884c\u7684\u89d2\u8272\u6a21\u578b\uff0c\u4f8b\u5982\u8ba1\u7b97\u673a\u6e38\u620f\u3002\u6bcf\u4e2a\u89d2\u8272\u6709\u81ea\u5df1\u7684\u8fc7\u7a0b\uff08\u8fd9\u53c8\u5728\u903b\u8f91\u4e0a\u5206\u79bb\u4e86\u4ee3\u7801\uff09\uff0c\u4f46\u4ed6\u4eec\u81ea\u613f\u5730\u5411\u987a\u5e8f\u6267\u884c\u5404\u89d2\u8272\u8fc7\u7a0b\u7684 \u4e2d\u592e\u8c03\u5ea6\u5668\u4ea4\u51fa\u63a7\u5236\uff08\u8fd9\u662f\u5408\u4f5c\u5f0f\u591a\u4efb\u52a1\u7684\u4e00\u79cd\u5f62\u5f0f\uff09\u3002  \u4ea7\u751f\u5668:\u5b83\u6709\u52a9\u4e8e\u8f93\u5165\uff0f\u8f93\u51fa\u548c\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u901a\u7528\u904d\u5386\u3002", 
            "title": "\u4e3a\u4ec0\u4e48\u8981\u7528\u534f\u7a0b"
        }, 
        {
            "location": "/python/py_thread/#_14", 
            "text": "\u8bed\u8a00/\u5e73\u53f0  \u5b9e\u73b0\u7248\u672c  \u534f\u7a0b\u540d\u79f0  \u5907\u6ce8      GoLang  \u539f\u751f\u652f\u6301  goroutine     Erlang  \u539f\u751f\u652f\u6301  process  \u51fd\u6570\u5f0f\u7f16\u7a0b    Scala  \u539f\u751f\u652f\u6301  actor  \u51fd\u6570\u5f0f\u7f16\u7a0b    Python  2.5 \u7248\u672c\u540e  coroutine  \u5b98\u65b9 Python\u4e0d\u5b8c\u5168\u5b9e\u73b0\uff0cStackless    Perl  6.0 \u7248\u672c\u540e  coroutine     Ruby  1.9 \u7248\u672c\u540e  fiber     Lua  \u539f\u751f\u652f\u6301  coroutine     C#  .Net  2.0 \u7248\u672c\u540e  fiber      https://segmentfault.com/a/1190000001813992  http://boolan.com/lecture/1000001045  http://www.cnblogs.com/shenguanpu/archive/2013/05/05/3060616.html  http://yoyzhou.github.io/blog/2013/02/28/python-threads-synchronization-locks/", 
            "title": "\u7f16\u7a0b\u8bed\u8a00\u534f\u7a0b\u5b9e\u73b0"
        }, 
        {
            "location": "/python/py_coroutine/", 
            "text": "\u534f\u7a0b\n\n\n\u5f02\u6b65IO\n\n\n\u7531\u4e8e\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662fCPU\u9ad8\u901f\u6267\u884c\u80fd\u529b\u548cIO\u8bbe\u5907\u7684\u9f9f\u901f\u4e25\u91cd\u4e0d\u5339\u914d\uff0c\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u53ea\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\n\u53e6\u4e00\u79cd\u89e3\u51b3IO\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5f02\u6b65IO,\u5f53\u4ee3\u7801\u9700\u8981\u6267\u884c\u4e00\u4e2a\u8017\u65f6\u7684IO\u64cd\u4f5c\u65f6\uff0c\u5b83\u53ea\u53d1\u51faIO\u6307\u4ee4\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u7136\u540e\u5c31\u53bb\u6267\u884c\u5176\u4ed6\u4ee3\u7801\u4e86\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5f53IO\u8fd4\u56de\u7ed3\u679c\u65f6\uff0c\u518d\u901a\u77e5CPU\u8fdb\u884c\u5904\u7406\n\u5f02\u6b65IO\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u5728\u6d88\u606f\u5faa\u73af\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u65ad\u5730\u91cd\u590d\u201c\u8bfb\u53d6\u6d88\u606f-\u5904\u7406\u6d88\u606f\u201d\u8fd9\u4e00\u8fc7\u7a0b\n\n\nloop = get_event_loop()\nwhile True:\n    event = loop.get_event()\n    process_event(event)\n\n\n\n\ncoroutine \u534f\u7a0b\n\n\n\u4f7f\u7528yield\u7684\u51fd\u6570,\u82e5\u7528send\u6765\u63a7\u5236,\u5c31\u7b97coroutine\u4e86,\u82e5\u7528for\u5faa\u73af\u6765\u63a7\u5236,\u5c31\u7b97generator\u6216\u8005iterator,\u4f7f\u7528\u65b9\u6cd5\u5927\u591a\u89c1\u4e8e\ndecorator, \u5982tornado\u4e2d\u7684gen.coroutine\u3002\n\n\ndef consumer():\n    r = ''\n    while True:\n        n = yield r\n        if not n:\n            return\n        print('[CONSUMER] Consuming %s...' % n)\n        r = '200 OK'\n\ndef produce(c):\n    c.send(None)\n    n = 0\n    while n \n 5:\n        n = n + 1\n        print('[PRODUCER] Producing %s...' % n)\n        r = c.send(n)\n        print('[PRODUCER] Consumer return: %s' % r)\n    c.close()\n\nc = consumer()\nproduce(c)\n'''\n[PRODUCER] Producing 1...\n[CONSUMER] Consuming 1...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 2...\n[CONSUMER] Consuming 2...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 3...\n[CONSUMER] Consuming 3...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 4...\n[CONSUMER] Consuming 4...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 5...\n[CONSUMER] Consuming 5...\n[PRODUCER] Consumer return: 200 OK\n'''\n\n\n\n\n\u6ce8\u610f\u5230consumer\u51fd\u6570\u662f\u4e00\u4e2agenerator\uff0c\u628a\u4e00\u4e2aconsumer\u4f20\u5165produce\u540e\uff1a\n\n\n\u9996\u5148\u8c03\u7528c.send(None)\u542f\u52a8\u751f\u6210\u5668\uff1b\n\n\n\u7136\u540e\uff0c\u4e00\u65e6\u751f\u4ea7\u4e86\u4e1c\u897f\uff0c\u901a\u8fc7c.send(n)\u5207\u6362\u5230consumer\u6267\u884c\uff1b\n\n\nconsumer\u901a\u8fc7yield\u62ff\u5230\u6d88\u606f\uff0c\u5904\u7406\uff0c\u53c8\u901a\u8fc7yield\u628a\u7ed3\u679c\u4f20\u56de\uff1b\n\n\nproduce\u62ff\u5230consumer\u5904\u7406\u7684\u7ed3\u679c\uff0c\u7ee7\u7eed\u751f\u4ea7\u4e0b\u4e00\u6761\u6d88\u606f\uff1b\n\n\nproduce\u51b3\u5b9a\u4e0d\u751f\u4ea7\u4e86\uff0c\u901a\u8fc7c.close()\u5173\u95edconsumer\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u3002\n\n\n\u6574\u4e2a\u6d41\u7a0b\u65e0\u9501\uff0c\u7531\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0cproduce\u548cconsumer\u534f\u4f5c\u5b8c\u6210\u4efb\u52a1\uff0c\u6240\u4ee5\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u800c\u975e\u7ebf\u7a0b\u7684\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\n\n\nhttps://docs.python.org/3/library/asyncio-task.html\nhttp://blog.ez2learn.com/2010/07/17/talk-about-coroutine-and-gevent/\nhttp://www.oschina.net/translate/improve-your-python-yield-and-generators-explained\n\n\nasyncio\n\n\nasyncio\u662fPython 3.4\u7248\u672c\u5f15\u5165\u7684\u6807\u51c6\u5e93\uff0c\u76f4\u63a5\u5185\u7f6e\u4e86\u5bf9\u5f02\u6b65IO\u7684\u652f\u6301\u3002\n\n\nasyncio\u7684\u7f16\u7a0b\u6a21\u578b\u5c31\u662f\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u3002\u6211\u4eec\u4eceasyncio\u6a21\u5757\u4e2d\u76f4\u63a5\u83b7\u53d6\u4e00\u4e2aEventLoop\u7684\u5f15\u7528\uff0c\u7136\u540e\u628a\u9700\u8981\u6267\u884c\u7684\u534f\u7a0b\u6254\u5230EventLoop\u4e2d\u6267\u884c\uff0c\u5c31\u5b9e\u73b0\u4e86\u5f02\u6b65IO\u3002\n\n\n\u7528asyncio\u5b9e\u73b0Hello world\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\nimport asyncio\n\n@asyncio.coroutine\ndef hello():\n    print(\nHello world!\n)\n    # \u5f02\u6b65\u8c03\u7528asyncio.sleep(1):\n    r = yield from asyncio.sleep(1)\n    print(\nHello again!\n)\n\n# \u83b7\u53d6EventLoop:\nloop = asyncio.get_event_loop()\n# \u6267\u884ccoroutine\nloop.run_until_complete(hello())\nloop.close()\n\n\n\n\n@asyncio.coroutine\u628a\u4e00\u4e2agenerator\u6807\u8bb0\u4e3acoroutine\u7c7b\u578b\uff0c\u7136\u540e\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2acoroutine\u6254\u5230EventLoop\u4e2d\u6267\u884c\u3002\n\n\nhello()\u4f1a\u9996\u5148\u6253\u5370\u51faHello world!\uff0c\u7136\u540e\uff0cyield from\u8bed\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u65b9\u4fbf\u5730\u8c03\u7528\u53e6\u4e00\u4e2agenerator\u3002\u7531\u4e8easyncio.sleep()\u4e5f\u662f\u4e00\u4e2acoroutine\uff0c\u6240\u4ee5\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85asyncio.sleep()\uff0c\u800c\u662f\u76f4\u63a5\u4e2d\u65ad\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u3002\u5f53asyncio.sleep()\u8fd4\u56de\u65f6\uff0c\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4eceyield from\u62ff\u5230\u8fd4\u56de\u503c\uff08\u6b64\u5904\u662fNone\uff09\uff0c\u7136\u540e\u63a5\u7740\u6267\u884c\u4e0b\u4e00\u884c\u8bed\u53e5\u3002\n\n\n\u628aasyncio.sleep(1)\u770b\u6210\u662f\u4e00\u4e2a\u8017\u65f61\u79d2\u7684IO\u64cd\u4f5c\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e3b\u7ebf\u7a0b\u5e76\u672a\u7b49\u5f85\uff0c\u800c\u662f\u53bb\u6267\u884cEventLoop\u4e2d\u5176\u4ed6\u53ef\u4ee5\u6267\u884c\u7684coroutine\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002\n\n\n\u6211\u4eec\u7528Task\u5c01\u88c5\u4e24\u4e2acoroutine\u8bd5\u8bd5\uff1a\n\n\nimport threading\nimport asyncio\n\n@asyncio.coroutine\ndef hello():\n    print('Hello world! (%s)' % threading.currentThread())\n    yield from asyncio.sleep(1)\n    print('Hello again! (%s)' % threading.currentThread())\n\nloop = asyncio.get_event_loop()\ntasks = [hello(), hello()]\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()\n'''\nHello world! (\n_MainThread(MainThread, started 140735195337472)\n)\nHello world! (\n_MainThread(MainThread, started 140735195337472)\n)\n(\u6682\u505c\u7ea61\u79d2)\nHello again! (\n_MainThread(MainThread, started 140735195337472)\n)\nHello again! (\n_MainThread(MainThread, started 140735195337472)\n)\n'''\n\n\n\n\n\u7531\u6253\u5370\u7684\u5f53\u524d\u7ebf\u7a0b\u540d\u79f0\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2acoroutine\u662f\u7531\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u7684\u3002\n\n\n\u5982\u679c\u628aasyncio.sleep()\u6362\u6210\u771f\u6b63\u7684IO\u64cd\u4f5c\uff0c\u5219\u591a\u4e2acoroutine\u5c31\u53ef\u4ee5\u7531\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u3002\n\n\n\u6211\u4eec\u7528asyncio\u7684\u5f02\u6b65\u7f51\u7edc\u8fde\u63a5\u6765\u83b7\u53d6sina\u3001sohu\u548c163\u7684\u7f51\u7ad9\u9996\u9875\uff1a\n\n\nimport asyncio\n\n@asyncio.coroutine\ndef wget(host):\n    print('wget %s...' % host)\n    connect = asyncio.open_connection(host, 80)\n    reader, writer = yield from connect\n    header = 'GET / HTTP/1.0\\r\\nHost: %s\\r\\n\\r\\n' % host\n    writer.write(header.encode('utf-8'))\n    yield from writer.drain()\n    while True:\n        line = yield from reader.readline()\n        if line == b'\\r\\n':\n            break\n        print('%s header \n %s' % (host, line.decode('utf-8').rstrip()))\n    # Ignore the body, close the socket\n    writer.close()\n\nloop = asyncio.get_event_loop()\ntasks = [wget(host) for host in ['www.sina.com.cn', 'www.sohu.com', 'www.163.com']]\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()\n'''\nwget www.sohu.com...\nwget www.sina.com.cn...\nwget www.163.com...\n(\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4)\n(\u6253\u5370\u51fasohu\u7684header)\nwww.sohu.com header \n HTTP/1.1 200 OK\nwww.sohu.com header \n Content-Type: text/html\n...\n(\u6253\u5370\u51fasina\u7684header)\nwww.sina.com.cn header \n HTTP/1.1 200 OK\nwww.sina.com.cn header \n Date: Wed, 20 May 2015 04:56:33 GMT\n...\n(\u6253\u5370\u51fa163\u7684header)\nwww.163.com header \n HTTP/1.0 302 Moved Temporarily\nwww.163.com header \n Server: Cdn Cache Server V2.0\n'''\n\n\n\n\nasync/await\n\n\n\u7528asyncio\u63d0\u4f9b\u7684@asyncio.coroutine\u53ef\u4ee5\u628a\u4e00\u4e2agenerator\u6807\u8bb0\u4e3acoroutine\u7c7b\u578b\uff0c\u7136\u540e\u5728coroutine\u5185\u90e8\u7528yield from\u8c03\u7528\u53e6\u4e00\u4e2acoroutine\u5b9e\u73b0\u5f02\u6b65\u64cd\u4f5c\u3002\n\n\n\u4e3a\u4e86\u7b80\u5316\u5e76\u66f4\u597d\u5730\u6807\u8bc6\u5f02\u6b65IO\uff0c\u4ecePython 3.5\u5f00\u59cb\u5f15\u5165\u4e86\u65b0\u7684\u8bed\u6cd5async\u548cawait\uff0c\u53ef\u4ee5\u8ba9coroutine\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\u6613\u8bfb\u3002\n\n\n\u8bf7\u6ce8\u610f\uff0casync\u548cawait\u662f\u9488\u5bf9coroutine\u7684\u65b0\u8bed\u6cd5\uff0c\u8981\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5\uff0c\u53ea\u9700\u8981\u505a\u4e24\u6b65\u7b80\u5355\u7684\u66ff\u6362\uff1a\n\n\n\n\n\u628a@asyncio.coroutine\u66ff\u6362\u4e3aasync\uff1b\n\n\n\u628ayield from\u66ff\u6362\u4e3aawait\u3002\n\u8ba9\u6211\u4eec\u5bf9\u6bd4\u4e00\u4e0b\u4e0a\u4e00\u8282\u7684\u4ee3\u7801\uff1a\n\n\n\n\n@asyncio.coroutine\ndef hello():\n    print(\nHello world!\n)\n    r = yield from asyncio.sleep(1)\n    print(\nHello again!\n)\n\n\n\n\n\u7528\u65b0\u8bed\u6cd5\u91cd\u65b0\u7f16\u5199\u5982\u4e0b\uff1a\n\n\nasync def hello():\n    print(\nHello world!\n)\n    r = await asyncio.sleep(1)\n    print(\nHello again!\n)", 
            "title": "\u534f\u7a0b"
        }, 
        {
            "location": "/python/py_coroutine/#_1", 
            "text": "", 
            "title": "\u534f\u7a0b"
        }, 
        {
            "location": "/python/py_coroutine/#io", 
            "text": "\u7531\u4e8e\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662fCPU\u9ad8\u901f\u6267\u884c\u80fd\u529b\u548cIO\u8bbe\u5907\u7684\u9f9f\u901f\u4e25\u91cd\u4e0d\u5339\u914d\uff0c\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u53ea\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\n\u53e6\u4e00\u79cd\u89e3\u51b3IO\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5f02\u6b65IO,\u5f53\u4ee3\u7801\u9700\u8981\u6267\u884c\u4e00\u4e2a\u8017\u65f6\u7684IO\u64cd\u4f5c\u65f6\uff0c\u5b83\u53ea\u53d1\u51faIO\u6307\u4ee4\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u7136\u540e\u5c31\u53bb\u6267\u884c\u5176\u4ed6\u4ee3\u7801\u4e86\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5f53IO\u8fd4\u56de\u7ed3\u679c\u65f6\uff0c\u518d\u901a\u77e5CPU\u8fdb\u884c\u5904\u7406\n\u5f02\u6b65IO\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u5728\u6d88\u606f\u5faa\u73af\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u65ad\u5730\u91cd\u590d\u201c\u8bfb\u53d6\u6d88\u606f-\u5904\u7406\u6d88\u606f\u201d\u8fd9\u4e00\u8fc7\u7a0b  loop = get_event_loop()\nwhile True:\n    event = loop.get_event()\n    process_event(event)", 
            "title": "\u5f02\u6b65IO"
        }, 
        {
            "location": "/python/py_coroutine/#coroutine", 
            "text": "\u4f7f\u7528yield\u7684\u51fd\u6570,\u82e5\u7528send\u6765\u63a7\u5236,\u5c31\u7b97coroutine\u4e86,\u82e5\u7528for\u5faa\u73af\u6765\u63a7\u5236,\u5c31\u7b97generator\u6216\u8005iterator,\u4f7f\u7528\u65b9\u6cd5\u5927\u591a\u89c1\u4e8e\ndecorator, \u5982tornado\u4e2d\u7684gen.coroutine\u3002  def consumer():\n    r = ''\n    while True:\n        n = yield r\n        if not n:\n            return\n        print('[CONSUMER] Consuming %s...' % n)\n        r = '200 OK'\n\ndef produce(c):\n    c.send(None)\n    n = 0\n    while n   5:\n        n = n + 1\n        print('[PRODUCER] Producing %s...' % n)\n        r = c.send(n)\n        print('[PRODUCER] Consumer return: %s' % r)\n    c.close()\n\nc = consumer()\nproduce(c)\n'''\n[PRODUCER] Producing 1...\n[CONSUMER] Consuming 1...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 2...\n[CONSUMER] Consuming 2...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 3...\n[CONSUMER] Consuming 3...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 4...\n[CONSUMER] Consuming 4...\n[PRODUCER] Consumer return: 200 OK\n[PRODUCER] Producing 5...\n[CONSUMER] Consuming 5...\n[PRODUCER] Consumer return: 200 OK\n'''  \u6ce8\u610f\u5230consumer\u51fd\u6570\u662f\u4e00\u4e2agenerator\uff0c\u628a\u4e00\u4e2aconsumer\u4f20\u5165produce\u540e\uff1a  \u9996\u5148\u8c03\u7528c.send(None)\u542f\u52a8\u751f\u6210\u5668\uff1b  \u7136\u540e\uff0c\u4e00\u65e6\u751f\u4ea7\u4e86\u4e1c\u897f\uff0c\u901a\u8fc7c.send(n)\u5207\u6362\u5230consumer\u6267\u884c\uff1b  consumer\u901a\u8fc7yield\u62ff\u5230\u6d88\u606f\uff0c\u5904\u7406\uff0c\u53c8\u901a\u8fc7yield\u628a\u7ed3\u679c\u4f20\u56de\uff1b  produce\u62ff\u5230consumer\u5904\u7406\u7684\u7ed3\u679c\uff0c\u7ee7\u7eed\u751f\u4ea7\u4e0b\u4e00\u6761\u6d88\u606f\uff1b  produce\u51b3\u5b9a\u4e0d\u751f\u4ea7\u4e86\uff0c\u901a\u8fc7c.close()\u5173\u95edconsumer\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u3002  \u6574\u4e2a\u6d41\u7a0b\u65e0\u9501\uff0c\u7531\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0cproduce\u548cconsumer\u534f\u4f5c\u5b8c\u6210\u4efb\u52a1\uff0c\u6240\u4ee5\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u800c\u975e\u7ebf\u7a0b\u7684\u62a2\u5360\u5f0f\u591a\u4efb\u52a1  https://docs.python.org/3/library/asyncio-task.html\nhttp://blog.ez2learn.com/2010/07/17/talk-about-coroutine-and-gevent/\nhttp://www.oschina.net/translate/improve-your-python-yield-and-generators-explained", 
            "title": "coroutine \u534f\u7a0b"
        }, 
        {
            "location": "/python/py_coroutine/#asyncio", 
            "text": "asyncio\u662fPython 3.4\u7248\u672c\u5f15\u5165\u7684\u6807\u51c6\u5e93\uff0c\u76f4\u63a5\u5185\u7f6e\u4e86\u5bf9\u5f02\u6b65IO\u7684\u652f\u6301\u3002  asyncio\u7684\u7f16\u7a0b\u6a21\u578b\u5c31\u662f\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u3002\u6211\u4eec\u4eceasyncio\u6a21\u5757\u4e2d\u76f4\u63a5\u83b7\u53d6\u4e00\u4e2aEventLoop\u7684\u5f15\u7528\uff0c\u7136\u540e\u628a\u9700\u8981\u6267\u884c\u7684\u534f\u7a0b\u6254\u5230EventLoop\u4e2d\u6267\u884c\uff0c\u5c31\u5b9e\u73b0\u4e86\u5f02\u6b65IO\u3002  \u7528asyncio\u5b9e\u73b0Hello world\u4ee3\u7801\u5982\u4e0b\uff1a  import asyncio\n\n@asyncio.coroutine\ndef hello():\n    print( Hello world! )\n    # \u5f02\u6b65\u8c03\u7528asyncio.sleep(1):\n    r = yield from asyncio.sleep(1)\n    print( Hello again! )\n\n# \u83b7\u53d6EventLoop:\nloop = asyncio.get_event_loop()\n# \u6267\u884ccoroutine\nloop.run_until_complete(hello())\nloop.close()  @asyncio.coroutine\u628a\u4e00\u4e2agenerator\u6807\u8bb0\u4e3acoroutine\u7c7b\u578b\uff0c\u7136\u540e\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2acoroutine\u6254\u5230EventLoop\u4e2d\u6267\u884c\u3002  hello()\u4f1a\u9996\u5148\u6253\u5370\u51faHello world!\uff0c\u7136\u540e\uff0cyield from\u8bed\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u65b9\u4fbf\u5730\u8c03\u7528\u53e6\u4e00\u4e2agenerator\u3002\u7531\u4e8easyncio.sleep()\u4e5f\u662f\u4e00\u4e2acoroutine\uff0c\u6240\u4ee5\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85asyncio.sleep()\uff0c\u800c\u662f\u76f4\u63a5\u4e2d\u65ad\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u3002\u5f53asyncio.sleep()\u8fd4\u56de\u65f6\uff0c\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4eceyield from\u62ff\u5230\u8fd4\u56de\u503c\uff08\u6b64\u5904\u662fNone\uff09\uff0c\u7136\u540e\u63a5\u7740\u6267\u884c\u4e0b\u4e00\u884c\u8bed\u53e5\u3002  \u628aasyncio.sleep(1)\u770b\u6210\u662f\u4e00\u4e2a\u8017\u65f61\u79d2\u7684IO\u64cd\u4f5c\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e3b\u7ebf\u7a0b\u5e76\u672a\u7b49\u5f85\uff0c\u800c\u662f\u53bb\u6267\u884cEventLoop\u4e2d\u5176\u4ed6\u53ef\u4ee5\u6267\u884c\u7684coroutine\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002  \u6211\u4eec\u7528Task\u5c01\u88c5\u4e24\u4e2acoroutine\u8bd5\u8bd5\uff1a  import threading\nimport asyncio\n\n@asyncio.coroutine\ndef hello():\n    print('Hello world! (%s)' % threading.currentThread())\n    yield from asyncio.sleep(1)\n    print('Hello again! (%s)' % threading.currentThread())\n\nloop = asyncio.get_event_loop()\ntasks = [hello(), hello()]\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()\n'''\nHello world! ( _MainThread(MainThread, started 140735195337472) )\nHello world! ( _MainThread(MainThread, started 140735195337472) )\n(\u6682\u505c\u7ea61\u79d2)\nHello again! ( _MainThread(MainThread, started 140735195337472) )\nHello again! ( _MainThread(MainThread, started 140735195337472) )\n'''  \u7531\u6253\u5370\u7684\u5f53\u524d\u7ebf\u7a0b\u540d\u79f0\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2acoroutine\u662f\u7531\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u7684\u3002  \u5982\u679c\u628aasyncio.sleep()\u6362\u6210\u771f\u6b63\u7684IO\u64cd\u4f5c\uff0c\u5219\u591a\u4e2acoroutine\u5c31\u53ef\u4ee5\u7531\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u3002  \u6211\u4eec\u7528asyncio\u7684\u5f02\u6b65\u7f51\u7edc\u8fde\u63a5\u6765\u83b7\u53d6sina\u3001sohu\u548c163\u7684\u7f51\u7ad9\u9996\u9875\uff1a  import asyncio\n\n@asyncio.coroutine\ndef wget(host):\n    print('wget %s...' % host)\n    connect = asyncio.open_connection(host, 80)\n    reader, writer = yield from connect\n    header = 'GET / HTTP/1.0\\r\\nHost: %s\\r\\n\\r\\n' % host\n    writer.write(header.encode('utf-8'))\n    yield from writer.drain()\n    while True:\n        line = yield from reader.readline()\n        if line == b'\\r\\n':\n            break\n        print('%s header   %s' % (host, line.decode('utf-8').rstrip()))\n    # Ignore the body, close the socket\n    writer.close()\n\nloop = asyncio.get_event_loop()\ntasks = [wget(host) for host in ['www.sina.com.cn', 'www.sohu.com', 'www.163.com']]\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()\n'''\nwget www.sohu.com...\nwget www.sina.com.cn...\nwget www.163.com...\n(\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4)\n(\u6253\u5370\u51fasohu\u7684header)\nwww.sohu.com header   HTTP/1.1 200 OK\nwww.sohu.com header   Content-Type: text/html\n...\n(\u6253\u5370\u51fasina\u7684header)\nwww.sina.com.cn header   HTTP/1.1 200 OK\nwww.sina.com.cn header   Date: Wed, 20 May 2015 04:56:33 GMT\n...\n(\u6253\u5370\u51fa163\u7684header)\nwww.163.com header   HTTP/1.0 302 Moved Temporarily\nwww.163.com header   Server: Cdn Cache Server V2.0\n'''", 
            "title": "asyncio"
        }, 
        {
            "location": "/python/py_coroutine/#asyncawait", 
            "text": "\u7528asyncio\u63d0\u4f9b\u7684@asyncio.coroutine\u53ef\u4ee5\u628a\u4e00\u4e2agenerator\u6807\u8bb0\u4e3acoroutine\u7c7b\u578b\uff0c\u7136\u540e\u5728coroutine\u5185\u90e8\u7528yield from\u8c03\u7528\u53e6\u4e00\u4e2acoroutine\u5b9e\u73b0\u5f02\u6b65\u64cd\u4f5c\u3002  \u4e3a\u4e86\u7b80\u5316\u5e76\u66f4\u597d\u5730\u6807\u8bc6\u5f02\u6b65IO\uff0c\u4ecePython 3.5\u5f00\u59cb\u5f15\u5165\u4e86\u65b0\u7684\u8bed\u6cd5async\u548cawait\uff0c\u53ef\u4ee5\u8ba9coroutine\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\u6613\u8bfb\u3002  \u8bf7\u6ce8\u610f\uff0casync\u548cawait\u662f\u9488\u5bf9coroutine\u7684\u65b0\u8bed\u6cd5\uff0c\u8981\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5\uff0c\u53ea\u9700\u8981\u505a\u4e24\u6b65\u7b80\u5355\u7684\u66ff\u6362\uff1a   \u628a@asyncio.coroutine\u66ff\u6362\u4e3aasync\uff1b  \u628ayield from\u66ff\u6362\u4e3aawait\u3002\n\u8ba9\u6211\u4eec\u5bf9\u6bd4\u4e00\u4e0b\u4e0a\u4e00\u8282\u7684\u4ee3\u7801\uff1a   @asyncio.coroutine\ndef hello():\n    print( Hello world! )\n    r = yield from asyncio.sleep(1)\n    print( Hello again! )  \u7528\u65b0\u8bed\u6cd5\u91cd\u65b0\u7f16\u5199\u5982\u4e0b\uff1a  async def hello():\n    print( Hello world! )\n    r = await asyncio.sleep(1)\n    print( Hello again! )", 
            "title": "async/await"
        }, 
        {
            "location": "/python/py_gui/", 
            "text": "GUI\u56fe\u5f62\u7f16\u7a0b\n\n\nPython\u652f\u6301\u591a\u79cd\u56fe\u5f62\u754c\u9762\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5305\u62ec\uff1a\n\n\n\n\nTk\n\n\nwxWidgets\n\n\nQt\n\n\nGTK\n\n\n\n\nTkinter\n\n\nfrom tkinter import *\nimport tkinter.messagebox as messagebox\n\nclass Application(Frame):\n    def __init__(self, master=None):\n        Frame.__init__(self, master)\n        self.pack()\n        self.createWidgets()\n\n    def createWidgets(self):\n        self.nameInput = Entry(self)\n        self.nameInput.pack()\n        self.alertButton = Button(self, text='Hello', command=self.hello)\n        self.alertButton.pack()\n\n    def hello(self):\n        name = self.nameInput.get() or 'world'\n        messagebox.showinfo('Message', 'Hello, %s' % name)\n\napp = Application()\n# \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898:\napp.master.title('Hello World')\n# \u4e3b\u6d88\u606f\u5faa\u73af:\napp.mainloop()\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u7a97\u4f53,\u5f53\u7528\u6237\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u89e6\u53d1\nhello()\n\uff0c\u901a\u8fc7\nself.nameInput.get()\n\u83b7\u5f97\u7528\u6237\u8f93\u5165\u7684\u6587\u672c\u540e\uff0c\u4f7f\u7528\ntkMessageBox.showinfo()\n\u53ef\u4ee5\u5f39\u51fa\u6d88\u606f\u5bf9\u8bdd\u6846", 
            "title": "\u56fe\u5f62\u754c\u9762\u7f16\u7a0b"
        }, 
        {
            "location": "/python/py_gui/#gui", 
            "text": "Python\u652f\u6301\u591a\u79cd\u56fe\u5f62\u754c\u9762\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5305\u62ec\uff1a   Tk  wxWidgets  Qt  GTK", 
            "title": "GUI\u56fe\u5f62\u7f16\u7a0b"
        }, 
        {
            "location": "/python/py_gui/#tkinter", 
            "text": "from tkinter import *\nimport tkinter.messagebox as messagebox\n\nclass Application(Frame):\n    def __init__(self, master=None):\n        Frame.__init__(self, master)\n        self.pack()\n        self.createWidgets()\n\n    def createWidgets(self):\n        self.nameInput = Entry(self)\n        self.nameInput.pack()\n        self.alertButton = Button(self, text='Hello', command=self.hello)\n        self.alertButton.pack()\n\n    def hello(self):\n        name = self.nameInput.get() or 'world'\n        messagebox.showinfo('Message', 'Hello, %s' % name)\n\napp = Application()\n# \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898:\napp.master.title('Hello World')\n# \u4e3b\u6d88\u606f\u5faa\u73af:\napp.mainloop()  \u521b\u5efa\u4e00\u4e2a\u7a97\u4f53,\u5f53\u7528\u6237\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u89e6\u53d1 hello() \uff0c\u901a\u8fc7 self.nameInput.get() \u83b7\u5f97\u7528\u6237\u8f93\u5165\u7684\u6587\u672c\u540e\uff0c\u4f7f\u7528 tkMessageBox.showinfo() \u53ef\u4ee5\u5f39\u51fa\u6d88\u606f\u5bf9\u8bdd\u6846", 
            "title": "Tkinter"
        }, 
        {
            "location": "/python/py_diff2/", 
            "text": "Python 2.7.x \u548c Python 3.x \u7684\u4e3b\u8981\u533a\u522b\n\n\n\u8bb8\u591a Python \u521d\u5b66\u8005\u60f3\u77e5\u9053\u4ed6\u4eec\u5e94\u8be5\u4ece Python \u7684\u54ea\u4e2a\u7248\u672c\u5f00\u59cb\u5b66\u4e60\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6211\u7684\u7b54\u6848\u662f \u201c\u4f60\u5b66\u4e60\u4f60\u559c\u6b22\u7684\u6559\u7a0b\u7684\u7248\u672c\uff0c\u7136\u540e\u68c0\u67e5\u4ed6\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u3002\"\n\n\n\u4f46\u662f\u5982\u679c\u4f60\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u5e76\u4e14\u6709\u9009\u62e9\u6743\uff1f\u6211\u60f3\u8bf4\u7684\u662f\u76ee\u524d\u6ca1\u6709\u5bf9\u9519\uff0c\u53ea\u8981\u4f60\u8ba1\u5212\u4f7f\u7528\u7684\u5e93 Python 2.7.x \u548c Python 3.x \u53cc\u65b9\u90fd\u652f\u6301\u7684\u8bdd\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5f53\u5728\u7f16\u5199\u5b83\u4eec\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u7684\u4ee3\u7801\uff0c\u6216\u8005\u662f\u4f60\u8ba1\u5212\u79fb\u690d\u4f60\u7684\u9879\u76ee\u7684\u65f6\u5019\uff0c\u662f\u975e\u5e38\u503c\u5f97\u770b\u770b\u8fd9\u4e24\u4e2a\u4e3b\u8981\u6d41\u884c\u7684 Python \u7248\u672c\u4e4b\u95f4\u7684\u5dee\u522b\u7684\uff0c\u4ee5\u4fbf\u907f\u514d\u5e38\u89c1\u7684\u9677\u9631\u3002\n\n\n\u4f7f\u7528 \nfuture\n \u6a21\u5757\n\n\n\u7528\u9014:\u5728 Python 2 \u91cc\u5bfc\u5165\u90a3\u4e9b\u5728 Python 3 \u91cc\u624d\u751f\u6548\u7684\u6a21\u5757\u548c\u51fd\u6570:\n\n\nfrom __future__ import division\n\n\n\n\nprint \u51fd\u6570\n\n\n\u5f88\u7410\u788e\uff0c\u800c print \u8bed\u6cd5\u7684\u53d8\u5316\u53ef\u80fd\u662f\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684\u4e86\uff0c\u4f46\u662f\u4ecd\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a Python 2 \u7684 print \u58f0\u660e\u5df2\u7ecf\u88ab print() \u51fd\u6570\u53d6\u4ee3\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u5305\u88c5\u6211\u4eec\u60f3\u6253\u5370\u5728\u5c0f\u62ec\u53f7\u4e2d\u7684\u5bf9\u8c61\u3002\nPython 2 \u4e0d\u5177\u6709\u989d\u5916\u7684\u5c0f\u62ec\u53f7\u95ee\u9898\u3002\u4f46\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167 Python 2 \u7684\u65b9\u5f0f\u4e0d\u4f7f\u7528\u5c0f\u62ec\u53f7\u8c03\u7528 print \u51fd\u6570\uff0cPython 3 \u5c06\u629b\u51fa\u4e00\u4e2a\u8bed\u6cd5\u5f02\u5e38\uff08SyntaxError\uff09\u3002\n\n\nPython 2\n\n\nprint 'Python', python_version()\nprint 'Hello, World!'\nprint('Hello, World!')\nprint \ntext\n, ; print 'print more text on the same line'\n\n\n\n\nPython 3\n\n\nprint('Python', python_version())\nprint('Hello, World!')\n\nprint(\nsome text,\n, end=\n) \nprint(' print more text on the same line')\n\n\n\n\n\u6574\u9664 Integer division\n\n\n\u5982\u679c\u4f60\u6b63\u5728\u79fb\u690d\u4ee3\u7801\uff0c\u8fd9\u4e2a\u53d8\u5316\u662f\u7279\u522b\u5371\u9669\u7684\u3002\u6216\u8005\u4f60\u5728 Python 2 \u4e0a\u6267\u884c Python 3 \u7684\u4ee3\u7801\u3002\u56e0\u4e3a\u8fd9\u4e2a\u6574\u9664\u7684\u53d8\u5316\u8868\u73b0\u5728\u5b83\u4f1a\u88ab\u5ffd\u89c6\uff08\u5373\u5b83\u4e0d\u4f1a\u629b\u51fa\u8bed\u6cd5\u5f02\u5e38\uff09\u3002\n\n\n\u56e0\u6b64\uff0c\u6211\u8fd8\u662f\u503e\u5411\u4e8e\u4f7f\u7528\u4e00\u4e2a float(3)/2 \u6216 3/2.0 \u4ee3\u66ff\u5728\u6211\u7684 Python 3 \u811a\u672c\u4fdd\u5b58\u5728 Python 2 \u4e2d\u7684 3/2 \u7684\u4e00\u4e9b\u9ebb\u70e6\uff08\u5e76\u4e14\u53cd\u800c\u8fc7\u6765\u4e5f\u4e00\u6837\uff0c\u6211\u5efa\u8bae\u5728\u4f60\u7684 Python 2 \u811a\u672c\u4e2d\u4f7f\u7528 from \nfuture\n import division\uff09\n\n\nPython 2\n\n\nprint 'Python', python_version()\nprint '3 / 2 =', 3 / 2\nprint '3 // 2 =', 3 // 2\nprint '3 / 2.0 =', 3 / 2.0\nprint '3 // 2.0 =', 3 // 2.0\n\n'''\nPython 2.7.6\n3 / 2 = 1\n3 // 2 = 1\n3 / 2.0 = 1.5\n3 // 2.0 = 1.0\n'''\n\n\n\n\nPython 3\n\n\nprint('Python', python_version())\nprint('3 / 2 =', 3 / 2)\nprint('3 // 2 =', 3 // 2)\nprint('3 / 2.0 =', 3 / 2.0)\nprint('3 // 2.0 =', 3 // 2.0)\n'''\nPython 3.4.1\n3 / 2 = 1.5\n3 // 2 = 1\n3 / 2.0 = 1.5\n3 // 2.0 = 1.0\n'''\n\n\n\n\nUnicode\n\n\nPython 2 \u6709 \nASCII str()\n \u7c7b\u578b\uff0c\nunicode()\n \u662f\u5355\u72ec\u7684\uff0c\u4e0d\u662f\nbyte\n \u7c7b\u578b\u3002\n\u73b0\u5728\uff0c \u5728 Python 3\uff0c\u6211\u4eec\u6700\u7ec8\u6709\u4e86\nUnicode (utf-8)\n \u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b57\u8282\u7c7b\uff1a\nbyte\n \u548c\nbytearrays\n\u3002\n\n\nPython 2\n\n\nprint type(unicode('this is like a python3 str type'))\n'''output is :\ntype 'unicode'\n'''\n\nprint type(b'byte type does not exist')\n'''output is : \ntype 'str'\n'''\n\nprint 'they are really' + b' the same'\n'''output is :they are really the same'''\n\nprint type(bytearray(b'bytearray oddly does exist though'))\n'''output is :\ntype 'bytearray'\n'''\n\n\n\n\nPython 3\n\n\nprint('Python', python_version(), end=\n)\nprint(' has', type(b' bytes for storing data'))\n'''Python 3.4.1 has \nclass 'bytes'\n'''\n\nprint('and Python', python_version(), end=\n)\nprint(' also has', type(bytearray(b'bytearrays')))\n'''and Python 3.4.1 also has \nclass 'bytearray'\n'''\n\n\n\n\n\nxrange\n\n\nPython 2 \u91cc\u7684range() \u548c xrange() \u8fd8\u662f\u6709\u70b9\u533a\u522b\u7684. xrange() \u66f4\u50cf\u4e00\u4e2a\u751f\u6210\u5668.range()\u751f\u6210\u7684\u662flist.\nPython 3 \u91cc\u53d6\u6d88\u4e86xrange() \u4ee3\u4e4b\u4ee5range() \u5b9e\u9645\u4e0a Python 3 \u628a\u5f88\u591a\u8fd4\u56de\u4e3aList\u7684\u6539\u6210\u4e86itrable.\n\n\nRaising exceptions\n\n\npython2\n\n\nraise IOError, \nfile error\n\n\n\n\n\npython3\n\n\nraise (IOError, \nfile error\n)\n\n\n\n\nHandling exceptions\n\n\npython2\n\n\ntry:\n    let_us_cause_a_NameError\nexcept NameError, err:\n    print err, '--\n our error message'\n\n\n\n\npython3\n\n\ntry:\n    let_us_cause_a_NameError\nexcept NameError as err:\n    print(err, '--\n our error message')\n\n\n\n\nnext() \u51fd\u6570 \u548c .next() \u65b9\u6cd5\n\n\n.next()\n\u5728python\u4e2d\u88ab\u79fb\u9664,\u4e24\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u7528\nnext()\n\n\npython2\n\n\nmy_generator = (letter for letter in 'abcdefg')\n\nnext(my_generator)\nmy_generator.next()\n\n\n\n\npython3\n\n\nmy_generator = (letter for letter in 'abcdefg')\n\nnext(my_generator)\n\n\n\n\nFor \u5faa\u73af\u53d8\u91cf\u548c\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u6cc4\u6f0f\n\n\n\u5728 Python 3.x \u4e2d for \u5faa\u73af\u53d8\u91cf\u4e0d\u4f1a\u518d\u5bfc\u81f4\u547d\u540d\u7a7a\u95f4\u6cc4\u6f0f\n\n\npython2\n\n\ni = 1\nprint 'before: i =', i\n\nprint 'comprehension: ', [i for i in range(5)]\n\nprint 'after: i =', i\n\n'''\nbefore: i = 1\ncomprehension:  [0, 1, 2, 3, 4]\nafter: i = 4\n'''\n\n\n\n\npython3\n\n\ni = 1\nprint('before: i =', i)\n\nprint('comprehension:', [i for i in range(5)])\n\nprint('after: i =', i)\n\n'''\nbefore: i = 1\ncomprehension: [0, 1, 2, 3, 4]\nafter: i = 1\n'''\n\n\n\n\n\u6bd4\u8f83\u4e0d\u53ef\u6392\u5e8f\u7c7b\u578b\n\n\n\u5728 Python 3 \u4e2d\u7684\u53e6\u5916\u4e00\u4e2a\u53d8\u5316\u5c31\u662f\u5f53\u5bf9\u4e0d\u53ef\u6392\u5e8f\u7c7b\u578b\u505a\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a\u7c7b\u578b\u9519\u8bef\u3002\n\n\npython2\n\n\nprint \n(1, 2) \n 'foo' = \n, (1, 2) \n 'foo'\n'''\n(1, 2) \n 'foo' =  True\n'''\n\n\n\n\npython3\n\n\nprint(\n[1, 2] \n 'foo' = \n, [1, 2] \n 'foo')\n'''\nTypeError\n'''\n\n\n\n\n\u901a\u8fc7 \ninput()\n\u89e3\u6790\u7528\u6237\u7684\u8f93\u5165\n\n\npython 2\u91cc \u6211\u4eec\u6709\ninput()\n\u548c\nraw_input()\n,\u533a\u522b\u662f\nraw_input()\n\u4f1a\u8bb2\u8f93\u5165\u8fd4\u56destr.\u800ci\nnput()\n\u4f1a\u8bd5\u56fe\u6267\u884c\u8f93\u5165.\nPython 3 \u91cc\u7684\ninput()\n\u8fd4\u56de\u5b57\u7b26\u4e32,\u4e0d\u518d\u6709\nraw_input()\n,\u5982\u679c\u60f3\u6267\u884c\u8f93\u5165,\u53ef\u4ee5\neval(input())\n\n\n\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5217\u8868\n\n\nPython 2\n\n\nprint 'Python', python_version() \n\nprint range(3) \nprint type(range(3))\n\n'''\nPython 2.7.6\n[0, 1, 2]\n\ntype 'list'\n\n'''\n\n\n\n\nPython 3\n\n\nprint('Python', python_version())\n\nprint(range(3))\nprint(type(range(3)))\nprint(list(range(3)))\n\n'''\nPython 3.4.1\nrange(0, 3)\n\nclass 'range'\n\n[0, 1, 2]\n'''\n\n\n\n\n\u5728 Python 3 \u4e2d\u4e00\u4e9b\u7ecf\u5e38\u4f7f\u7528\u5230\u7684\u4e0d\u518d\u8fd4\u56de\u5217\u8868\u7684\u51fd\u6570\u548c\u65b9\u6cd5\uff1a\n+ zip()\n+ map()\n+ filter()\n+ dictionary's .keys() method\n+ dictionary's .values() method\n+ dictionary's .items() method\n\n\nLink\n\n\n\n\nWhat\u2019s New In Python 3.0?", 
            "title": "python2/3\u5bf9\u6bd4"
        }, 
        {
            "location": "/python/py_diff2/#python-27x-python-3x", 
            "text": "\u8bb8\u591a Python \u521d\u5b66\u8005\u60f3\u77e5\u9053\u4ed6\u4eec\u5e94\u8be5\u4ece Python \u7684\u54ea\u4e2a\u7248\u672c\u5f00\u59cb\u5b66\u4e60\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6211\u7684\u7b54\u6848\u662f \u201c\u4f60\u5b66\u4e60\u4f60\u559c\u6b22\u7684\u6559\u7a0b\u7684\u7248\u672c\uff0c\u7136\u540e\u68c0\u67e5\u4ed6\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u3002\"  \u4f46\u662f\u5982\u679c\u4f60\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u5e76\u4e14\u6709\u9009\u62e9\u6743\uff1f\u6211\u60f3\u8bf4\u7684\u662f\u76ee\u524d\u6ca1\u6709\u5bf9\u9519\uff0c\u53ea\u8981\u4f60\u8ba1\u5212\u4f7f\u7528\u7684\u5e93 Python 2.7.x \u548c Python 3.x \u53cc\u65b9\u90fd\u652f\u6301\u7684\u8bdd\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5f53\u5728\u7f16\u5199\u5b83\u4eec\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u7684\u4ee3\u7801\uff0c\u6216\u8005\u662f\u4f60\u8ba1\u5212\u79fb\u690d\u4f60\u7684\u9879\u76ee\u7684\u65f6\u5019\uff0c\u662f\u975e\u5e38\u503c\u5f97\u770b\u770b\u8fd9\u4e24\u4e2a\u4e3b\u8981\u6d41\u884c\u7684 Python \u7248\u672c\u4e4b\u95f4\u7684\u5dee\u522b\u7684\uff0c\u4ee5\u4fbf\u907f\u514d\u5e38\u89c1\u7684\u9677\u9631\u3002", 
            "title": "Python 2.7.x \u548c Python 3.x \u7684\u4e3b\u8981\u533a\u522b"
        }, 
        {
            "location": "/python/py_diff2/#future", 
            "text": "\u7528\u9014:\u5728 Python 2 \u91cc\u5bfc\u5165\u90a3\u4e9b\u5728 Python 3 \u91cc\u624d\u751f\u6548\u7684\u6a21\u5757\u548c\u51fd\u6570:  from __future__ import division", 
            "title": "\u4f7f\u7528 future \u6a21\u5757"
        }, 
        {
            "location": "/python/py_diff2/#print", 
            "text": "\u5f88\u7410\u788e\uff0c\u800c print \u8bed\u6cd5\u7684\u53d8\u5316\u53ef\u80fd\u662f\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684\u4e86\uff0c\u4f46\u662f\u4ecd\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a Python 2 \u7684 print \u58f0\u660e\u5df2\u7ecf\u88ab print() \u51fd\u6570\u53d6\u4ee3\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u5305\u88c5\u6211\u4eec\u60f3\u6253\u5370\u5728\u5c0f\u62ec\u53f7\u4e2d\u7684\u5bf9\u8c61\u3002\nPython 2 \u4e0d\u5177\u6709\u989d\u5916\u7684\u5c0f\u62ec\u53f7\u95ee\u9898\u3002\u4f46\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167 Python 2 \u7684\u65b9\u5f0f\u4e0d\u4f7f\u7528\u5c0f\u62ec\u53f7\u8c03\u7528 print \u51fd\u6570\uff0cPython 3 \u5c06\u629b\u51fa\u4e00\u4e2a\u8bed\u6cd5\u5f02\u5e38\uff08SyntaxError\uff09\u3002", 
            "title": "print \u51fd\u6570"
        }, 
        {
            "location": "/python/py_diff2/#python-2", 
            "text": "print 'Python', python_version()\nprint 'Hello, World!'\nprint('Hello, World!')\nprint  text , ; print 'print more text on the same line'", 
            "title": "Python 2"
        }, 
        {
            "location": "/python/py_diff2/#python-3", 
            "text": "print('Python', python_version())\nprint('Hello, World!')\n\nprint( some text, , end= ) \nprint(' print more text on the same line')", 
            "title": "Python 3"
        }, 
        {
            "location": "/python/py_diff2/#integer-division", 
            "text": "\u5982\u679c\u4f60\u6b63\u5728\u79fb\u690d\u4ee3\u7801\uff0c\u8fd9\u4e2a\u53d8\u5316\u662f\u7279\u522b\u5371\u9669\u7684\u3002\u6216\u8005\u4f60\u5728 Python 2 \u4e0a\u6267\u884c Python 3 \u7684\u4ee3\u7801\u3002\u56e0\u4e3a\u8fd9\u4e2a\u6574\u9664\u7684\u53d8\u5316\u8868\u73b0\u5728\u5b83\u4f1a\u88ab\u5ffd\u89c6\uff08\u5373\u5b83\u4e0d\u4f1a\u629b\u51fa\u8bed\u6cd5\u5f02\u5e38\uff09\u3002  \u56e0\u6b64\uff0c\u6211\u8fd8\u662f\u503e\u5411\u4e8e\u4f7f\u7528\u4e00\u4e2a float(3)/2 \u6216 3/2.0 \u4ee3\u66ff\u5728\u6211\u7684 Python 3 \u811a\u672c\u4fdd\u5b58\u5728 Python 2 \u4e2d\u7684 3/2 \u7684\u4e00\u4e9b\u9ebb\u70e6\uff08\u5e76\u4e14\u53cd\u800c\u8fc7\u6765\u4e5f\u4e00\u6837\uff0c\u6211\u5efa\u8bae\u5728\u4f60\u7684 Python 2 \u811a\u672c\u4e2d\u4f7f\u7528 from  future  import division\uff09", 
            "title": "\u6574\u9664 Integer division"
        }, 
        {
            "location": "/python/py_diff2/#python-2_1", 
            "text": "print 'Python', python_version()\nprint '3 / 2 =', 3 / 2\nprint '3 // 2 =', 3 // 2\nprint '3 / 2.0 =', 3 / 2.0\nprint '3 // 2.0 =', 3 // 2.0\n\n'''\nPython 2.7.6\n3 / 2 = 1\n3 // 2 = 1\n3 / 2.0 = 1.5\n3 // 2.0 = 1.0\n'''", 
            "title": "Python 2"
        }, 
        {
            "location": "/python/py_diff2/#python-3_1", 
            "text": "print('Python', python_version())\nprint('3 / 2 =', 3 / 2)\nprint('3 // 2 =', 3 // 2)\nprint('3 / 2.0 =', 3 / 2.0)\nprint('3 // 2.0 =', 3 // 2.0)\n'''\nPython 3.4.1\n3 / 2 = 1.5\n3 // 2 = 1\n3 / 2.0 = 1.5\n3 // 2.0 = 1.0\n'''", 
            "title": "Python 3"
        }, 
        {
            "location": "/python/py_diff2/#unicode", 
            "text": "Python 2 \u6709  ASCII str()  \u7c7b\u578b\uff0c unicode()  \u662f\u5355\u72ec\u7684\uff0c\u4e0d\u662f byte  \u7c7b\u578b\u3002\n\u73b0\u5728\uff0c \u5728 Python 3\uff0c\u6211\u4eec\u6700\u7ec8\u6709\u4e86 Unicode (utf-8)  \u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b57\u8282\u7c7b\uff1a byte  \u548c bytearrays \u3002", 
            "title": "Unicode"
        }, 
        {
            "location": "/python/py_diff2/#python-2_2", 
            "text": "print type(unicode('this is like a python3 str type'))\n'''output is : type 'unicode' '''\n\nprint type(b'byte type does not exist')\n'''output is :  type 'str' '''\n\nprint 'they are really' + b' the same'\n'''output is :they are really the same'''\n\nprint type(bytearray(b'bytearray oddly does exist though'))\n'''output is : type 'bytearray' '''", 
            "title": "Python 2"
        }, 
        {
            "location": "/python/py_diff2/#python-3_2", 
            "text": "print('Python', python_version(), end= )\nprint(' has', type(b' bytes for storing data'))\n'''Python 3.4.1 has  class 'bytes' '''\n\nprint('and Python', python_version(), end= )\nprint(' also has', type(bytearray(b'bytearrays')))\n'''and Python 3.4.1 also has  class 'bytearray' '''", 
            "title": "Python 3"
        }, 
        {
            "location": "/python/py_diff2/#xrange", 
            "text": "Python 2 \u91cc\u7684range() \u548c xrange() \u8fd8\u662f\u6709\u70b9\u533a\u522b\u7684. xrange() \u66f4\u50cf\u4e00\u4e2a\u751f\u6210\u5668.range()\u751f\u6210\u7684\u662flist.\nPython 3 \u91cc\u53d6\u6d88\u4e86xrange() \u4ee3\u4e4b\u4ee5range() \u5b9e\u9645\u4e0a Python 3 \u628a\u5f88\u591a\u8fd4\u56de\u4e3aList\u7684\u6539\u6210\u4e86itrable.", 
            "title": "xrange"
        }, 
        {
            "location": "/python/py_diff2/#raising-exceptions", 
            "text": "", 
            "title": "Raising exceptions"
        }, 
        {
            "location": "/python/py_diff2/#python2", 
            "text": "raise IOError,  file error", 
            "title": "python2"
        }, 
        {
            "location": "/python/py_diff2/#python3", 
            "text": "raise (IOError,  file error )", 
            "title": "python3"
        }, 
        {
            "location": "/python/py_diff2/#handling-exceptions", 
            "text": "", 
            "title": "Handling exceptions"
        }, 
        {
            "location": "/python/py_diff2/#python2_1", 
            "text": "try:\n    let_us_cause_a_NameError\nexcept NameError, err:\n    print err, '--  our error message'", 
            "title": "python2"
        }, 
        {
            "location": "/python/py_diff2/#python3_1", 
            "text": "try:\n    let_us_cause_a_NameError\nexcept NameError as err:\n    print(err, '--  our error message')", 
            "title": "python3"
        }, 
        {
            "location": "/python/py_diff2/#next-next", 
            "text": ".next() \u5728python\u4e2d\u88ab\u79fb\u9664,\u4e24\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u7528 next()", 
            "title": "next() \u51fd\u6570 \u548c .next() \u65b9\u6cd5"
        }, 
        {
            "location": "/python/py_diff2/#python2_2", 
            "text": "my_generator = (letter for letter in 'abcdefg')\n\nnext(my_generator)\nmy_generator.next()", 
            "title": "python2"
        }, 
        {
            "location": "/python/py_diff2/#python3_2", 
            "text": "my_generator = (letter for letter in 'abcdefg')\n\nnext(my_generator)", 
            "title": "python3"
        }, 
        {
            "location": "/python/py_diff2/#for", 
            "text": "\u5728 Python 3.x \u4e2d for \u5faa\u73af\u53d8\u91cf\u4e0d\u4f1a\u518d\u5bfc\u81f4\u547d\u540d\u7a7a\u95f4\u6cc4\u6f0f", 
            "title": "For \u5faa\u73af\u53d8\u91cf\u548c\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u6cc4\u6f0f"
        }, 
        {
            "location": "/python/py_diff2/#python2_3", 
            "text": "i = 1\nprint 'before: i =', i\n\nprint 'comprehension: ', [i for i in range(5)]\n\nprint 'after: i =', i\n\n'''\nbefore: i = 1\ncomprehension:  [0, 1, 2, 3, 4]\nafter: i = 4\n'''", 
            "title": "python2"
        }, 
        {
            "location": "/python/py_diff2/#python3_3", 
            "text": "i = 1\nprint('before: i =', i)\n\nprint('comprehension:', [i for i in range(5)])\n\nprint('after: i =', i)\n\n'''\nbefore: i = 1\ncomprehension: [0, 1, 2, 3, 4]\nafter: i = 1\n'''", 
            "title": "python3"
        }, 
        {
            "location": "/python/py_diff2/#_1", 
            "text": "\u5728 Python 3 \u4e2d\u7684\u53e6\u5916\u4e00\u4e2a\u53d8\u5316\u5c31\u662f\u5f53\u5bf9\u4e0d\u53ef\u6392\u5e8f\u7c7b\u578b\u505a\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a\u7c7b\u578b\u9519\u8bef\u3002", 
            "title": "\u6bd4\u8f83\u4e0d\u53ef\u6392\u5e8f\u7c7b\u578b"
        }, 
        {
            "location": "/python/py_diff2/#python2_4", 
            "text": "print  (1, 2)   'foo' =  , (1, 2)   'foo'\n'''\n(1, 2)   'foo' =  True\n'''", 
            "title": "python2"
        }, 
        {
            "location": "/python/py_diff2/#python3_4", 
            "text": "print( [1, 2]   'foo' =  , [1, 2]   'foo')\n'''\nTypeError\n'''", 
            "title": "python3"
        }, 
        {
            "location": "/python/py_diff2/#input", 
            "text": "python 2\u91cc \u6211\u4eec\u6709 input() \u548c raw_input() ,\u533a\u522b\u662f raw_input() \u4f1a\u8bb2\u8f93\u5165\u8fd4\u56destr.\u800ci nput() \u4f1a\u8bd5\u56fe\u6267\u884c\u8f93\u5165.\nPython 3 \u91cc\u7684 input() \u8fd4\u56de\u5b57\u7b26\u4e32,\u4e0d\u518d\u6709 raw_input() ,\u5982\u679c\u60f3\u6267\u884c\u8f93\u5165,\u53ef\u4ee5 eval(input())", 
            "title": "\u901a\u8fc7 input()\u89e3\u6790\u7528\u6237\u7684\u8f93\u5165"
        }, 
        {
            "location": "/python/py_diff2/#_2", 
            "text": "", 
            "title": "\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5217\u8868"
        }, 
        {
            "location": "/python/py_diff2/#python-2_3", 
            "text": "print 'Python', python_version() \n\nprint range(3) \nprint type(range(3))\n\n'''\nPython 2.7.6\n[0, 1, 2] type 'list' \n'''", 
            "title": "Python 2"
        }, 
        {
            "location": "/python/py_diff2/#python-3_3", 
            "text": "print('Python', python_version())\n\nprint(range(3))\nprint(type(range(3)))\nprint(list(range(3)))\n\n'''\nPython 3.4.1\nrange(0, 3) class 'range' \n[0, 1, 2]\n'''  \u5728 Python 3 \u4e2d\u4e00\u4e9b\u7ecf\u5e38\u4f7f\u7528\u5230\u7684\u4e0d\u518d\u8fd4\u56de\u5217\u8868\u7684\u51fd\u6570\u548c\u65b9\u6cd5\uff1a\n+ zip()\n+ map()\n+ filter()\n+ dictionary's .keys() method\n+ dictionary's .values() method\n+ dictionary's .items() method", 
            "title": "Python 3"
        }, 
        {
            "location": "/python/py_diff2/#link", 
            "text": "What\u2019s New In Python 3.0?", 
            "title": "Link"
        }, 
        {
            "location": "/python/py_modules/", 
            "text": "python\u6a21\u5757\u4f7f\u7528\n\n\nrequests\n\n\n#requests \u81ea\u5e26 session\u3002\n#http://docs.python-requests.org/en/latest/user/advanced/#session-objects\n\n#\u5982\u679c\u60f3\u66f4\u6539\u67d0\u4e2a cookie\u3002\ndef update_cookie(cookiejar, cookie):\n    _cookies = requests.cookies\n    _cookies.remove_cookie_by_name(cookiejar, 'cookie_name')\n    cookiejar.set_cookie(_cookies.create_cookie('cookie_name', cookie, **{'domain': '.example.com'}))\n\n\n\n\nMySQLdb\n\n\nMySQLdb \u662fpython\u662f\u7684mysql driver.\n\nMySQLdb Sourceforge\n\nwin\u4e0b\u8f7d\u5bf9\u5e94\u7684exe\u7248\u672c:\n\nhttps://pypi.python.org/pypi/MySQL-python/1.2.5\n\n\n\u5b89\u88c5\n\n\npip install mysql-python\n\n\n\n\n\u5e2e\u52a9\n\n\n\n\n\u7248\u672c\u4fe1\u606f\n\n\n\n\n#\u67e5\u770bping\u5bf9\u8c61\u5e2e\u52a9\nimport MySQLdb;   help(MySQLdb._mysql.connection.ping)\n#\u67e5\u770b\u7248\u672c\nprint(MySQLdb._mysql.__version__)\n\n\n\n\n\n\n\u57fa\u7840\u51fd\u6570\n\n\n\n\nimport MySQLdb\n\nif __name__ == '__main__':\n    print(dir(MySQLdb._mysql))\n    print(dir(MySQLdb._mysql.connection))\n\n## \u8f93\u51fa\n#mysql\u5bf9\u8c61\n['DataError', 'DatabaseError', 'Error', 'IntegrityError', 'InterfaceError', 'InternalError', 'MySQLError', 'NULL', 'NotSupportedError', 'OperationalError', 'ProgrammingError', 'Warning', 'connect', 'connection', 'debug', 'escape', 'escape_dict', 'escape_sequence', 'escape_string', 'get_client_info', 'result', 'server_end', 'server_init', 'string_literal', 'thread_safe', 'version_info']\n\n#connection\u5bf9\u8c61\n['affected_rows', 'autocommit', 'change_user', 'character_set_name', 'client_flag', 'close', 'commit', 'converter', 'dump_debug_info', 'errno', 'error', 'escape', 'escape_string', 'field_count', 'get_autocommit', 'get_character_set_info', 'get_host_info', 'get_proto_info', 'get_server_info', 'info', 'insert_id', 'kill', 'next_result', 'open', 'ping', 'port', 'query', 'rollback', 'select_db', 'server_capabilities', 'set_character_set', 'set_server_option', 'shutdown', 'sqlstate', 'stat', 'store_result', 'string_literal', 'thread_id', 'use_result', 'warning_count']\n\n\n\n\n\n\u57fa\u672c\u7528\u4f8b\n\n\n\n\nselect \u67e5\u8be2\n\n\n\n\ncur = conn.cursor(cursorclass=MySQLdb.cursors.DictCursor)\ncur.execute(sql)\nresult = cur.fetchall()\ncur.close()\n\n\n\n\n\n\n\u6267\u884c\u5176\u4ed6sql\n\n\n\n\nconn.autocommit(True)\ncur = conn.cursor()\nresult = cur.execute(sql)\ncur.close()\n\n\n\n\n\u89e3\u51b3mysql has gone away\u95ee\u9898\n\n\ndef build_conn(self):\n        ret =None\n        try:\n            ret = MySQLdb.connect(host=self.host, user=self.user, passwd=self.passwd, db=self.db, port=self.port,charset=\nutf8\n,connect_timeout=20)\n        except Exception, e:\n            writeLog(traceback.format_exc())\n        return ret\n\n    def get_conn(self):\n        if self.conn == None:\n            self.conn = self.build_conn()\n        else:\n            try:\n                # fix reconnect\n                self.conn.ping()\n            except Exception, e:\n                self.close_conn()\n                # print(\nerror\n,e)\n                writeLog(traceback.format_exc())\n                self.conn = self.build_conn()\n        return self.conn\n\n    def close_conn(self):\n        if self.conn:\n            self.conn.close()\n            self.conn = None\n\n\n\n\n\u5b8c\u6574util\n\n\nimport MySQLdb\nimport traceback\nfrom mylog import writeLog\n\nclass mymysqldb(object):\n\n    def __init__(self, host, user, passwd, db, port):\n        self.host = str(host)\n        self.user = str(user)\n        self.passwd = str(passwd)\n        self.db = str(db)\n        self.port = int(port)\n        self.conn = None\n\n    def build_conn(self):\n        ret =None\n        try:\n            ret = MySQLdb.connect(host=self.host, user=self.user, passwd=self.passwd, db=self.db, port=self.port,charset=\nutf8\n,connect_timeout=20)\n        except Exception, e:\n            writeLog(traceback.format_exc())\n        return ret\n\n    def get_conn(self):\n        if self.conn == None:\n            self.conn = self.build_conn()\n        else:\n            try:\n                # fix reconnect\n                self.conn.ping()\n            except Exception, e:\n                self.close_conn()\n                # print(\nerror\n,e)\n                writeLog(traceback.format_exc())\n                self.conn = self.build_conn()\n        return self.conn\n\n    def close_conn(self):\n        if self.conn:\n            self.conn.close()\n            self.conn = None\n\n    def excute_sql(self, sql):\n        conn = self.get_conn()\n        if conn == None:\n            return 0\n\n        try:\n            conn.autocommit(True)\n            cur = conn.cursor()\n            result = cur.execute(sql)\n            cur.close()\n            return result\n        except:\n            writeLog(traceback.format_exc())\n            self.close_conn()\n            return 0\n\n        return 0\n\n    def select_sql(self, sql):\n\n        conn = self.get_conn()\n        if conn == None:\n            return None\n\n        try:\n            cur = conn.cursor(cursorclass=MySQLdb.cursors.DictCursor)\n            cur.execute(sql)\n            result = cur.fetchall()\n            cur.close()\n            return result\n        except:\n            writeLog(traceback.format_exc())\n            self.close_conn()\n            return None\n\n        return None\n\n    def escape_string(self, string):\n        result = ''\n\n        for c in string:\n            escape = None\n            char_num = ord(c)\n\n            if char_num == 0:\n                escape = '0'\n            elif char_num == ord('\\''):\n                escape = '\\''\n            elif char_num == ord('\n'):\n                escape = '\n'\n            elif char_num == ord('\\b'):\n                escape = 'b'\n            elif char_num == ord('\\n'):\n                escape = 'n'\n            elif char_num == ord('\\r'):\n                escape = 'r'\n            elif char_num == ord('\\t'):\n                escape = 't'\n            elif char_num == 26:\n                escape = 'Z'\n            elif char_num == ord('\\\\'):\n                escape = '\\\\'\n            elif char_num == ord('%'):\n                escape = '%'\n\n            if escape:\n                result = result + '\\\\' + escape\n            else:\n                result = result + c\n\n        return result\n\n#----------------------------------------------------------------------\n# testing reconnect ,  in mysql setting, set global wait_timeout=5; trigger the error of \nMySQL has gone away\n\n#----------------------------------------------------------------------\nimport time\nif __name__ == '__main__':\n    db = mymysqldb('127.0.0.1','root','12345678','t_log',3306)\n    print(\nresult\n,db.select_sql('SELECT * FROM t_visit'))\n    time.sleep(6)\n    print(\nresult111\n,db.select_sql('SELECT * FROM t_visit'))\n    # time.sleep(6)\n    print(\nresult2222\n,db.select_sql('SELECT * FROM t_visit'))", 
            "title": "\u5e38\u7528\u5e93"
        }, 
        {
            "location": "/python/py_modules/#python", 
            "text": "", 
            "title": "python\u6a21\u5757\u4f7f\u7528"
        }, 
        {
            "location": "/python/py_modules/#requests", 
            "text": "#requests \u81ea\u5e26 session\u3002\n#http://docs.python-requests.org/en/latest/user/advanced/#session-objects\n\n#\u5982\u679c\u60f3\u66f4\u6539\u67d0\u4e2a cookie\u3002\ndef update_cookie(cookiejar, cookie):\n    _cookies = requests.cookies\n    _cookies.remove_cookie_by_name(cookiejar, 'cookie_name')\n    cookiejar.set_cookie(_cookies.create_cookie('cookie_name', cookie, **{'domain': '.example.com'}))", 
            "title": "requests"
        }, 
        {
            "location": "/python/py_modules/#mysqldb", 
            "text": "MySQLdb \u662fpython\u662f\u7684mysql driver. MySQLdb Sourceforge \nwin\u4e0b\u8f7d\u5bf9\u5e94\u7684exe\u7248\u672c: https://pypi.python.org/pypi/MySQL-python/1.2.5", 
            "title": "MySQLdb"
        }, 
        {
            "location": "/python/py_modules/#_1", 
            "text": "pip install mysql-python", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_modules/#_2", 
            "text": "\u7248\u672c\u4fe1\u606f   #\u67e5\u770bping\u5bf9\u8c61\u5e2e\u52a9\nimport MySQLdb;   help(MySQLdb._mysql.connection.ping)\n#\u67e5\u770b\u7248\u672c\nprint(MySQLdb._mysql.__version__)   \u57fa\u7840\u51fd\u6570   import MySQLdb\n\nif __name__ == '__main__':\n    print(dir(MySQLdb._mysql))\n    print(dir(MySQLdb._mysql.connection))\n\n## \u8f93\u51fa\n#mysql\u5bf9\u8c61\n['DataError', 'DatabaseError', 'Error', 'IntegrityError', 'InterfaceError', 'InternalError', 'MySQLError', 'NULL', 'NotSupportedError', 'OperationalError', 'ProgrammingError', 'Warning', 'connect', 'connection', 'debug', 'escape', 'escape_dict', 'escape_sequence', 'escape_string', 'get_client_info', 'result', 'server_end', 'server_init', 'string_literal', 'thread_safe', 'version_info']\n\n#connection\u5bf9\u8c61\n['affected_rows', 'autocommit', 'change_user', 'character_set_name', 'client_flag', 'close', 'commit', 'converter', 'dump_debug_info', 'errno', 'error', 'escape', 'escape_string', 'field_count', 'get_autocommit', 'get_character_set_info', 'get_host_info', 'get_proto_info', 'get_server_info', 'info', 'insert_id', 'kill', 'next_result', 'open', 'ping', 'port', 'query', 'rollback', 'select_db', 'server_capabilities', 'set_character_set', 'set_server_option', 'shutdown', 'sqlstate', 'stat', 'store_result', 'string_literal', 'thread_id', 'use_result', 'warning_count']", 
            "title": "\u5e2e\u52a9"
        }, 
        {
            "location": "/python/py_modules/#_3", 
            "text": "select \u67e5\u8be2   cur = conn.cursor(cursorclass=MySQLdb.cursors.DictCursor)\ncur.execute(sql)\nresult = cur.fetchall()\ncur.close()   \u6267\u884c\u5176\u4ed6sql   conn.autocommit(True)\ncur = conn.cursor()\nresult = cur.execute(sql)\ncur.close()", 
            "title": "\u57fa\u672c\u7528\u4f8b"
        }, 
        {
            "location": "/python/py_modules/#mysql-has-gone-away", 
            "text": "def build_conn(self):\n        ret =None\n        try:\n            ret = MySQLdb.connect(host=self.host, user=self.user, passwd=self.passwd, db=self.db, port=self.port,charset= utf8 ,connect_timeout=20)\n        except Exception, e:\n            writeLog(traceback.format_exc())\n        return ret\n\n    def get_conn(self):\n        if self.conn == None:\n            self.conn = self.build_conn()\n        else:\n            try:\n                # fix reconnect\n                self.conn.ping()\n            except Exception, e:\n                self.close_conn()\n                # print( error ,e)\n                writeLog(traceback.format_exc())\n                self.conn = self.build_conn()\n        return self.conn\n\n    def close_conn(self):\n        if self.conn:\n            self.conn.close()\n            self.conn = None", 
            "title": "\u89e3\u51b3mysql has gone away\u95ee\u9898"
        }, 
        {
            "location": "/python/py_modules/#util", 
            "text": "import MySQLdb\nimport traceback\nfrom mylog import writeLog\n\nclass mymysqldb(object):\n\n    def __init__(self, host, user, passwd, db, port):\n        self.host = str(host)\n        self.user = str(user)\n        self.passwd = str(passwd)\n        self.db = str(db)\n        self.port = int(port)\n        self.conn = None\n\n    def build_conn(self):\n        ret =None\n        try:\n            ret = MySQLdb.connect(host=self.host, user=self.user, passwd=self.passwd, db=self.db, port=self.port,charset= utf8 ,connect_timeout=20)\n        except Exception, e:\n            writeLog(traceback.format_exc())\n        return ret\n\n    def get_conn(self):\n        if self.conn == None:\n            self.conn = self.build_conn()\n        else:\n            try:\n                # fix reconnect\n                self.conn.ping()\n            except Exception, e:\n                self.close_conn()\n                # print( error ,e)\n                writeLog(traceback.format_exc())\n                self.conn = self.build_conn()\n        return self.conn\n\n    def close_conn(self):\n        if self.conn:\n            self.conn.close()\n            self.conn = None\n\n    def excute_sql(self, sql):\n        conn = self.get_conn()\n        if conn == None:\n            return 0\n\n        try:\n            conn.autocommit(True)\n            cur = conn.cursor()\n            result = cur.execute(sql)\n            cur.close()\n            return result\n        except:\n            writeLog(traceback.format_exc())\n            self.close_conn()\n            return 0\n\n        return 0\n\n    def select_sql(self, sql):\n\n        conn = self.get_conn()\n        if conn == None:\n            return None\n\n        try:\n            cur = conn.cursor(cursorclass=MySQLdb.cursors.DictCursor)\n            cur.execute(sql)\n            result = cur.fetchall()\n            cur.close()\n            return result\n        except:\n            writeLog(traceback.format_exc())\n            self.close_conn()\n            return None\n\n        return None\n\n    def escape_string(self, string):\n        result = ''\n\n        for c in string:\n            escape = None\n            char_num = ord(c)\n\n            if char_num == 0:\n                escape = '0'\n            elif char_num == ord('\\''):\n                escape = '\\''\n            elif char_num == ord(' '):\n                escape = ' '\n            elif char_num == ord('\\b'):\n                escape = 'b'\n            elif char_num == ord('\\n'):\n                escape = 'n'\n            elif char_num == ord('\\r'):\n                escape = 'r'\n            elif char_num == ord('\\t'):\n                escape = 't'\n            elif char_num == 26:\n                escape = 'Z'\n            elif char_num == ord('\\\\'):\n                escape = '\\\\'\n            elif char_num == ord('%'):\n                escape = '%'\n\n            if escape:\n                result = result + '\\\\' + escape\n            else:\n                result = result + c\n\n        return result\n\n#----------------------------------------------------------------------\n# testing reconnect ,  in mysql setting, set global wait_timeout=5; trigger the error of  MySQL has gone away \n#----------------------------------------------------------------------\nimport time\nif __name__ == '__main__':\n    db = mymysqldb('127.0.0.1','root','12345678','t_log',3306)\n    print( result ,db.select_sql('SELECT * FROM t_visit'))\n    time.sleep(6)\n    print( result111 ,db.select_sql('SELECT * FROM t_visit'))\n    # time.sleep(6)\n    print( result2222 ,db.select_sql('SELECT * FROM t_visit'))", 
            "title": "\u5b8c\u6574util"
        }, 
        {
            "location": "/python/py_qt/", 
            "text": "\u5f00\u59cb\u7528pyqt\u9020\u7a97\u4f53\n\n\n\u4f9d\u8d56\u73af\u5883\n\n\n\n\nqt5.5.1\n\n\npython3.4\n\n\npyqt\n\n\npycharm\n\n\nqt designer\n\n\n\n\n\u5b89\u88c5\n\n\nwindows\u4e0b\u7684\u5b89\u88c5\u8fc7\u7a0b\u5c31\u4e0d\u518d\u7d2f\u8d58\u4e86\uff0c\u8bb2\u4e0bmac\u4e0b\u7684pyqt\u5b89\u88c5\n\n\n\n\n\u9996\u5148\u5b89\u88c5\nsip\n\n\n\n\n#sip\u5b89\u88c5\uff1a\npython configure.py\nmake\nmake install\n\n\n\n\n\n\n\u7f16\u8bd1pyqt\n\n\n\n\n#\u5982\u679cqt\u5b89\u88c5\u540e\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5b9aqmake\u8def\u5f84\npython configure.py --qmake /Users/far/Qt5.5.1/5.5/clang_64/bin/qmake\nmake\nmake install\n\n\n\n\n\u7f16\u8bd1\u5230\u6700\u540e\u4f1a\u62a5\u9519\u627e\u4e0d\u5230qpeolocation.h\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u4ecegithub\u4e0a\u4e0b\u8f7d\u4e00\u4e2a\u5934\u6587\u4ef6\u5230PyQt-gpl-5.5.1/QtPositioning/qgeolocation.h\uff0c\n\u5730\u5740\n\n\n\u5de5\u5177\u914d\u7f6e\n\n\n\n\npycharm\u7834\u89e3\n\n\u6ce8\u518c\u65f6\u9009\u62e9\u5728\u7ebf\u670d\u52a1\u5668\u6ce8\u518c\uff0c\u586b\u5165:\nhttp://idea.lanyus.com/\n\n\n\u914d\u7f6epycharm\n\n\n\u914d\u7f6eqtdesigner\u5de5\u5177,\u7528qtdesigner\u6253\u5f00\n.ui\n\u6587\u4ef6\n\n\n\n\u914d\u7f6epyuic\u5de5\u5177,\u5c06\n.ui\n\u6587\u4ef6\u8f6c\u6362\u6210\n.py\n\u6587\u4ef6\n\n\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u7684\u5916\u7f6e\u5de5\u5177\u6765\u7f16\u8f91\n.ui\n\u6587\u4ef6\u4e86\n\n\n\n\n\n\n\n\n\n\n\n\u5f00\u59cb\u6109\u5feb\u5730\u5199\u4ee3\u7801\n\n\nhttp://zetcode.com/gui/pyqt5/introduction/\n\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: anchen\n# @Date:   2015-07-27 20:19:33\n# @Last Modified by:   anchen\n# @Last Modified time: 2015-07-27 20:26:29\nimport sys\nfrom PyQt5.QtWidgets  import  QApplication,QWidget\nfrom PyQt5.QtGui import QIcon\n\nif  __name__ == '__main__':\n\n            app =  QApplication(sys.argv)\n\n            w = QWidget ()\n            w.resize(250,150)\n            w.move(300,300 )\n            w.setWindowTitle(\nsimpel window\n)\n            w.setWindowIcon(QIcon(\nicon.png\n))\n            w.show()\n\n            sys.exit(app.exec_())", 
            "title": "pyqt\u4f7f\u7528"
        }, 
        {
            "location": "/python/py_qt/#pyqt", 
            "text": "", 
            "title": "\u5f00\u59cb\u7528pyqt\u9020\u7a97\u4f53"
        }, 
        {
            "location": "/python/py_qt/#_1", 
            "text": "qt5.5.1  python3.4  pyqt  pycharm  qt designer", 
            "title": "\u4f9d\u8d56\u73af\u5883"
        }, 
        {
            "location": "/python/py_qt/#_2", 
            "text": "windows\u4e0b\u7684\u5b89\u88c5\u8fc7\u7a0b\u5c31\u4e0d\u518d\u7d2f\u8d58\u4e86\uff0c\u8bb2\u4e0bmac\u4e0b\u7684pyqt\u5b89\u88c5   \u9996\u5148\u5b89\u88c5 sip   #sip\u5b89\u88c5\uff1a\npython configure.py\nmake\nmake install   \u7f16\u8bd1pyqt   #\u5982\u679cqt\u5b89\u88c5\u540e\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5b9aqmake\u8def\u5f84\npython configure.py --qmake /Users/far/Qt5.5.1/5.5/clang_64/bin/qmake\nmake\nmake install  \u7f16\u8bd1\u5230\u6700\u540e\u4f1a\u62a5\u9519\u627e\u4e0d\u5230qpeolocation.h\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u4ecegithub\u4e0a\u4e0b\u8f7d\u4e00\u4e2a\u5934\u6587\u4ef6\u5230PyQt-gpl-5.5.1/QtPositioning/qgeolocation.h\uff0c \u5730\u5740", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_qt/#_3", 
            "text": "pycharm\u7834\u89e3 \n\u6ce8\u518c\u65f6\u9009\u62e9\u5728\u7ebf\u670d\u52a1\u5668\u6ce8\u518c\uff0c\u586b\u5165: http://idea.lanyus.com/  \u914d\u7f6epycharm  \u914d\u7f6eqtdesigner\u5de5\u5177,\u7528qtdesigner\u6253\u5f00 .ui \u6587\u4ef6  \u914d\u7f6epyuic\u5de5\u5177,\u5c06 .ui \u6587\u4ef6\u8f6c\u6362\u6210 .py \u6587\u4ef6  \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u7684\u5916\u7f6e\u5de5\u5177\u6765\u7f16\u8f91 .ui \u6587\u4ef6\u4e86", 
            "title": "\u5de5\u5177\u914d\u7f6e"
        }, 
        {
            "location": "/python/py_qt/#_4", 
            "text": "http://zetcode.com/gui/pyqt5/introduction/  #!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: anchen\n# @Date:   2015-07-27 20:19:33\n# @Last Modified by:   anchen\n# @Last Modified time: 2015-07-27 20:26:29\nimport sys\nfrom PyQt5.QtWidgets  import  QApplication,QWidget\nfrom PyQt5.QtGui import QIcon\n\nif  __name__ == '__main__':\n\n            app =  QApplication(sys.argv)\n\n            w = QWidget ()\n            w.resize(250,150)\n            w.move(300,300 )\n            w.setWindowTitle( simpel window )\n            w.setWindowIcon(QIcon( icon.png ))\n            w.show()\n\n            sys.exit(app.exec_())", 
            "title": "\u5f00\u59cb\u6109\u5feb\u5730\u5199\u4ee3\u7801"
        }, 
        {
            "location": "/python/py_tornado/", 
            "text": "python web\u6846\u67b6 tornado \u521d\u63a2\n\n\nTornado\n\n\ntornado \u662f\u4e00\u4e2a\u57fa\u4e8epython\u7684\u975e\u963b\u585e\u5f0f web \u670d\u52a1\u5668\n\n\nModule Map\n\n\n\n\n\n\nWeb framework\n\n\n\n\ntornado.web \u2014 RequestHandler and Application \u7c7b\n\n\ntornado.template \u2014  \u53ef\u6269\u5c55\u8f93\u51fa\u6a21\u677f\n\n\ntornado.escape \u2014 \u8f6c\u4e49\u548c\u5b57\u7b26\u4e32\u64cd\u4f5c\n\n\ntornado.locale \u2014 \u56fd\u9645\u5316\u652f\u6301\n\n\ntornado.websocket \u2014  \u5229\u7528websocket\u53cc\u5411\u901a\u4fe1\n\n\n\n\n\n\n\n\nHTTP servers and clients\n\n\n\n\ntornado.httpserver \u2014 \u975e\u963b\u585ehttp\u670d\u52a1\u5668\n\n\ntornado.httpclient \u2014  \u5f02\u6b65http\u8bf7\u6c42\n\n\ntornado.httputil \u2014 \u5904\u7406HTTP\u6807\u5934\u548cURL\n\n\ntornado.http1connection \u2013 HTTP/1.x \u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u5b9e\u73b0\n\n\n\n\n\n\n\n\nAsynchronous networking\n\n\n\n\ntornado.ioloop \u2014  \u4e8b\u4ef6\u9a71\u52a8\u4e3b\u5faa\u73af\n\n\ntornado.iostream \u2014 \u975e\u963b\u585esocket\u5305\u88c5\u7c7b\n\n\ntornado.netutil \u2014 \u5176\u4ed6\u7f51\u7edc\u5de5\u5177\n\n\ntornado.tcpclient \u2014\u57fa\u7840\u7684tcpclient\n\n\ntornado.tcpserver \u2014 \u57fa\u7840\u7684tcpserver\n\n\n\n\n\n\n\n\nCoroutines and concurrency\n\n\n\n\ntornado.gen \u2014 \u7b80\u5316\u5f02\u6b65\u4ee3\u7801\u7684\u6a21\u5757\n\n\ntornado.concurrent \u2014  \u540c\u6b65\u76f8\u5173\u7684threads \u548c futures\n\n\ntornado.locks \u2013 \u540c\u6b65\u539f\u8bed\n\n\ntornado.queues \u2013 \u534f\u7a0b\u961f\u5217\n\n\ntornado.process \u2014 \u591a\u5904\u7406\u5668\u5de5\u5177\u7c7b\n\n\n\n\n\n\n\n\nIntegration with other services\n\n\n\n\ntornado.auth \u2014  \u767b\u5f55\u9a8c\u8bc1\n\n\ntornado.wsgi \u2014  \u9002\u914d\u5176\u4ed6python,web\u6846\u67b6\n\n\ntornado.platform.asyncio \u2014 \u548cpython3.4\u7684\u5f02\u6b65IO\u5e93asyncio\u505a\u9002\u914d\n\n\ntornado.platform.caresresolver \u2014 \u5f02\u6b65DNS\u89e3\u6790,C-Ares\n\n\ntornado.platform.twisted \u2014 \u9002\u914dTwisted\u6846\u67b6\n\n\n\n\n\n\n\n\nUtilities\n\n\n\n\ntornado.autoreload \u2014 Automatically detect code changes in development\n\n\ntornado.log \u2014  \u65e5\u5fd7\n\n\ntornado.options \u2014 \u547d\u4ee4\u884c\u9009\u9879\n\n\ntornado.stack_context \u2014 \u5f02\u6b65\u56de\u8c03\u5f02\u5e38\u5904\u7406\n\n\ntornado.testing \u2014 \u5f02\u6b65\u4ee3\u7801\u7684\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301\n\n\ntornado.util \u2014 \u5e38\u89c4\u5de5\u5177\u7c7b\n\n\n\n\n\n\n\n\nhello world\n\n\nimport tornado.ioloop\nimport tornado.web\nclass MainHandler(tornado.web.RequestHandler):\n  def get(self):\n    self.write(\nHello, world,\n+subdomain)\n\ndef make_app():\n  return tornado.web.Application([\n    (r\n/\n, MainHandler),\n  ])\n\nif __name__ == \n__main__\n:\n  app = make_app()\n  app.listen(8888)\n  tornado.ioloop.IOLoop.current().start()\n\n  #\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165`http://localhost:8888/` \u53ef\u4ee5\u770b\u5230`Hello,world`\u7684\u8f93\u51fa\n\n\n\n\nhandler\n\n\nStaticFileHandler\n\n\ndef make_app():\n  return tornado.web.Application([\n    (r\n/static/(.*)\n, tornado.web.StaticFileHandler, {\npath\n: \nC:\\\\Users\\\\Administrator.PC-20150720QKHJ\\\\Desktop\\\\static\n}),\n  ])\n\n  # \u8f93\u5165: http://localhost:8888/static/a.txt \u53ef\u8bbf\u95eestatic\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5185\u5bb9\n\n\n\n\nget_argument \u83b7\u53d6\u53c2\u6570\n\n\nclass MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write('\nhtml\nbody\nform action=\n/\n method=\npost\n'\n                   '\ninput type=\ntext\n name=\nmessage\n'\n                   '\ninput type=\nsubmit\n value=\nSubmit\n'\n                   '\n/form\n/body\n/html\n')\n\n    def post(self):\n        self.set_header(\nContent-Type\n, \ntext/plain\n)\n        self.write(\nYou wrote \n + self.get_argument(\nmessage\n))\n\n\n\n\n\n\n\narguments - \u6240\u6709\u7684 GET \u6216 POST \u7684\u53c2\u6570\n\n\nfiles - \u6240\u6709\u901a\u8fc7 multipart/form-data POST \u8bf7\u6c42\u4e0a\u4f20\u7684\u6587\u4ef6\n\n\npath - \u8bf7\u6c42\u7684\u8def\u5f84\uff08 ? \u4e4b\u524d\u7684\u6240\u6709\u5185\u5bb9\uff09\n\n\nheaders - \u8bf7\u6c42\u7684\u5f00\u5934\u4fe1\u606f\n\n\n\n\ncoroutine\n\n\nimport tornado.ioloop\nimport tornado.web\nfrom tornado import gen\nfrom tornado.httpclient import AsyncHTTPClient\n\nclass MainHandler(tornado.web.RequestHandler):\n    @gen.coroutine\n    def get(self):\n        response = yield self.fetch_json(\nhttp://www.baidu.com\n)\n        self.write(response)\n\n    @gen.coroutine\n    def fetch_json(self, url):\n        response = yield AsyncHTTPClient().fetch(url)\n        raise gen.Return(response.body)\n\napplication = tornado.web.Application([\n    (r\n/\n, MainHandler),\n])\n\nif __name__ == \n__main__\n:\n    application.listen(8888)\n    tornado.ioloop.IOLoop.current().start()\n\n\n\n\ntornado   \u6cdb\u57df\u540d\n\n\nimport tornado.ioloop\nimport tornado.web\nclass MainHandler(tornado.web.RequestHandler):\n  def get(self):\n    subdomain = self.request.host.split(\n.\n)[0]\n    self.write(\nHello, world,\n+subdomain)\n\nclass DomainHandler(tornado.web.RequestHandler):\n  def get(self):\n    self.write(\nHello, a.com\n)\n\ndef make_app():\n  return tornado.web.Application([\n    (r\n/\n, MainHandler),\n  ])\n\nif __name__ == \n__main__\n:\n  app = make_app()\n  app.add_handlers(r\n^(www\\.)?a\\.com$\n, [\n    (r\n/\n, DomainHandler),\n  ])\n  app.listen(8888)\n  tornado.ioloop.IOLoop.current().start()\n\n  # \u5728Host\u4e2d\u52a0\u5165\u8fd9\u884c 127.0.0.1 a.com\n  #\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://a.com:8888  \u5219\u8f93\u51fa:Hello, a.com\n\n\n\n\ntornado ngnix \u53cd\u5411\u4ee3\u7406\u914d\u7f6e\n\n\n\u5982\u679c\u5728tornado\u5c42\u4e0d\u60f3\u505a\u6cdb\u57df\u540d\u89e3\u6790,\u53ef\u4ee5\u901a\u8fc7ngnix\u7684\u53cd\u5411\u4ee3\u7406\u6307\u5411tornado\u7684\u7aef\u53e3,ngnix\u914d\u7f6e\u5982\u4e0b:\n\n\nupstream tornado {\n    server 127.0.0.1:8888;\n}\nserver {\n      listen 80;\n      server_name test.com www.test.com;\n      location = /favicon.ico {\n          rewrite (.*) /static/favicon.ico;\n      }\n      location = /robots.txt {\n          rewrite (.*) /static/robots.txt;\n      }\n      location / {\n          proxy_pass_header Server;\n          proxy_set_header Host $http_host;\n          proxy_redirect off;\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Scheme $scheme;\n          proxy_pass http://tornado;\n      }\n}\n\n\n\n\nnginx\u53cd\u5411\u4ee3\u7406\u957f\u94fe\u63a5\n\n\nupstream chat_cluster{\n     ##\u591aserver\u8d1f\u8f7d,\u6839\u636eip_hash\u4f5c\u5206\u6d41\u4e5f\u53ef\u4ee5\u7528weight\u6743\u91cd\u5206\u6d41\n    server 127.0.0.1:10000;\n    server 127.0.0.1:10001;\n    ip_hash;\n    keepalive 1024;\n}\n\nserver\n{\n    listen 80;\n    server_name chat.rootk.com;\n\n    location / {\n        proxy_pass http://chat_cluster;\n        proxy_http_version 1.1;\n        # very important, nginx will waitting for the response from tornado\n        # if the time have passed more than 7200, nginx send http 504 to client\n        proxy_read_timeout 7200;\n        proxy_set_header Connection \n;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    }\n}", 
            "title": "tornado"
        }, 
        {
            "location": "/python/py_tornado/#python-web-tornado", 
            "text": "", 
            "title": "python web\u6846\u67b6 tornado \u521d\u63a2"
        }, 
        {
            "location": "/python/py_tornado/#tornado", 
            "text": "tornado \u662f\u4e00\u4e2a\u57fa\u4e8epython\u7684\u975e\u963b\u585e\u5f0f web \u670d\u52a1\u5668", 
            "title": "Tornado"
        }, 
        {
            "location": "/python/py_tornado/#module-map", 
            "text": "Web framework   tornado.web \u2014 RequestHandler and Application \u7c7b  tornado.template \u2014  \u53ef\u6269\u5c55\u8f93\u51fa\u6a21\u677f  tornado.escape \u2014 \u8f6c\u4e49\u548c\u5b57\u7b26\u4e32\u64cd\u4f5c  tornado.locale \u2014 \u56fd\u9645\u5316\u652f\u6301  tornado.websocket \u2014  \u5229\u7528websocket\u53cc\u5411\u901a\u4fe1     HTTP servers and clients   tornado.httpserver \u2014 \u975e\u963b\u585ehttp\u670d\u52a1\u5668  tornado.httpclient \u2014  \u5f02\u6b65http\u8bf7\u6c42  tornado.httputil \u2014 \u5904\u7406HTTP\u6807\u5934\u548cURL  tornado.http1connection \u2013 HTTP/1.x \u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u5b9e\u73b0     Asynchronous networking   tornado.ioloop \u2014  \u4e8b\u4ef6\u9a71\u52a8\u4e3b\u5faa\u73af  tornado.iostream \u2014 \u975e\u963b\u585esocket\u5305\u88c5\u7c7b  tornado.netutil \u2014 \u5176\u4ed6\u7f51\u7edc\u5de5\u5177  tornado.tcpclient \u2014\u57fa\u7840\u7684tcpclient  tornado.tcpserver \u2014 \u57fa\u7840\u7684tcpserver     Coroutines and concurrency   tornado.gen \u2014 \u7b80\u5316\u5f02\u6b65\u4ee3\u7801\u7684\u6a21\u5757  tornado.concurrent \u2014  \u540c\u6b65\u76f8\u5173\u7684threads \u548c futures  tornado.locks \u2013 \u540c\u6b65\u539f\u8bed  tornado.queues \u2013 \u534f\u7a0b\u961f\u5217  tornado.process \u2014 \u591a\u5904\u7406\u5668\u5de5\u5177\u7c7b     Integration with other services   tornado.auth \u2014  \u767b\u5f55\u9a8c\u8bc1  tornado.wsgi \u2014  \u9002\u914d\u5176\u4ed6python,web\u6846\u67b6  tornado.platform.asyncio \u2014 \u548cpython3.4\u7684\u5f02\u6b65IO\u5e93asyncio\u505a\u9002\u914d  tornado.platform.caresresolver \u2014 \u5f02\u6b65DNS\u89e3\u6790,C-Ares  tornado.platform.twisted \u2014 \u9002\u914dTwisted\u6846\u67b6     Utilities   tornado.autoreload \u2014 Automatically detect code changes in development  tornado.log \u2014  \u65e5\u5fd7  tornado.options \u2014 \u547d\u4ee4\u884c\u9009\u9879  tornado.stack_context \u2014 \u5f02\u6b65\u56de\u8c03\u5f02\u5e38\u5904\u7406  tornado.testing \u2014 \u5f02\u6b65\u4ee3\u7801\u7684\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301  tornado.util \u2014 \u5e38\u89c4\u5de5\u5177\u7c7b", 
            "title": "Module Map"
        }, 
        {
            "location": "/python/py_tornado/#hello-world", 
            "text": "import tornado.ioloop\nimport tornado.web\nclass MainHandler(tornado.web.RequestHandler):\n  def get(self):\n    self.write( Hello, world, +subdomain)\n\ndef make_app():\n  return tornado.web.Application([\n    (r / , MainHandler),\n  ])\n\nif __name__ ==  __main__ :\n  app = make_app()\n  app.listen(8888)\n  tornado.ioloop.IOLoop.current().start()\n\n  #\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165`http://localhost:8888/` \u53ef\u4ee5\u770b\u5230`Hello,world`\u7684\u8f93\u51fa", 
            "title": "hello world"
        }, 
        {
            "location": "/python/py_tornado/#handler", 
            "text": "", 
            "title": "handler"
        }, 
        {
            "location": "/python/py_tornado/#staticfilehandler", 
            "text": "def make_app():\n  return tornado.web.Application([\n    (r /static/(.*) , tornado.web.StaticFileHandler, { path :  C:\\\\Users\\\\Administrator.PC-20150720QKHJ\\\\Desktop\\\\static }),\n  ])\n\n  # \u8f93\u5165: http://localhost:8888/static/a.txt \u53ef\u8bbf\u95eestatic\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5185\u5bb9", 
            "title": "StaticFileHandler"
        }, 
        {
            "location": "/python/py_tornado/#get_argument", 
            "text": "class MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write(' html body form action= /  method= post '\n                   ' input type= text  name= message '\n                   ' input type= submit  value= Submit '\n                   ' /form /body /html ')\n\n    def post(self):\n        self.set_header( Content-Type ,  text/plain )\n        self.write( You wrote   + self.get_argument( message ))   arguments - \u6240\u6709\u7684 GET \u6216 POST \u7684\u53c2\u6570  files - \u6240\u6709\u901a\u8fc7 multipart/form-data POST \u8bf7\u6c42\u4e0a\u4f20\u7684\u6587\u4ef6  path - \u8bf7\u6c42\u7684\u8def\u5f84\uff08 ? \u4e4b\u524d\u7684\u6240\u6709\u5185\u5bb9\uff09  headers - \u8bf7\u6c42\u7684\u5f00\u5934\u4fe1\u606f", 
            "title": "get_argument \u83b7\u53d6\u53c2\u6570"
        }, 
        {
            "location": "/python/py_tornado/#coroutine", 
            "text": "import tornado.ioloop\nimport tornado.web\nfrom tornado import gen\nfrom tornado.httpclient import AsyncHTTPClient\n\nclass MainHandler(tornado.web.RequestHandler):\n    @gen.coroutine\n    def get(self):\n        response = yield self.fetch_json( http://www.baidu.com )\n        self.write(response)\n\n    @gen.coroutine\n    def fetch_json(self, url):\n        response = yield AsyncHTTPClient().fetch(url)\n        raise gen.Return(response.body)\n\napplication = tornado.web.Application([\n    (r / , MainHandler),\n])\n\nif __name__ ==  __main__ :\n    application.listen(8888)\n    tornado.ioloop.IOLoop.current().start()", 
            "title": "coroutine"
        }, 
        {
            "location": "/python/py_tornado/#tornado_1", 
            "text": "import tornado.ioloop\nimport tornado.web\nclass MainHandler(tornado.web.RequestHandler):\n  def get(self):\n    subdomain = self.request.host.split( . )[0]\n    self.write( Hello, world, +subdomain)\n\nclass DomainHandler(tornado.web.RequestHandler):\n  def get(self):\n    self.write( Hello, a.com )\n\ndef make_app():\n  return tornado.web.Application([\n    (r / , MainHandler),\n  ])\n\nif __name__ ==  __main__ :\n  app = make_app()\n  app.add_handlers(r ^(www\\.)?a\\.com$ , [\n    (r / , DomainHandler),\n  ])\n  app.listen(8888)\n  tornado.ioloop.IOLoop.current().start()\n\n  # \u5728Host\u4e2d\u52a0\u5165\u8fd9\u884c 127.0.0.1 a.com\n  #\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://a.com:8888  \u5219\u8f93\u51fa:Hello, a.com", 
            "title": "tornado   \u6cdb\u57df\u540d"
        }, 
        {
            "location": "/python/py_tornado/#tornado-ngnix", 
            "text": "\u5982\u679c\u5728tornado\u5c42\u4e0d\u60f3\u505a\u6cdb\u57df\u540d\u89e3\u6790,\u53ef\u4ee5\u901a\u8fc7ngnix\u7684\u53cd\u5411\u4ee3\u7406\u6307\u5411tornado\u7684\u7aef\u53e3,ngnix\u914d\u7f6e\u5982\u4e0b:  upstream tornado {\n    server 127.0.0.1:8888;\n}\nserver {\n      listen 80;\n      server_name test.com www.test.com;\n      location = /favicon.ico {\n          rewrite (.*) /static/favicon.ico;\n      }\n      location = /robots.txt {\n          rewrite (.*) /static/robots.txt;\n      }\n      location / {\n          proxy_pass_header Server;\n          proxy_set_header Host $http_host;\n          proxy_redirect off;\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Scheme $scheme;\n          proxy_pass http://tornado;\n      }\n}", 
            "title": "tornado ngnix \u53cd\u5411\u4ee3\u7406\u914d\u7f6e"
        }, 
        {
            "location": "/python/py_tornado/#nginx", 
            "text": "upstream chat_cluster{\n     ##\u591aserver\u8d1f\u8f7d,\u6839\u636eip_hash\u4f5c\u5206\u6d41\u4e5f\u53ef\u4ee5\u7528weight\u6743\u91cd\u5206\u6d41\n    server 127.0.0.1:10000;\n    server 127.0.0.1:10001;\n    ip_hash;\n    keepalive 1024;\n}\n\nserver\n{\n    listen 80;\n    server_name chat.rootk.com;\n\n    location / {\n        proxy_pass http://chat_cluster;\n        proxy_http_version 1.1;\n        # very important, nginx will waitting for the response from tornado\n        # if the time have passed more than 7200, nginx send http 504 to client\n        proxy_read_timeout 7200;\n        proxy_set_header Connection  ;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    }\n}", 
            "title": "nginx\u53cd\u5411\u4ee3\u7406\u957f\u94fe\u63a5"
        }, 
        {
            "location": "/python/py_spider/", 
            "text": "python\u722c\u866b\u521d\u63a2\n\n\npyspider\n\n\ngithub\n : \nhttps://github.com/binux/pyspider\n\n\n\u5176\u4ed6\u6587\u6863\n+ \nhttp://docs.pyspider.org/en/latest/\n\n+ \nhttp://blog.binux.me/2015/01/pyspider-tutorial-level-1-html-and-css-selector/\n\n\n\u5b89\u88c5\n\n\n\u5b89\u88c5\u4f9d\u8d56\u73af\u5883\u548cpython\n\n\nsudo apt-get install python python-dev python-distribute python-pip libcurl4-openssl-dev libxml2-dev libxslt1-dev python-lxml\nsudo apt-get install python-pip\n\n\n\n\n\u5b89\u88c5PhantomJS\n\n\n\u5b98\u7f51:\nhttp://phantomjs.org/\n\nPhantomJS\u662f\u4e00\u4e2a\u57fa\u4e8e WebKit \u7684\u975e\u754c\u9762\u6e32\u67d3html\u7684\u5f15\u64ce,\u7528\u4e8e \u9875\u9762\u81ea\u52a8\u5316 \uff0c \u7f51\u7edc\u76d1\u6d4b \uff0c \u7f51\u9875\u622a\u5c4f \uff0c\u4ee5\u53ca \u65e0\u754c\u9762\u6d4b\u8bd5 \u7b49\n\n\nsudo apt-get install phantomjs\n\n\n\n\n\u5b89\u88c5pyspider\n\n\npip install pyspider\n\n\n\n\n\u9519\u8bef\n\n\n\n\nconnect to scheduler rpc error: error(111, 'Connection refused')\n\n\n\n\npip install -U supernova\n\n\n\n\n\u542f\u52a8\n\n\npyspider\n\n\n\n\n\u521b\u5efa\u9879\u76ee\n\n\n\u6253\u5f00\nlocalhost:5000\n\u6253\u5f00\ndashboard\n,\ncreate new project\n\n\n\n\n\u521b\u5efa\u811a\u672c:\u6211\u8fd9\u91cc\u4ee5\u6293\u53d6\u4e00\u4e0b\u4e91\u98ce\u7684\u6240\u6709\u535a\u6587\u94fe\u63a5\u4e3a\u4f8b:\n\n\n# -*- coding: utf-8 -*-\nfrom pyspider.libs.base_handler import *\nimport re\nclass Handler(BaseHandler):\n    crawl_config = {\n        \nmessage_queue\n: \nredis://localhost:6379/db\n\n    }\n    #\u5f00\u542f\u542f\u52a8\u4efb\u52a1\u5165\u53e3,\u4e00\u822c\u4e3a\u4e3b\u9875\n    @every(minutes=24 * 60)\n    def on_start(self):\n        self.crawl('http://blog.codingnow.com/', callback=self.index_page)\n\n    #\u6839\u636e\u6807\u7b7e\u8fc7\u6ee4,\u9875\u9762\u4e0a\u6709\u4e2a[enable css selector helper]\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        for each in response.doc('.module-archives li \n a[href^=\nhttp\n]').items():\n            if re.match(\n^http://blog.codingnow.com.*/$\n, each.attr.href):\n                self.crawl(each.attr.href, callback=self.second_index_page)\n\n    #\u6211\u8fd9\u91cc\u505a\u4e86\u4e00\u4e2a\u4e8c\u7ea7\u6293\u53d6,\u7b2c\u4e00\u7ea7\u4e3a\u65e5\u671f\u5206\u7c7b\n    @config(age=10 * 24 * 60 * 60)\n    def second_index_page(self, response):\n        for each in response.doc('.permalink[href^=\nhttp\n]').items():\n            if re.match(\n^http://blog.codingnow.com\n, each.attr.href):\n                self.crawl(each.attr.href, callback=self.detail_page)\n\n     #\u8be6\u60c5\u9875\u6211\u53ea\u6293\u4e86title\u548curl.\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5206\u6790\u6b63\u6587\n    @config(priority=2)\n    def detail_page(self, response):\n        return {\n            \nurl\n: response.url,\n            \ntitle\n: response.doc('title').text(),\n        }\n\n\n\n\n\n\n\nhttp://demo.pyspider.org/\n\n\nscrapy\n\n\ndoc\n : \nhttp://doc.scrapy.org/en/0.24/\n\n\n\u5b89\u88c5scrapy\n\n\npip install scrapy\n\n\n\n\n\u521b\u5efa\u5de5\u7a0b\n\n\nscrapy startproject codeingnow\n\n\n\u7ed3\u6784\u5982\u4e0b:\n\n\ncodeingnow\n\u2502  scrapy.cfg  # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\u2514\u2500codeingnow\n    \u2502  items.py #\u9879\u76eeitems\u6587\u4ef6\n    \u2502  pipelines.py #\u9879\u76ee\u7ba1\u9053\u6587\u4ef6\n    \u2502  settings.py #\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n    \u2514\u2500spiders\n\n\n\n\n\u5728\nspiders\n\u521b\u5efa\u722c\u866b\u7a0b\u5e8f \ncodeingnow_scrapy.py\n \n\n\n# -*- coding: utf-8 -*-\nimport scrapy\nclass CodeingNowSpider(scrapy.Spider):\n    name = 'codeingnow'\n    start_urls = ['http://blog.codingnow.com/']\n\n    def parse(self, response):\n        for url in response.css('div[class*=module-archives]  a::attr(href)').re('^http://blog.codingnow.com.*/$'):\n            yield scrapy.Request(url, self.parse_content_url)\n            # break\n\n    def parse_content_url(self, response):\n        for content_url in response.css('a[class*=permalink]::attr(href)').extract():\n            yield {'content_url': content_url}\n\n\n\n\n\n\n\n\n\u76f4\u63a5\u8fd0\u884cspider:\nscrapy runspider codeingnow_scrapy.py\n\n\n\n\n\n\n\n\n\u5728\u5de5\u7a0b\u76ee\u5f55\u4e2d\u8fd0\u884c,\u5e76\u5bfc\u51fa\u6570\u636e\u4e3ajson\n\nscrapy crawl codeingnow -o items.json -t json\n\n\u7ed3\u679c:", 
            "title": "\u722c\u866b"
        }, 
        {
            "location": "/python/py_spider/#python", 
            "text": "", 
            "title": "python\u722c\u866b\u521d\u63a2"
        }, 
        {
            "location": "/python/py_spider/#pyspider", 
            "text": "github  :  https://github.com/binux/pyspider  \u5176\u4ed6\u6587\u6863\n+  http://docs.pyspider.org/en/latest/ \n+  http://blog.binux.me/2015/01/pyspider-tutorial-level-1-html-and-css-selector/", 
            "title": "pyspider"
        }, 
        {
            "location": "/python/py_spider/#_1", 
            "text": "", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_spider/#python_1", 
            "text": "sudo apt-get install python python-dev python-distribute python-pip libcurl4-openssl-dev libxml2-dev libxslt1-dev python-lxml\nsudo apt-get install python-pip", 
            "title": "\u5b89\u88c5\u4f9d\u8d56\u73af\u5883\u548cpython"
        }, 
        {
            "location": "/python/py_spider/#phantomjs", 
            "text": "\u5b98\u7f51: http://phantomjs.org/ \nPhantomJS\u662f\u4e00\u4e2a\u57fa\u4e8e WebKit \u7684\u975e\u754c\u9762\u6e32\u67d3html\u7684\u5f15\u64ce,\u7528\u4e8e \u9875\u9762\u81ea\u52a8\u5316 \uff0c \u7f51\u7edc\u76d1\u6d4b \uff0c \u7f51\u9875\u622a\u5c4f \uff0c\u4ee5\u53ca \u65e0\u754c\u9762\u6d4b\u8bd5 \u7b49  sudo apt-get install phantomjs", 
            "title": "\u5b89\u88c5PhantomJS"
        }, 
        {
            "location": "/python/py_spider/#pyspider_1", 
            "text": "pip install pyspider", 
            "title": "\u5b89\u88c5pyspider"
        }, 
        {
            "location": "/python/py_spider/#_2", 
            "text": "connect to scheduler rpc error: error(111, 'Connection refused')   pip install -U supernova", 
            "title": "\u9519\u8bef"
        }, 
        {
            "location": "/python/py_spider/#_3", 
            "text": "pyspider", 
            "title": "\u542f\u52a8"
        }, 
        {
            "location": "/python/py_spider/#_4", 
            "text": "\u6253\u5f00 localhost:5000 \u6253\u5f00 dashboard , create new project   \u521b\u5efa\u811a\u672c:\u6211\u8fd9\u91cc\u4ee5\u6293\u53d6\u4e00\u4e0b\u4e91\u98ce\u7684\u6240\u6709\u535a\u6587\u94fe\u63a5\u4e3a\u4f8b:  # -*- coding: utf-8 -*-\nfrom pyspider.libs.base_handler import *\nimport re\nclass Handler(BaseHandler):\n    crawl_config = {\n         message_queue :  redis://localhost:6379/db \n    }\n    #\u5f00\u542f\u542f\u52a8\u4efb\u52a1\u5165\u53e3,\u4e00\u822c\u4e3a\u4e3b\u9875\n    @every(minutes=24 * 60)\n    def on_start(self):\n        self.crawl('http://blog.codingnow.com/', callback=self.index_page)\n\n    #\u6839\u636e\u6807\u7b7e\u8fc7\u6ee4,\u9875\u9762\u4e0a\u6709\u4e2a[enable css selector helper]\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        for each in response.doc('.module-archives li   a[href^= http ]').items():\n            if re.match( ^http://blog.codingnow.com.*/$ , each.attr.href):\n                self.crawl(each.attr.href, callback=self.second_index_page)\n\n    #\u6211\u8fd9\u91cc\u505a\u4e86\u4e00\u4e2a\u4e8c\u7ea7\u6293\u53d6,\u7b2c\u4e00\u7ea7\u4e3a\u65e5\u671f\u5206\u7c7b\n    @config(age=10 * 24 * 60 * 60)\n    def second_index_page(self, response):\n        for each in response.doc('.permalink[href^= http ]').items():\n            if re.match( ^http://blog.codingnow.com , each.attr.href):\n                self.crawl(each.attr.href, callback=self.detail_page)\n\n     #\u8be6\u60c5\u9875\u6211\u53ea\u6293\u4e86title\u548curl.\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5206\u6790\u6b63\u6587\n    @config(priority=2)\n    def detail_page(self, response):\n        return {\n             url : response.url,\n             title : response.doc('title').text(),\n        }   http://demo.pyspider.org/", 
            "title": "\u521b\u5efa\u9879\u76ee"
        }, 
        {
            "location": "/python/py_spider/#scrapy", 
            "text": "doc  :  http://doc.scrapy.org/en/0.24/", 
            "title": "scrapy"
        }, 
        {
            "location": "/python/py_spider/#scrapy_1", 
            "text": "pip install scrapy", 
            "title": "\u5b89\u88c5scrapy"
        }, 
        {
            "location": "/python/py_spider/#_5", 
            "text": "scrapy startproject codeingnow  \u7ed3\u6784\u5982\u4e0b:  codeingnow\n\u2502  scrapy.cfg  # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\u2514\u2500codeingnow\n    \u2502  items.py #\u9879\u76eeitems\u6587\u4ef6\n    \u2502  pipelines.py #\u9879\u76ee\u7ba1\u9053\u6587\u4ef6\n    \u2502  settings.py #\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n    \u2514\u2500spiders  \u5728 spiders \u521b\u5efa\u722c\u866b\u7a0b\u5e8f  codeingnow_scrapy.py    # -*- coding: utf-8 -*-\nimport scrapy\nclass CodeingNowSpider(scrapy.Spider):\n    name = 'codeingnow'\n    start_urls = ['http://blog.codingnow.com/']\n\n    def parse(self, response):\n        for url in response.css('div[class*=module-archives]  a::attr(href)').re('^http://blog.codingnow.com.*/$'):\n            yield scrapy.Request(url, self.parse_content_url)\n            # break\n\n    def parse_content_url(self, response):\n        for content_url in response.css('a[class*=permalink]::attr(href)').extract():\n            yield {'content_url': content_url}    \u76f4\u63a5\u8fd0\u884cspider: scrapy runspider codeingnow_scrapy.py     \u5728\u5de5\u7a0b\u76ee\u5f55\u4e2d\u8fd0\u884c,\u5e76\u5bfc\u51fa\u6570\u636e\u4e3ajson scrapy crawl codeingnow -o items.json -t json \n\u7ed3\u679c:", 
            "title": "\u521b\u5efa\u5de5\u7a0b"
        }, 
        {
            "location": "/python/py_mq/", 
            "text": "\u6d88\u606f\u961f\u5217\n\n\nzeromq\n\n\nzeromq\u662f\u4e00\u4e2a\u4e3a\u53ef\u4f38\u7f29\u7684\u5206\u5e03\u5f0f\u6216\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u5f02\u6b65\u6d88\u606f\u5e93\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u6d88\u606f\u961f\u5217, \u4f46\u662f\u4e0e\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\u4e0d\u540c\uff0cZeroMQ\u7684\u8fd0\u884c\u4e0d\u9700\u8981\u4e13\u95e8\u7684\u6d88\u606f\u4ee3\u7406\uff08message broker\uff09\u3002\u8be5\u5e93\u8bbe\u8ba1\u6210\u5e38\u89c1\u7684\u5957\u63a5\u5b57\u98ce\u683c\u7684API\n\n\n\n\n\u652f\u6301\u9ad8\u5e76\u53d1\u7684\u5f02\u6b65 Socket \u6846\u67b6\n\n\n\u534f\u8bae\u6bd4 TCP \u66f4\u5feb\u3001\u9002\u7528\u4e8e\u5927\u578b\u96c6\u7fa4\u548c\u5206\u5e03\u5f0f\u8ba1\u7b97\n\n\n\u63d0\u4f9b\u591a\u79cd\u6d88\u606f\u4f20\u9012\u673a\u5236\uff0c\u5982 inproc/IPC/TCP/multicast \u7b49\n\n\n\u5185\u7f6e\u4e30\u5bcc\u7684\u7ec4\u5408\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u7b80\u5316\u5927\u578b\u5206\u6b65\u5f0f\u8ba1\u7b97\u67b6\u6784\n\n\n\u63d0\u4f9b\u5f02\u6b65 I/O \u6a21\u5f0f\uff0c\u9002\u7528\u4e8e\u53ef\u6269\u5c55\u7684\u591a\u6838\u5e94\u7528\u5f00\u53d1\n\n\n\u62e5\u6709\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u793e\u533a\u63d0\u4f9b\u6280\u672f\u652f\u6301\uff0c\u53d1\u5c55\u76f8\u5f53\u8fc5\u901f\n\n\n\u652f\u6301\u8d85\u8fc7 30 \u79cd\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982 C/C++/Java/.NET/Python/PHP \u7b49\n\n\n\u826f\u597d\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u652f\u6301\u591a\u79cd OS\uff0c\u5982 Linux/Windows/OS X \u7b49\n\n\n\u62e5\u6709 iMatix \u516c\u53f8\u7684\u5546\u4e1a\u7ea7\u522b\u652f\u6301\uff0c\u5374\u662f\u5b8c\u5168\u514d\u8d39\u7684\n\n\n\n\nhttp://zeromq.org/intro:get-the-software\n\n\n\u7f16\u8bd1zeromq\n\n\ngit clone https://github.com/zeromq/libzmq\n./autogen.sh \n ./configure \n make -j 4\nmake check \n make install \n sudo ldconfig\n#autogen\u9700\u8981libtool\napt-get install libtool\n\n\n\n\npyzmq\u5b89\u88c5\n\n\npip install pyzmq\n\n\n\n\n\u68c0\u6d4b\u5b89\u88c5\n\n\nimport zmq\nprint (\n version is  %s\n%zmq.zmq_version())\n\n\n\n\n\u534f\u8bae\u652f\u6301\n\n\n\n\nINPROC\n an In-Process communication model\n\n\nIPC\n an Inter-Process communication model\n\n\nMULTICAST\n multicast via PGM, possibly encapsulated in UDP\n\n\nTCP\n a network based transport\n\n\n\n\n\u5efa\u7acb\u57fa\u7840\n\n\n\u7531\u4e8e\u5728\u7f51\u7edc\u4e2d\u4e24\u4e2a\u7aef\u70b9\u662f\u76f8\u5bf9\u52a8\u6001\u7684\uff0c\u5f88\u96be\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u5355\u4e00\u8fde\u63a5\u70b9\u3002\n\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u75310MQ\u63d0\u4f9b\u7684\u8f6c\u53d1\u8bbe\u5907\u3002\n\u8f6c\u53d1\u8bbe\u5907\u53ef\u4ee5\u7ed1\u5b9a2\u4e2a\u4e0d\u540c\u7aef\u53e3\uff0c\u5e76\u4e14\u8f6c\u53d1\u6d88\u606f\u4ece\u4e00\u4e2a\u7aef\u70b9\u5230\u53e6\u4e00\u4e2a\u7aef\u70b9\u3002\n\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u5728\u7f51\u7edc\u4e2d\u8f6c\u53d1\u8bbe\u5907\u80fd\u591f\u53d8\u6210\u4e00\u4e2a\u7a33\u5b9a\u7684\u70b9\uff0c\u5176\u5b83\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u53bb\u8fde\u63a5\u3002\n\n\n0MQ\u63d0\u4f9b\u4e863\u79cd\u7c7b\u578b\u7684\u8bbe\u5907\n\n\n\n\nQUEUE\n, a forwarder for the request/response messaging pattern\n\n\nFORWARDER\n, a forwarder for the publish/subscribe messaging pattern\n\n\nSTREAMER\n, a forwarder for the pipelined messaging pattern\n\n\n\n\n\u591a\u8def\u590d\u7528\u6a21\u5f0f\n\n\n\n\nselect\uff08\u652f\u6301unix/windows\uff09\n\n\npoll\uff08\u652f\u6301unix\uff09\n\n\nepoll\uff08\u652f\u6301linux\uff09\n\n\nkqueue\uff08\u652f\u6301freebsd\uff09\n\n\ndevpoll\uff08zmq\u81ea\u7814\u7684poll\uff09\n\u5176\u4e2d,Linux \u4e0b\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f \nepoll\n \u65b9\u5f0f\n\n\n\n\n\u901a\u8baf\u6a21\u5f0f\n\n\n\n\nREQUEST/REPLY\n, bidirectional, load balanced and state based\n\n\nPUBLISH/SUBSCRIBE\n, publish to multiple recipients at once\n\n\nUPSTREAM / DOWNSTREAM\n, distribute data to nodes arranged in a pipeline\n\n\nPAIR\n, communication exclusively between peers\n\n\n\n\n\u5e94\u7b54\u6a21\u5f0f(REQUEST/REPLY)\n\n\n\u7531\u8bf7\u6c42\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u7b49\u5f85\u56de\u5e94\u7aef\u56de\u5e94\u8bf7\u6c42\n\n\n\u666e\u901a\u5e94\u7b54\u6a21\u5f0f\n\n\n\n\nserver.py\n\n\nimport zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind(\ntcp://*:5555\n)\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print \nReceived request: \n, message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send(\nWorld\n)\n\n\n\n\nclient.py:\n\n\nimport zmq\ncontext = zmq.Context()\n#  Socket to talk to server\nprint \nConnecting to hello world server...\n\nsocket = context.socket(zmq.REQ)\nsocket.connect (\ntcp://localhost:5555\n)\n\n#  Do 10 requests, waiting each time for a response\nfor request in range (1,10):\n    print \nSending request \n, request,\n...\n\n    socket.send (\nHello\n)\n\n    #  Get the reply.\n    message = socket.recv()\n    print \nReceived reply \n, request, \n[\n, message, \n]\n\n\n\n\n\n\u8d1f\u8f7d\u5747\u8861\n\n\n\n\nclient\n\u7684\u8bf7\u6c42\u4f1a\u88ab\u5747\u8861\u7684\u5206\u914d\u7ed9\u591a\u4e2a\nserver\n\u4e2d\n\n\nserver1.py\n\n\nimport zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind(\ntcp://*:5555\n)\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print \nReceived request server1: \n, message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send(\nWorld\n)\n\n\n\n\nserver2.py\n\n\nimport zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind(\ntcp://*:5556\n)\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print \nReceived request server2: \n, message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send(\nWorld\n)\n\n\n\n\nclient.py:\n\n\nimport zmq\n\ncontext = zmq.Context()\n\n#  Socket to talk to server\nprint \nConnecting to hello world server...\n\nsocket = context.socket(zmq.REQ)\nsocket.connect (\ntcp://localhost:5555\n)\nsocket.connect (\ntcp://localhost:5556\n)\n\n#  Do 10 requests, waiting each time for a response\nfor request in range (1,10):\n    print \nSending request \n, request,\n...\n\n    socket.send (\nHello\n)\n\n    #  Get the reply.\n    message = socket.recv()\n    print \nReceived reply \n, request, \n[\n, message, \n]\n\n\n\n\n\n\n\n\u53d1\u5e03\u8ba2\u9605\u6a21\u578b(PUBLISH/SUBSCRIBE)\n\n\n\u53d1\u5e03\u8ba2\u9605\u6a21\u578b,\u6709\u4e00\u4e2a\u53d1\u5e03\u6d88\u606f\u7684\u670d\u52a1\u7aef,\u6709\u82e5\u5e72\u63a5\u6536\u7aef,\u63a5\u6536\u7aef\u53ea\u5173\u6ce8\u611f\u5174\u8da3\u7684\u4e8b\u4ef6.\u5728\u7f16\u7a0b\u6a21\u578b\u4e2d\u65e9\u88ab\u5927\u91cf\u5e94\u7528,\u5982\u6d88\u606f\u63a8\u9001\u7b49,\u5728\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\u4e2d\u7684\u7ec4\u4ef6\u662f\u677e\u6563\u8026\u5408\u7684,\u53d1\u5e03\u7aef\u4e0d\u9700\u8981\u5173\u5fc3\u8ba2\u9605\u7aef,\u5c31\u50cf\u4e00\u4e2a\u5e7f\u64ad\u7535\u53f0\u4e00\u6837,\u63a5\u6536\u7aef\u5c31\u50cf\u6536\u97f3\u673a.\u6240\u4ee5\u53d1\u5e03\u7aef\u53d1\u5e03\u8fc7\u7684\u6d88\u606f\u5982\u679c\u5728\u8ba2\u9605\u4e4b\u524d\u662f\u6ca1\u529e\u6cd5\u83b7\u53d6\u7684.\n\n\n\npubserver.py:\n\n\nimport zmq\nimport time\nfrom random import choice\ncontext = zmq.Context()\nsocket = context.socket(zmq.PUB)\nsocket.bind(\ntcp://127.0.0.1:5000\n)\n\ncountries = ['netherlands','brazil','germany','portugal']\nevents = ['yellow card', 'red card', 'goal', 'corner', 'foul']\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime(\n%Y-%m-%d %H:%M:%S\n, gmtime())\n    print(t,args)\nwhile True:\n    msg = choice( countries ) +\n \n+ choice( events )\n    print_t (\n-\n,msg )\n    time.sleep(1)\n    socket.send( msg )\n\n\n\n\npubclient.py:\n\n\nimport zmq\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.SUB)\nsocket.connect(\ntcp://127.0.0.1:5000\n)\nsocket.setsockopt(zmq.SUBSCRIBE, \nnetherlands\n)\nsocket.setsockopt(zmq.SUBSCRIBE, \ngermany\n)\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime(\n%Y-%m-%d %H:%M:%S\n, gmtime())\n    print(t,args)\n\nwhile True:\n    print_t( socket.recv())\n\n\n\n\npubclient2.py:\n\n\nimport zmq\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.SUB)\nsocket.connect(\ntcp://127.0.0.1:5000\n)\nsocket.setsockopt(zmq.SUBSCRIBE, \nbrazil\n)\nsocket.setsockopt(zmq.SUBSCRIBE, \nportugal\n)\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime(\n%Y-%m-%d %H:%M:%S\n, gmtime())\n    print(t,args)\nwhile True:\n    print_t( socket.recv())\n\n\n\n\n\n\n\u7ba1\u9053\u6a21\u578b\n\n\n\n\n\u7ba1\u9053\u6a21\u578b\u548c\u5e94\u7b54\u6a21\u5f0f\u5f88\u7c7b\u4f3c,\u4e0d\u540c\u7684\u662f\u670d\u52a1\u7aef\u5e76\u4e0d\u76f4\u63a5\u628a\u4fe1\u606f\u56de\u9988\u7ed9\u8bf7\u6c42\u8005.\n\n\npipeline_ventilator.py\n\n\nimport zmq\nimport random\nimport time\n\ntry:\n    raw_input\nexcept NameError:\n    # Python 3\n    raw_input = input\n\ncontext = zmq.Context()\n\n# Socket to send messages on\nsender = context.socket(zmq.PUSH)\nsender.bind(\ntcp://*:5557\n)\n\n# Socket with direct access to the sink: used to syncronize start of batch\nsink = context.socket(zmq.PUSH)\nsink.connect(\ntcp://localhost:5558\n)\n\nprint(\nPress Enter when the workers are ready: \n)\n_ = raw_input()\nprint(\nSending tasks to workers\u2026\n)\n\n# The first message is \n0\n and signals start of batch\nsink.send(b'0')\n\n# Initialize random number generator\nrandom.seed()\n\n# Send 100 tasks\ntotal_msec = 0\nfor task_nbr in range(100):\n\n    # Random workload from 1 to 100 msecs\n    workload = random.randint(1, 100)\n    total_msec += workload\n\n    sender.send_string(u'%i' % workload)\n\nprint(\nTotal expected cost: %s msec\n % total_msec)\n\n# Give 0MQ time to deliver\ntime.sleep(1)\n\n\n\n\npipeline_worker.py\n\n\nimport sys\nimport time\nimport zmq\n\ncontext = zmq.Context()\n\n# Socket to receive messages on\nreceiver = context.socket(zmq.PULL)\nreceiver.connect(\ntcp://localhost:5557\n)\n\n# Socket to send messages to\nsender = context.socket(zmq.PUSH)\nsender.connect(\ntcp://localhost:5558\n)\n\n# Process tasks forever\nwhile True:\n    s = receiver.recv()\n\n    # Simple progress indicator for the viewer\n    sys.stdout.write('.')\n    sys.stdout.flush()\n\n    # Do the work\n    time.sleep(int(s)*0.001)\n\n    # Send results to sink\n    sender.send(b'')\n\n\n\n\npipeline_sink.py\n\n\nimport sys\nimport time\nimport zmq\n\ncontext = zmq.Context()\n\n# Socket to receive messages on\nreceiver = context.socket(zmq.PULL)\nreceiver.bind(\ntcp://*:5558\n)\n\n# Wait for start of batch\ns = receiver.recv()\n\n# Start our clock now\ntstart = time.time()\n\n# Process 100 confirmations\nfor task_nbr in range(100):\n    s = receiver.recv()\n    if task_nbr % 10 == 0:\n        sys.stdout.write(':')\n    else:\n        sys.stdout.write('.')\n    sys.stdout.flush()\n\n# Calculate and report duration of batch\ntend = time.time()\nprint(\nTotal elapsed time: %d msec\n % ((tend-tstart)*1000))\n\n\n\n\n\u542f\u52a8\npipeline_sink\n---\npipeline_ventilator\n---\npipeline_worker\n,\u542f\u52a8\u591a\u4e2a\nwork\n\u6d88\u8017\u65f6\u95f4\u660e\u663e\u6bd4\u5355\nwork\n\u8981\u5c0f\n\n\n\n\nPAIR\u6a21\u578b\n\n\nPAIR\n\u6a21\u5f0f\u5176\u5b9e\u4e5f\u5c31\u662f\u4f20\u7edf\u7684\nsocket\n\u8fde\u63a5\u65b9\u5f0f\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u901a\u8fc7\u70b9\u5bf9\u70b9\u7684\u8fdb\u884c\u901a\u8baf,\u901a\u8baf\u662f\u53cc\u5411\u7684,\u65e0\u72b6\u6001,\u5ba2\u6237\u7aef\u901a\u8fc7\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3\u4e0e\u4e4b\u901a\u8baf.\n\n\n\n\npair_server.py\n\n\nimport zmq\ncontext = zmq.Context()\nsocket = context.socket(zmq.PAIR)\nsocket.bind(\ntcp://127.0.0.1:5555\n)\n\n\n\n\npair_client.py\n\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.PAIR)\nsocket.connect(\ntcp://127.0.0.1:5555\n)\n\n\n\n\nhttp://nichol.as/zeromq-an-introduction\n\n\nhttp://zguide.zeromq.org/page:all\n\n\nhttp://iyuan.iteye.com/blog/982185", 
            "title": "\u6d88\u606f\u961f\u5217"
        }, 
        {
            "location": "/python/py_mq/#_1", 
            "text": "", 
            "title": "\u6d88\u606f\u961f\u5217"
        }, 
        {
            "location": "/python/py_mq/#zeromq", 
            "text": "zeromq\u662f\u4e00\u4e2a\u4e3a\u53ef\u4f38\u7f29\u7684\u5206\u5e03\u5f0f\u6216\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u5f02\u6b65\u6d88\u606f\u5e93\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u6d88\u606f\u961f\u5217, \u4f46\u662f\u4e0e\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\u4e0d\u540c\uff0cZeroMQ\u7684\u8fd0\u884c\u4e0d\u9700\u8981\u4e13\u95e8\u7684\u6d88\u606f\u4ee3\u7406\uff08message broker\uff09\u3002\u8be5\u5e93\u8bbe\u8ba1\u6210\u5e38\u89c1\u7684\u5957\u63a5\u5b57\u98ce\u683c\u7684API   \u652f\u6301\u9ad8\u5e76\u53d1\u7684\u5f02\u6b65 Socket \u6846\u67b6  \u534f\u8bae\u6bd4 TCP \u66f4\u5feb\u3001\u9002\u7528\u4e8e\u5927\u578b\u96c6\u7fa4\u548c\u5206\u5e03\u5f0f\u8ba1\u7b97  \u63d0\u4f9b\u591a\u79cd\u6d88\u606f\u4f20\u9012\u673a\u5236\uff0c\u5982 inproc/IPC/TCP/multicast \u7b49  \u5185\u7f6e\u4e30\u5bcc\u7684\u7ec4\u5408\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u7b80\u5316\u5927\u578b\u5206\u6b65\u5f0f\u8ba1\u7b97\u67b6\u6784  \u63d0\u4f9b\u5f02\u6b65 I/O \u6a21\u5f0f\uff0c\u9002\u7528\u4e8e\u53ef\u6269\u5c55\u7684\u591a\u6838\u5e94\u7528\u5f00\u53d1  \u62e5\u6709\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u793e\u533a\u63d0\u4f9b\u6280\u672f\u652f\u6301\uff0c\u53d1\u5c55\u76f8\u5f53\u8fc5\u901f  \u652f\u6301\u8d85\u8fc7 30 \u79cd\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982 C/C++/Java/.NET/Python/PHP \u7b49  \u826f\u597d\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u652f\u6301\u591a\u79cd OS\uff0c\u5982 Linux/Windows/OS X \u7b49  \u62e5\u6709 iMatix \u516c\u53f8\u7684\u5546\u4e1a\u7ea7\u522b\u652f\u6301\uff0c\u5374\u662f\u5b8c\u5168\u514d\u8d39\u7684   http://zeromq.org/intro:get-the-software", 
            "title": "zeromq"
        }, 
        {
            "location": "/python/py_mq/#zeromq_1", 
            "text": "git clone https://github.com/zeromq/libzmq\n./autogen.sh   ./configure   make -j 4\nmake check   make install   sudo ldconfig\n#autogen\u9700\u8981libtool\napt-get install libtool", 
            "title": "\u7f16\u8bd1zeromq"
        }, 
        {
            "location": "/python/py_mq/#pyzmq", 
            "text": "pip install pyzmq  \u68c0\u6d4b\u5b89\u88c5  import zmq\nprint (  version is  %s %zmq.zmq_version())", 
            "title": "pyzmq\u5b89\u88c5"
        }, 
        {
            "location": "/python/py_mq/#_2", 
            "text": "INPROC  an In-Process communication model  IPC  an Inter-Process communication model  MULTICAST  multicast via PGM, possibly encapsulated in UDP  TCP  a network based transport", 
            "title": "\u534f\u8bae\u652f\u6301"
        }, 
        {
            "location": "/python/py_mq/#_3", 
            "text": "\u7531\u4e8e\u5728\u7f51\u7edc\u4e2d\u4e24\u4e2a\u7aef\u70b9\u662f\u76f8\u5bf9\u52a8\u6001\u7684\uff0c\u5f88\u96be\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u5355\u4e00\u8fde\u63a5\u70b9\u3002\n\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u75310MQ\u63d0\u4f9b\u7684\u8f6c\u53d1\u8bbe\u5907\u3002\n\u8f6c\u53d1\u8bbe\u5907\u53ef\u4ee5\u7ed1\u5b9a2\u4e2a\u4e0d\u540c\u7aef\u53e3\uff0c\u5e76\u4e14\u8f6c\u53d1\u6d88\u606f\u4ece\u4e00\u4e2a\u7aef\u70b9\u5230\u53e6\u4e00\u4e2a\u7aef\u70b9\u3002\n\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u5728\u7f51\u7edc\u4e2d\u8f6c\u53d1\u8bbe\u5907\u80fd\u591f\u53d8\u6210\u4e00\u4e2a\u7a33\u5b9a\u7684\u70b9\uff0c\u5176\u5b83\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u53bb\u8fde\u63a5\u3002  0MQ\u63d0\u4f9b\u4e863\u79cd\u7c7b\u578b\u7684\u8bbe\u5907   QUEUE , a forwarder for the request/response messaging pattern  FORWARDER , a forwarder for the publish/subscribe messaging pattern  STREAMER , a forwarder for the pipelined messaging pattern", 
            "title": "\u5efa\u7acb\u57fa\u7840"
        }, 
        {
            "location": "/python/py_mq/#_4", 
            "text": "select\uff08\u652f\u6301unix/windows\uff09  poll\uff08\u652f\u6301unix\uff09  epoll\uff08\u652f\u6301linux\uff09  kqueue\uff08\u652f\u6301freebsd\uff09  devpoll\uff08zmq\u81ea\u7814\u7684poll\uff09\n\u5176\u4e2d,Linux \u4e0b\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f  epoll  \u65b9\u5f0f", 
            "title": "\u591a\u8def\u590d\u7528\u6a21\u5f0f"
        }, 
        {
            "location": "/python/py_mq/#_5", 
            "text": "REQUEST/REPLY , bidirectional, load balanced and state based  PUBLISH/SUBSCRIBE , publish to multiple recipients at once  UPSTREAM / DOWNSTREAM , distribute data to nodes arranged in a pipeline  PAIR , communication exclusively between peers", 
            "title": "\u901a\u8baf\u6a21\u5f0f"
        }, 
        {
            "location": "/python/py_mq/#requestreply", 
            "text": "\u7531\u8bf7\u6c42\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u7b49\u5f85\u56de\u5e94\u7aef\u56de\u5e94\u8bf7\u6c42  \u666e\u901a\u5e94\u7b54\u6a21\u5f0f   server.py  import zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind( tcp://*:5555 )\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print  Received request:  , message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send( World )  client.py:  import zmq\ncontext = zmq.Context()\n#  Socket to talk to server\nprint  Connecting to hello world server... \nsocket = context.socket(zmq.REQ)\nsocket.connect ( tcp://localhost:5555 )\n\n#  Do 10 requests, waiting each time for a response\nfor request in range (1,10):\n    print  Sending request  , request, ... \n    socket.send ( Hello )\n\n    #  Get the reply.\n    message = socket.recv()\n    print  Received reply  , request,  [ , message,  ]   \u8d1f\u8f7d\u5747\u8861   client \u7684\u8bf7\u6c42\u4f1a\u88ab\u5747\u8861\u7684\u5206\u914d\u7ed9\u591a\u4e2a server \u4e2d  server1.py  import zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind( tcp://*:5555 )\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print  Received request server1:  , message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send( World )  server2.py  import zmq\nimport time\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.REP)\nsocket.bind( tcp://*:5556 )\n\nwhile True:\n    #  Wait for next request from client\n    message = socket.recv()\n    print  Received request server2:  , message\n\n    #  Do some 'work'\n    time.sleep (1)        #   Do some 'work'\n\n    #  Send reply back to client\n    socket.send( World )  client.py:  import zmq\n\ncontext = zmq.Context()\n\n#  Socket to talk to server\nprint  Connecting to hello world server... \nsocket = context.socket(zmq.REQ)\nsocket.connect ( tcp://localhost:5555 )\nsocket.connect ( tcp://localhost:5556 )\n\n#  Do 10 requests, waiting each time for a response\nfor request in range (1,10):\n    print  Sending request  , request, ... \n    socket.send ( Hello )\n\n    #  Get the reply.\n    message = socket.recv()\n    print  Received reply  , request,  [ , message,  ]", 
            "title": "\u5e94\u7b54\u6a21\u5f0f(REQUEST/REPLY)"
        }, 
        {
            "location": "/python/py_mq/#publishsubscribe", 
            "text": "\u53d1\u5e03\u8ba2\u9605\u6a21\u578b,\u6709\u4e00\u4e2a\u53d1\u5e03\u6d88\u606f\u7684\u670d\u52a1\u7aef,\u6709\u82e5\u5e72\u63a5\u6536\u7aef,\u63a5\u6536\u7aef\u53ea\u5173\u6ce8\u611f\u5174\u8da3\u7684\u4e8b\u4ef6.\u5728\u7f16\u7a0b\u6a21\u578b\u4e2d\u65e9\u88ab\u5927\u91cf\u5e94\u7528,\u5982\u6d88\u606f\u63a8\u9001\u7b49,\u5728\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\u4e2d\u7684\u7ec4\u4ef6\u662f\u677e\u6563\u8026\u5408\u7684,\u53d1\u5e03\u7aef\u4e0d\u9700\u8981\u5173\u5fc3\u8ba2\u9605\u7aef,\u5c31\u50cf\u4e00\u4e2a\u5e7f\u64ad\u7535\u53f0\u4e00\u6837,\u63a5\u6536\u7aef\u5c31\u50cf\u6536\u97f3\u673a.\u6240\u4ee5\u53d1\u5e03\u7aef\u53d1\u5e03\u8fc7\u7684\u6d88\u606f\u5982\u679c\u5728\u8ba2\u9605\u4e4b\u524d\u662f\u6ca1\u529e\u6cd5\u83b7\u53d6\u7684.  pubserver.py:  import zmq\nimport time\nfrom random import choice\ncontext = zmq.Context()\nsocket = context.socket(zmq.PUB)\nsocket.bind( tcp://127.0.0.1:5000 )\n\ncountries = ['netherlands','brazil','germany','portugal']\nevents = ['yellow card', 'red card', 'goal', 'corner', 'foul']\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime( %Y-%m-%d %H:%M:%S , gmtime())\n    print(t,args)\nwhile True:\n    msg = choice( countries ) +   + choice( events )\n    print_t ( - ,msg )\n    time.sleep(1)\n    socket.send( msg )  pubclient.py:  import zmq\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.SUB)\nsocket.connect( tcp://127.0.0.1:5000 )\nsocket.setsockopt(zmq.SUBSCRIBE,  netherlands )\nsocket.setsockopt(zmq.SUBSCRIBE,  germany )\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime( %Y-%m-%d %H:%M:%S , gmtime())\n    print(t,args)\n\nwhile True:\n    print_t( socket.recv())  pubclient2.py:  import zmq\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.SUB)\nsocket.connect( tcp://127.0.0.1:5000 )\nsocket.setsockopt(zmq.SUBSCRIBE,  brazil )\nsocket.setsockopt(zmq.SUBSCRIBE,  portugal )\n\ndef print_t(*args):\n    from time import gmtime, strftime\n    t= strftime( %Y-%m-%d %H:%M:%S , gmtime())\n    print(t,args)\nwhile True:\n    print_t( socket.recv())", 
            "title": "\u53d1\u5e03\u8ba2\u9605\u6a21\u578b(PUBLISH/SUBSCRIBE)"
        }, 
        {
            "location": "/python/py_mq/#_6", 
            "text": "\u7ba1\u9053\u6a21\u578b\u548c\u5e94\u7b54\u6a21\u5f0f\u5f88\u7c7b\u4f3c,\u4e0d\u540c\u7684\u662f\u670d\u52a1\u7aef\u5e76\u4e0d\u76f4\u63a5\u628a\u4fe1\u606f\u56de\u9988\u7ed9\u8bf7\u6c42\u8005.  pipeline_ventilator.py  import zmq\nimport random\nimport time\n\ntry:\n    raw_input\nexcept NameError:\n    # Python 3\n    raw_input = input\n\ncontext = zmq.Context()\n\n# Socket to send messages on\nsender = context.socket(zmq.PUSH)\nsender.bind( tcp://*:5557 )\n\n# Socket with direct access to the sink: used to syncronize start of batch\nsink = context.socket(zmq.PUSH)\nsink.connect( tcp://localhost:5558 )\n\nprint( Press Enter when the workers are ready:  )\n_ = raw_input()\nprint( Sending tasks to workers\u2026 )\n\n# The first message is  0  and signals start of batch\nsink.send(b'0')\n\n# Initialize random number generator\nrandom.seed()\n\n# Send 100 tasks\ntotal_msec = 0\nfor task_nbr in range(100):\n\n    # Random workload from 1 to 100 msecs\n    workload = random.randint(1, 100)\n    total_msec += workload\n\n    sender.send_string(u'%i' % workload)\n\nprint( Total expected cost: %s msec  % total_msec)\n\n# Give 0MQ time to deliver\ntime.sleep(1)  pipeline_worker.py  import sys\nimport time\nimport zmq\n\ncontext = zmq.Context()\n\n# Socket to receive messages on\nreceiver = context.socket(zmq.PULL)\nreceiver.connect( tcp://localhost:5557 )\n\n# Socket to send messages to\nsender = context.socket(zmq.PUSH)\nsender.connect( tcp://localhost:5558 )\n\n# Process tasks forever\nwhile True:\n    s = receiver.recv()\n\n    # Simple progress indicator for the viewer\n    sys.stdout.write('.')\n    sys.stdout.flush()\n\n    # Do the work\n    time.sleep(int(s)*0.001)\n\n    # Send results to sink\n    sender.send(b'')  pipeline_sink.py  import sys\nimport time\nimport zmq\n\ncontext = zmq.Context()\n\n# Socket to receive messages on\nreceiver = context.socket(zmq.PULL)\nreceiver.bind( tcp://*:5558 )\n\n# Wait for start of batch\ns = receiver.recv()\n\n# Start our clock now\ntstart = time.time()\n\n# Process 100 confirmations\nfor task_nbr in range(100):\n    s = receiver.recv()\n    if task_nbr % 10 == 0:\n        sys.stdout.write(':')\n    else:\n        sys.stdout.write('.')\n    sys.stdout.flush()\n\n# Calculate and report duration of batch\ntend = time.time()\nprint( Total elapsed time: %d msec  % ((tend-tstart)*1000))  \u542f\u52a8 pipeline_sink --- pipeline_ventilator --- pipeline_worker ,\u542f\u52a8\u591a\u4e2a work \u6d88\u8017\u65f6\u95f4\u660e\u663e\u6bd4\u5355 work \u8981\u5c0f", 
            "title": "\u7ba1\u9053\u6a21\u578b"
        }, 
        {
            "location": "/python/py_mq/#pair", 
            "text": "PAIR \u6a21\u5f0f\u5176\u5b9e\u4e5f\u5c31\u662f\u4f20\u7edf\u7684 socket \u8fde\u63a5\u65b9\u5f0f\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u901a\u8fc7\u70b9\u5bf9\u70b9\u7684\u8fdb\u884c\u901a\u8baf,\u901a\u8baf\u662f\u53cc\u5411\u7684,\u65e0\u72b6\u6001,\u5ba2\u6237\u7aef\u901a\u8fc7\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3\u4e0e\u4e4b\u901a\u8baf.   pair_server.py  import zmq\ncontext = zmq.Context()\nsocket = context.socket(zmq.PAIR)\nsocket.bind( tcp://127.0.0.1:5555 )  pair_client.py  context = zmq.Context()\nsocket = context.socket(zmq.PAIR)\nsocket.connect( tcp://127.0.0.1:5555 )  http://nichol.as/zeromq-an-introduction  http://zguide.zeromq.org/page:all  http://iyuan.iteye.com/blog/982185", 
            "title": "PAIR\u6a21\u578b"
        }, 
        {
            "location": "/lua/lua1_data/", 
            "text": "\u57fa\u672c\u6982\u5ff5\n\n\n\u6587\u6863\n\n\n\n\nlua5.1\n :\nhttp://www.codingnow.com/2000/download/lua_manual.html\n\n\nlua5.3\n :\nhttp://cloudwu.github.io/lua53doc/\n\n\n\n\n\u503c\u4e0e\u7c7b\u578b\n\n\nLua \u4e2d\u6709\u516b\u79cd\u57fa\u672c\u7c7b\u578b\uff1a \nnil\n\u3001\nboolean\n\u3001\nnumber\n\u3001\nstring\n\u3001\nfunction\n\u3001\nuserdata\n\u3001 \nthread\n \u548c \ntable\n\nuserdata \u7c7b\u578b\u5141\u8bb8\u5c06 C \u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5728 Lua \u53d8\u91cf\u4e2d\n\n\n\u73af\u5883\u4e0e\u5168\u5c40\u73af\u5883\n\n\nupvalue\n\n\n\u5f53\u6267\u884c\u5b8cg1 = f1(1979)\u540e\uff0c\u5c40\u90e8\u53d8\u91cfn\u7684\u751f\u547d\u672c\u8be5\u7ed3\u675f\uff0c\u4f46\u56e0\u4e3a\u5b83\u5df2\u7ecf\u6210\u4e86\u5185\u5d4c\u51fd\u6570f2(\u5b83\u53c8\u88ab\u8d4b\u7ed9\u4e86\u53d8\u91cfg1)\u7684upvalue\n\n\nlocal function f1(n)\n    -- \u51fd\u6570\u53c2\u6570\u4e5f\u662f\u5c40\u90e8\u53d8\u91cf\n    local function f2()\n        print(n) -- \u5f15\u7528\u5916\u5305\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\n    end\n    return f2\nend\ng1 = f1(1979)\n\n\n\n\n_ENV\n\n\nlua5.2\u4e2dload\u4ee3\u7801\u540e\u8fd4\u56de\u51fd\u6570\u7684upvalue.\u539f\u5148\u865a\u65e0\u7f25\u7f08\u53ea\u80fd\u901a\u8fc7 setfenv\u3001getfenv \u8bbf\u95ee\u7684\u6240\u8c13\u300c\u73af\u5883\u300d\u7ec8\u4e8e\u5b9e\u4f53\u5316\u4e3a\u4e00\u4e2a\u59cb\u7ec8\u5b58\u5728\u7684\u53d8\u91cf _ENV \u4e86\n\nhttp://timothyqiu.com/archives/lua-note-sandboxes/\n\n\nlua_setglobal/lua_getglobal\u90fd\u662f\u64cd\u4f5clua_State\u6ce8\u518c\u8868\u4e2dLUA_RIDX_GLOBALS\u4f2a\u7d22\u5f15\u6307\u5411\u7684\u5168\u5c40\u53d8\u91cf\u8868\uff0c\u4e0elua\u4e2d\u8bbf\u95ee_ENV['a']\u6216\u8005a\u662f\u4e0d\u540c\u7684\u3002\nlua_load\u52a0\u8f7dlua\u4ee3\u7801\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u9ed8\u8ba4\u4f1a\u7ed9\u8fd9\u4e2a\u51fd\u6570\u8bbe\u7f6e\u4e00\u4e2aupvalue\u5c31\u53eb_ENV\uff0c\u8d77\u503c\u662fLUA_RIDX_GLOBALS\u7684\u5168\u5c40\u53d8\u91cf\u8868\uff0c\u4f60\u53ef\u4ee5lua_setupvalue\u8bbe\u7f6e\u8fd9\u4e2a\u51fd\u6570\u7684upvalue\uff0c\u5373\u4e0b\u68071\u7684upvalue\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u8fd9\u4e2a\u51fd\u6570\u7684_ENV\u8868\u5b58\u653e\u4f4d\u7f6e\uff08\u4f60\u53ef\u4ee5\u901a\u8fc7lua_setupvalue\u7684\u8fd4\u56de\u503c\u5370\u8bc1\u8fd9\u4e00\u70b9\uff09\n\n\n_G\n\n\n\u5168\u5c40\u73af\u5883.\nlua_State\u4f1a\u5728\u521b\u5efa\u65f6\u4fdd\u8bc1LUA_RIDX_GLOBALS\u7684\u5168\u5c40\u53d8\u91cf\u8868\u4e2d\u5305\u542b\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684_G\u5143\u7d20\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5728\u4e0d\u8c03\u7528lua_setupvalue\u7684\u60c5\u51b5\u4e0b\u8be5\u8fd4\u56de\u51fd\u6570\u7684_ENV['_G']\u662f\u6307\u5411\u81ea\u5df1\u7684\uff0c\u5373LUA_RIDX_GLOBALS\u8fd9\u4e2a\u5168\u5c40\u8868\u3002\uff08\u5176\u5b9e\u4f60\u7684lua\u89e3\u91ca\u5668\u5c31\u662f\u7b80\u5355\u7684lua_load\u540epcall\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u521a\u542f\u52a8lua_State\u6765\u8bf4\u662f\u6ca1\u6709_ENV\u7684\uff0c\u662flua\u89e3\u91ca\u5668load\u4f60\u7684\u4ee3\u7801\u65f6\u81ea\u52a8\u7ed9\u5e26\u4e0a\u7684_ENV\uff0c\u5176\u503c\u662flua_state\u7684LUA_RIDX_GLOBALS\u5168\u5c40\u8868\u3002\uff09\nlua_state\u542f\u52a8\u540e\u5728\u6ce8\u518c\u8868\u91ccLUA_RIDX_GLOBALS\u4e0b\u6807\u5b58\u653e\u7684\u5168\u5c40\u8868\u4e00\u5b9a\u6709\u4e00\u4e2a\u5143\u7d20\u662f\u6307\u5411\u81ea\u5df1\u7684\uff0c\u5373_G.\n\n\n\u9519\u8bef\u5904\u7406\n\n\n\u629b\u51fa\u5f02\u5e38\n\n\nerror (message [, level]) :\n\n\n\u6355\u83b7\n\n\npcall\n\n\npcall (f [, arg1, \u00b7\u00b7\u00b7])\n\n\u4ee5\u4fdd\u62a4\u6a21\u5f0f \u8c03\u7528\u51fd\u6570 f ,\u8fd4\u56de\u503c\n[flag,errorinfo]\n,\u8fd0\u884c\u6b63\u5e38\u662f\nflag\n\u4e3a\ntrue\n\n\nlocal  function er( ... )\n    error(\nerror\n)\nend\nlocal flag,errorinfo = pcall(er)\nprint(flag,errorinfo)\n--false   ...:\\lua_error.lua:7: error\n\n\n\n\nxpcall\n\n\nxpcall (f, msgh [, arg1, \u00b7\u00b7\u00b7])\n\n\u4e0e\npcall\n\u533a\u522b:\u81ea\u5b9a\u4e49\u6d88\u606f\u5904\u7406,\u4e0d\u8fd4\u56de\nerrorinfo\n\n\nlocal flag = xpcall(function() error('error..') end, function() print(debug.traceback()) end, 33)\nprint(flag)\n--[[\nstack traceback:\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in function \n...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12\n\n    [C]: in function 'error'\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in function \n...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12\n\n    [C]: in function 'xpcall'\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in main chunk\n    [C]: ?\n\nfalse\n]]--\n\n\n\n\n\ndebug\n\n\n\n\ndebug.traceback\n :\u8f93\u51fa\u5806\u6808\u4fe1\u606f\n\n\n\n\n\u5143\u8868\u53ca\u5143\u65b9\u6cd5\n\n\n\u5143\u8868(metatable)\n\n\n\u4e0ejs\u539f\u578b\u94fe(prototype)\u7c7b\u4f3c\n\n\n\n\n\"add\": + \u64cd\u4f5c\u3002 \u5982\u679c\u4efb\u4f55\u4e0d\u662f\u6570\u5b57\u7684\u503c\uff08\u5305\u62ec\u4e0d\u80fd\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff09\u505a\u52a0\u6cd5\uff0c Lua \u5c31\u4f1a\u5c1d\u8bd5\u8c03\u7528\u5143\u65b9\u6cd5\u3002 \u9996\u5148\u3001Lua \u68c0\u67e5\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\uff08\u5373\u4f7f\u5b83\u662f\u5408\u6cd5\u7684\uff09\uff0c \u5982\u679c\u8fd9\u4e2a\u64cd\u4f5c\u6570\u6ca1\u6709\u4e3a \"__add\" \u4e8b\u4ef6\u5b9a\u4e49\u5143\u65b9\u6cd5\uff0c Lua \u5c31\u4f1a\u63a5\u7740\u68c0\u67e5\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u3002 \u4e00\u65e6 Lua \u627e\u5230\u4e86\u5143\u65b9\u6cd5\uff0c \u5b83\u5c06\u628a\u4e24\u4e2a\u64cd\u4f5c\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5143\u65b9\u6cd5\uff0c \u5143\u65b9\u6cd5\u7684\u7ed3\u679c\uff08\u8c03\u6574\u4e3a\u5355\u4e2a\u503c\uff09\u4f5c\u4e3a\u8fd9\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u5982\u679c\u627e\u4e0d\u5230\u5143\u65b9\u6cd5\uff0c\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u3002\n\n\n\n\nlocal met = {}\nmet.__add = function(op1, op2)\n   for _, item in pairs(op2) do\n      table.insert(op1, item)\n   end\n   return op1\nend\n\nlocal a = {1,2}\nlocal b={3,4}\nsetmetatable(a,met)\nlocal d = a +b\n\nfor k,v in pairs(d) do\n    print(k,v)\nend\n--[[\n1   1\n2   2\n3   3\n4   4\n]]\n\n\n\n\n\n\n\n\n\"concat\": .. \uff08\u8fde\u63a5\uff09\u64cd\u4f5c\u3002 \u884c\u4e3a\u548c \"add\" \u64cd\u4f5c\u7c7b\u4f3c\uff0c \u4e0d\u540c\u7684\u662f Lua \u5728\u4efb\u4f55\u64cd\u4f5c\u6570\u5373\u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u4e5f\u4e0d\u662f\u6570\u5b57\uff08\u6570\u5b57\u603b\u80fd\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff09\u7684\u60c5\u51b5\u4e0b\u5c1d\u8bd5\u5143\u65b9\u6cd5\u3002\n\n\n\n\n\n\n\"len\": # \uff08\u53d6\u957f\u5ea6\uff09\u64cd\u4f5c\u3002 \u5982\u679c\u5bf9\u8c61\u4e0d\u662f\u5b57\u7b26\u4e32\uff0cLua \u4f1a\u5c1d\u8bd5\u5b83\u7684\u5143\u65b9\u6cd5\u3002 \u5982\u679c\u6709\u5143\u65b9\u6cd5\uff0c\u5219\u8c03\u7528\u5b83\u5e76\u5c06\u5bf9\u8c61\u4ee5\u53c2\u6570\u5f62\u5f0f\u4f20\u5165\uff0c \u800c\u8fd4\u56de\u503c\uff08\u88ab\u8c03\u6574\u4e3a\u5355\u4e2a\uff09\u5219\u4f5c\u4e3a\u7ed3\u679c\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u4e00\u5f20\u8868\u4e14\u6ca1\u6709\u5143\u65b9\u6cd5\uff0c Lua \u4f7f\u7528\u8868\u7684\u53d6\u957f\u5ea6\u64cd\u4f5c\uff08\u53c2\u89c1 \u00a73.4.7\uff09\u3002 \u5176\u5b83\u60c5\u51b5\uff0c\u5747\u629b\u51fa\u9519\u8bef\u3002\n\n\n\n\n\n\n\"index\": \u7d22\u5f15 table[key]\u3002 \u5f53 table \u4e0d\u662f\u8868\u6216\u662f\u8868 table \u4e2d\u4e0d\u5b58\u5728 key \u8fd9\u4e2a\u952e\u65f6\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u6b64\u65f6\uff0c\u4f1a\u8bfb\u51fa table \u76f8\u5e94\u7684\u5143\u65b9\u6cd5\u3002\n\u5c3d\u7ba1\u540d\u5b57\u53d6\u6210\u8fd9\u6837\uff0c \u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5143\u65b9\u6cd5\u5176\u5b9e\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u5f20\u8868\u3002 \u5982\u679c\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u4ee5 table \u548c key \u4f5c\u4e3a\u53c2\u6570\u8c03\u7528\u5b83\u3002 \u5982\u679c\u5b83\u662f\u4e00\u5f20\u8868\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u4ee5 key \u53d6\u7d22\u5f15\u8fd9\u5f20\u8868\u7684\u7ed3\u679c\u3002 \uff08\u8fd9\u4e2a\u7d22\u5f15\u8fc7\u7a0b\u662f\u8d70\u5e38\u89c4\u7684\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7d22\u5f15\uff0c \u6240\u4ee5\u8fd9\u6b21\u7d22\u5f15\u6709\u53ef\u80fd\u5f15\u53d1\u53e6\u4e00\u6b21\u5143\u65b9\u6cd5\u3002\uff09\n\n\n\n\n\n\n\"newindex\": \u7d22\u5f15\u8d4b\u503c table[key] = value \u3002 \u548c\u7d22\u5f15\u4e8b\u4ef6\u7c7b\u4f3c\uff0c\u5b83\u53d1\u751f\u5728 table \u4e0d\u662f\u8868\u6216\u662f\u8868 table \u4e2d\u4e0d\u5b58\u5728 key \u8fd9\u4e2a\u952e\u7684\u65f6\u5019\u3002 \u6b64\u65f6\uff0c\u4f1a\u8bfb\u51fa table \u76f8\u5e94\u7684\u5143\u65b9\u6cd5\u3002\n\u540c\u7d22\u5f15\u8fc7\u7a0b\u90a3\u6837\uff0c \u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5143\u65b9\u6cd5\u5373\u53ef\u4ee5\u662f\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u5f20\u8868\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c \u5219\u4ee5 table\u3001 key\u3001\u4ee5\u53ca value \u4e3a\u53c2\u6570\u4f20\u5165\u3002 \u5982\u679c\u662f\u4e00\u5f20\u8868\uff0c Lua \u5bf9\u8fd9\u5f20\u8868\u505a\u7d22\u5f15\u8d4b\u503c\u64cd\u4f5c\u3002 \uff08\u8fd9\u4e2a\u7d22\u5f15\u8fc7\u7a0b\u662f\u8d70\u5e38\u89c4\u7684\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7d22\u5f15\u8d4b\u503c\uff0c \u6240\u4ee5\u8fd9\u6b21\u7d22\u5f15\u8d4b\u503c\u6709\u53ef\u80fd\u5f15\u53d1\u53e6\u4e00\u6b21\u5143\u65b9\u6cd5\u3002\uff09\n\n\n\n\n\n\n\u4e00\u65e6\u6709\u4e86 \"newindex\" \u5143\u65b9\u6cd5\uff0c Lua \u5c31\u4e0d\u518d\u505a\u6700\u521d\u7684\u8d4b\u503c\u64cd\u4f5c\u3002 \uff08\u5982\u679c\u6709\u5fc5\u8981\uff0c\u5728\u5143\u65b9\u6cd5\u5185\u90e8\u53ef\u4ee5\u8c03\u7528 rawset \u6765\u505a\u8d4b\u503c\u3002\uff09\n\n\n\n\n\"call\": \u51fd\u6570\u8c03\u7528\u64cd\u4f5c func(args)\u3002 \u5f53 Lua \u5c1d\u8bd5\u8c03\u7528\u4e00\u4e2a\u975e\u51fd\u6570\u7684\u503c\u7684\u65f6\u5019\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6 \uff08\u5373 func \u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff09\u3002 \u67e5\u627e func \u7684\u5143\u65b9\u6cd5\uff0c \u5982\u679c\u627e\u5f97\u5230\uff0c\u5c31\u8c03\u7528\u8fd9\u4e2a\u5143\u65b9\u6cd5\uff0c func \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff0c\u539f\u6765\u8c03\u7528\u7684\u53c2\u6570\uff08args\uff09\u540e\u4f9d\u6b21\u6392\u5728\u540e\u9762\n\n\n\n\n\u5783\u573e\u6536\u96c6\n\n\nLua \u5b9e\u73b0\u4e86\u4e00\u4e2a\u589e\u91cf\u6807\u8bb0-\u626b\u63cf\u6536\u96c6\u5668\u3002 \u5b83\u4f7f\u7528\u8fd9\u4e24\u4e2a\u6570\u5b57\u6765\u63a7\u5236\u5783\u573e\u6536\u96c6\u5faa\u73af\uff1a \u5783\u573e\u6536\u96c6\u5668\u95f4\u6b47\u7387 \u548c \u5783\u573e\u6536\u96c6\u5668\u6b65\u8fdb\u500d\u7387\u3002 \u8fd9\u4e24\u4e2a\u6570\u5b57\u90fd\u4f7f\u7528\u767e\u5206\u6570\u4e3a\u5355\u4f4d \uff08\u4f8b\u5982\uff1a\u503c 100 \u5728\u5185\u90e8\u8868\u793a 1 \uff09\u3002\n\n\n\u5783\u573e\u6536\u96c6\u5668\u95f4\u6b47\u7387\u63a7\u5236\u7740\u6536\u96c6\u5668\u9700\u8981\u5728\u5f00\u542f\u65b0\u7684\u5faa\u73af\u524d\u8981\u7b49\u5f85\u591a\u4e45\u3002 \u589e\u5927\u8fd9\u4e2a\u503c\u4f1a\u51cf\u5c11\u6536\u96c6\u5668\u7684\u79ef\u6781\u6027\u3002 \u5f53\u8fd9\u4e2a\u503c\u6bd4 100 \u5c0f\u7684\u65f6\u5019\uff0c\u6536\u96c6\u5668\u5728\u5f00\u542f\u65b0\u7684\u5faa\u73af\u524d\u4e0d\u4f1a\u6709\u7b49\u5f85\u3002 \u8bbe\u7f6e\u8fd9\u4e2a\u503c\u4e3a 200 \u5c31\u4f1a\u8ba9\u6536\u96c6\u5668\u7b49\u5230\u603b\u5185\u5b58\u4f7f\u7528\u91cf\u8fbe\u5230 \u4e4b\u524d\u7684\u4e24\u500d\u65f6\u624d\u5f00\u59cb\u65b0\u7684\u5faa\u73af\u3002\n\n\n\u5783\u573e\u6536\u96c6\u5668\u6b65\u8fdb\u500d\u7387\u63a7\u5236\u7740\u6536\u96c6\u5668\u8fd0\u4f5c\u901f\u5ea6\u76f8\u5bf9\u4e8e\u5185\u5b58\u5206\u914d\u901f\u5ea6\u7684\u500d\u7387\u3002 \u589e\u5927\u8fd9\u4e2a\u503c\u4e0d\u4ec5\u4f1a\u8ba9\u6536\u96c6\u5668\u66f4\u52a0\u79ef\u6781\uff0c\u8fd8\u4f1a\u589e\u52a0\u6bcf\u4e2a\u589e\u91cf\u6b65\u9aa4\u7684\u957f\u5ea6\u3002 \u4e0d\u8981\u628a\u8fd9\u4e2a\u503c\u8bbe\u5f97\u5c0f\u4e8e 100 \uff0c \u90a3\u6837\u7684\u8bdd\u6536\u96c6\u5668\u5c31\u5de5\u4f5c\u7684\u592a\u6162\u4e86\u4ee5\u81f3\u4e8e\u6c38\u8fdc\u90fd\u5e72\u4e0d\u5b8c\u4e00\u4e2a\u5faa\u73af\u3002 \u9ed8\u8ba4\u503c\u662f 200 \uff0c\u8fd9\u8868\u793a\u6536\u96c6\u5668\u4ee5\u5185\u5b58\u5206\u914d\u7684\u201c\u4e24\u500d\u201d\u901f\u5de5\u4f5c\u3002\n\n\n\u5982\u679c\u4f60\u628a\u6b65\u8fdb\u500d\u7387\u8bbe\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u5b57 \uff08\u6bd4\u4f60\u7684\u7a0b\u5e8f\u53ef\u80fd\u7528\u5230\u7684\u5b57\u8282\u6570\u8fd8\u5927 10% \uff09\uff0c \u6536\u96c6\u5668\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a stop-the-world \u6536\u96c6\u5668\u3002 \u63a5\u7740\u4f60\u82e5\u628a\u95f4\u6b47\u7387\u8bbe\u4e3a 200 \uff0c \u6536\u96c6\u5668\u7684\u884c\u4e3a\u5c31\u548c\u8fc7\u53bb\u7684 Lua \u7248\u672c\u4e00\u6837\u4e86\uff1a \u6bcf\u6b21 Lua \u4f7f\u7528\u7684\u5185\u5b58\u7ffb\u500d\u65f6\uff0c\u5c31\u505a\u4e00\u6b21\u5b8c\u6574\u7684\u6536\u96c6\u3002\n\n\n\u5783\u573e\u6536\u96c6\u7684\u5143\u65b9\u6cd5\n\n\n\u4f7f\u7528 C API,\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5783\u573e\u6536\u96c6\u7684\u5143\u65b9\u6cd5,\n__gc\n,\u6765\u505a\u4e00\u4e9b\u7279\u6b8a\u7684\u8d44\u6e90\u91ca\u653e\u64cd\u4f5c,\u6bd4\u5982\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u7b49,\u4e00\u4e2a userdata \u53ef\u88ab\u56de\u6536\uff0c\u82e5\u5b83\u7684 metatable \u4e2d\u6709 __gc \u8fd9\u4e2a\u57df\u3000\uff0c \u5783\u573e\u6536\u96c6\u5668\u5c31\u4e0d\u7acb\u5373\u6536\u56de\u5b83\u3002 \u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cLua \u628a\u5b83\u4eec\u653e\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\u3002 \u6700\u6536\u96c6\u7ed3\u675f\u540e\uff0cLua \u9488\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a userdata \u6267\u884c\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b49\u4ef7\u64cd\u4f5c\uff1a\n\n\n   function gc_event (udata)\n       local h = metatable(udata).__gc\n       if h then\n         h(udata)\n       end\n     end\n\n\n\n\n\u5728\u6bcf\u4e2a\u5783\u573e\u6536\u96c6\u5468\u671f\u7684\u7ed3\u5c3e\uff0c\u6bcf\u4e2a\u5728\u5f53\u524d\u5468\u671f\u88ab\u6536\u96c6\u8d77\u6765\u7684 userdata \u7684\u7ed3\u675f\u5b50\u4f1a\u4ee5 \u5b83\u4eec\u6784\u9020\u65f6\u7684\u9006\u5e8f\u4f9d\u6b21\u8c03\u7528\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6536\u96c6\u5217\u8868\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5728\u7a0b\u5e8f\u4e2d\u88ab\u521b\u5efa\u7684 userdata \u7684 \u7ed3\u675f\u5b50\u4f1a\u88ab\u7b2c\u4e00\u4e2a\u8c03\u7528\u3002\n\u53c2\u8003:\n\nhttp://blog.codingnow.com/cloud/LuaReferObject\n\n\n\u5f31\u8868\n\n\n\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u53ea\u88ab\u5f31\u5f15\u7528\u5f15\u7528\u5230\uff0c \u5783\u573e\u6536\u96c6\u5668\u5c31\u4f1a\u56de\u6536\u8fd9\u4e2a\u5bf9\u8c61\n\u4e00\u5f20\u8868\u7684\u5143\u8868\u4e2d\u7684 \nmode \u57df\u63a7\u5236\u7740\u8fd9\u5f20\u8868\u7684\u5f31\u5c5e\u6027\u3002 \u5f53 \nmode \u57df\u662f\u4e00\u4e2a\u5305\u542b\u5b57\u7b26 'k' \u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd9\u5f20\u8868\u7684\u6240\u6709\u952e\u7686\u4e3a\u5f31\u5f15\u7528\u3002 \u5f53 __mode \u57df\u662f\u4e00\u4e2a\u5305\u542b\u5b57\u7b26 'v' \u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd9\u5f20\u8868\u7684\u6240\u6709\u503c\u7686\u4e3a\u5f31\u5f15\u7528\n\n\n\u503c\u4e3a\u5f31\u8868\n\n\nlocal weakTable = {}\nweakTable[1] = function() print(\ni am the first element\n) end\nweakTable[2] = function() print(\ni am the second element\n) end\nweakTable[3] = {10, 20, 30}\n\nsetmetatable(weakTable, {__mode = \nv\n})  --\u503c\u4e3a\u5f31\u8868\nprint(table.getn(weakTable))  --\u672agc\u524d3\u4e2a\n\nele = weakTable[1]  --\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u5f15\u7528\ncollectgarbage()\nprint(table.getn(weakTable))  --gc\u540e\u53ea\u5269\u7b2c\u4e00\u4e2a\u5143\u7d20\n\nele= nil   --\u5f15\u7528\u7f6e\u7a7a\ncollectgarbage()\nprint(table.getn(weakTable))  --\u5168\u90e8gc\n\n\n\n\n\n\u952e\u4e3a\u5f31\u8868\n\n\nlocal function getkeyn( t )\n    local count = 0\n    for k,v in pairs(t or {}) do\n     count= count+1\n   end\nreturn count\nend\n\nlocal weakKey= {}\nlocal t1={}\nlocal t2={}\nweakKey[t1] = 1\nweakKey[t2] = 2\n\nsetmetatable(weakKey,{__mode=\nk\n}) --\u952e\u4e3a\u5f31\u8868\nprint(getkeyn(weakKey)) --2\n\nt1= nil\ncollectgarbage()\nprint(getkeyn(weakKey)) --1\n\n\n\n\n\u534f\u7a0b\n\n\n\u652f\u6301\u534f\u7a0b\uff0c\u4e5f\u53eb \u534f\u540c\u5f0f\u591a\u7ebf\u7a0b\u3002 \u4e00\u4e2a\u534f\u7a0b\u5728 Lua \u4e2d\u4ee3\u8868\u4e86\u4e00\u6bb5\u72ec\u7acb\u7684\u6267\u884c\u7ebf\u7a0b\u3002 \u7136\u800c\uff0c\u4e0e\u591a\u7ebf\u7a0b\u7cfb\u7edf\u4e2d\u7684\u7ebf\u7a0b\u7684\u533a\u522b\u5728\u4e8e\uff0c \u534f\u7a0b\u4ec5\u5728\u663e\u5f0f\u8c03\u7528\u4e00\u4e2a\u8ba9\u51fa\uff08yield\uff09\u51fd\u6570\u65f6\u624d\u6302\u8d77\u5f53\u524d\u7684\u6267\u884c.\n\n\n\u63a5\u53e3\n\n\ncoroutine.create(f)\n\n\n\u51fd\u6570\u53c2\u6570[\u63a5\u53d7\u5355\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3acoroutine\u7684\u4e3b\u51fd\u6570]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u4e00\u4e2athread\u5bf9\u8c61]\n\u51fd\u6570\u4f5c\u7528[\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\uff0c\u534f\u7a0b\u7684\u4e3b\u51fd\u6570\u5b9a\u4e49\u4e86\u8be5\u534f\u7a0b\u5185\u7684\u4efb\u52a1\u6d41\u7a0b]\n\n\ncoroutine.resume(co, [, var1, ...])\n\n\n\u51fd\u6570\u53c2\u6570[\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1acoroutine.create\u7684\u8fd4\u56de\u503c\uff0c\u5373\u4e00\u4e2athread\u5bf9\u8c61]\n\u51fd\u6570\u53c2\u6570[\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1acoroutine\u4e2d\u6267\u884c\u9700\u8981\u7684\u53c2\u6570\uff0c\u662f\u4e00\u4e2a\u53d8\u957f\u53c2\u6570\uff0c\u53ef\u4ee5\u4f20\u4efb\u610f\u591a\u4e2a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56detrue\uff0c\u4e4b\u540e\u7684\u8fd4\u56de\u503c\u662f\u524d\u4e00\u4e2a\u8c03\u7528coroutine.yield\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u503c]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u9047\u5230\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56defalse\uff0c\u52a0\u4e0a\u9519\u8bef\u4fe1\u606f]\n\u51fd\u6570\u4f5c\u7528[\u5f53\u4f60\u7b2c\u4e00\u6b21\u8c03\u7528coroutine.rusume\u65b9\u6cd5\u65f6\uff0ccoroutine\u4ece\u4e3b\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u5f00\u59cb\u6267\u884c\uff0c\u4e4b\u540e\u5728coroutine\u5f00\u59cb\u6267\u884c\u540e\uff0c\u5b83\u4f1a\u4e00\u76f4\u8fd0\u884c\u5230\n\u81ea\u8eab\u7ec8\u6b62\u6216\u8005\u662fcoroutine\u7684\u4e0b\u4e00\u6b21yield\u51fd\u6570]\n\n\ncoroutine.yield(...)\n\n\n\u51fd\u6570\u53c2\u6570[\u53d8\u957f\u53c2\u6570]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56detrue\uff0c\u4e4b\u540e\u7684\u8fd4\u56de\u503c\u662f\u524d\u4e00\u4e2a\u8c03\u7528coroutine.resume()\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u503c]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u9047\u5230\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56defalse\uff0c\u52a0\u4e0a\u9519\u8bef\u4fe1\u606f]\n\u51fd\u6570\u4f5c\u7528[\u6302\u8d77\u5f53\u524d\u6267\u884c\u7684\u534f\u7a0b]\n\n\ncoroutine.running()\n\n\n\u51fd\u6570\u53c2\u6570[\u7a7a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u5f53\u524d\u534f\u7a0b\uff0c\u5982\u679c\u5b83\u88ab\u4e3b\u7ebf\u7a0b\u8c03\u7528\u7684\u8bdd\uff0c\u8fd4\u56denil]\n\n\ncoroutine.status()\n\n\n\u51fd\u6570\u53c2\u6570[\u7a7a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u5f53\u524d\u534f\u7a0b\u7684\u72b6\u6001\uff0c\u6709suspended, running, normal, dead]\n\n\n\u4f8b\u5b50\n\n\nfunction foo (a)\n       print(\n[step2] foo\n, a)\n       return coroutine.yield(2*a)\n end\n\nlocal  co = coroutine.create(function (a,b)\n       print(\n[step1] co-body\n, a, b)\n       local r = foo(a+1)\n       print(\n[step4] co-body\n, r)\n       local r, s = coroutine.yield(a+b, a-b)\n       print(\n[step6] co-body\n, r, s)\n       return b, \nend\n\n end)\n\n print(\n[step3] main\n, coroutine.resume(co, 1, 10))\n print(\n[step5] main\n, coroutine.resume(co, \nr\n))\n print(\n[step7] main\n, coroutine.resume(co, \nx\n, \ny\n))\n print(\n[step8] main\n, coroutine.resume(co, \nx\n, \ny\n))\n\n--[[\n[step1] co-body 1   10\n[step2] foo 2\n[step3] main    true    4\n[step4] co-body r\n[step5] main    true    11  -9\n[step6] co-body x   y\n[step7] main    true    10  end\n[step8] main    false   cannot resume dead coroutine\n]]--", 
            "title": "\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/lua/lua1_data/#_1", 
            "text": "", 
            "title": "\u57fa\u672c\u6982\u5ff5"
        }, 
        {
            "location": "/lua/lua1_data/#_2", 
            "text": "lua5.1  : http://www.codingnow.com/2000/download/lua_manual.html  lua5.3  : http://cloudwu.github.io/lua53doc/", 
            "title": "\u6587\u6863"
        }, 
        {
            "location": "/lua/lua1_data/#_3", 
            "text": "Lua \u4e2d\u6709\u516b\u79cd\u57fa\u672c\u7c7b\u578b\uff1a  nil \u3001 boolean \u3001 number \u3001 string \u3001 function \u3001 userdata \u3001  thread  \u548c  table \nuserdata \u7c7b\u578b\u5141\u8bb8\u5c06 C \u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5728 Lua \u53d8\u91cf\u4e2d", 
            "title": "\u503c\u4e0e\u7c7b\u578b"
        }, 
        {
            "location": "/lua/lua1_data/#_4", 
            "text": "", 
            "title": "\u73af\u5883\u4e0e\u5168\u5c40\u73af\u5883"
        }, 
        {
            "location": "/lua/lua1_data/#upvalue", 
            "text": "\u5f53\u6267\u884c\u5b8cg1 = f1(1979)\u540e\uff0c\u5c40\u90e8\u53d8\u91cfn\u7684\u751f\u547d\u672c\u8be5\u7ed3\u675f\uff0c\u4f46\u56e0\u4e3a\u5b83\u5df2\u7ecf\u6210\u4e86\u5185\u5d4c\u51fd\u6570f2(\u5b83\u53c8\u88ab\u8d4b\u7ed9\u4e86\u53d8\u91cfg1)\u7684upvalue  local function f1(n)\n    -- \u51fd\u6570\u53c2\u6570\u4e5f\u662f\u5c40\u90e8\u53d8\u91cf\n    local function f2()\n        print(n) -- \u5f15\u7528\u5916\u5305\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\n    end\n    return f2\nend\ng1 = f1(1979)", 
            "title": "upvalue"
        }, 
        {
            "location": "/lua/lua1_data/#_env", 
            "text": "lua5.2\u4e2dload\u4ee3\u7801\u540e\u8fd4\u56de\u51fd\u6570\u7684upvalue.\u539f\u5148\u865a\u65e0\u7f25\u7f08\u53ea\u80fd\u901a\u8fc7 setfenv\u3001getfenv \u8bbf\u95ee\u7684\u6240\u8c13\u300c\u73af\u5883\u300d\u7ec8\u4e8e\u5b9e\u4f53\u5316\u4e3a\u4e00\u4e2a\u59cb\u7ec8\u5b58\u5728\u7684\u53d8\u91cf _ENV \u4e86 http://timothyqiu.com/archives/lua-note-sandboxes/  lua_setglobal/lua_getglobal\u90fd\u662f\u64cd\u4f5clua_State\u6ce8\u518c\u8868\u4e2dLUA_RIDX_GLOBALS\u4f2a\u7d22\u5f15\u6307\u5411\u7684\u5168\u5c40\u53d8\u91cf\u8868\uff0c\u4e0elua\u4e2d\u8bbf\u95ee_ENV['a']\u6216\u8005a\u662f\u4e0d\u540c\u7684\u3002\nlua_load\u52a0\u8f7dlua\u4ee3\u7801\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u9ed8\u8ba4\u4f1a\u7ed9\u8fd9\u4e2a\u51fd\u6570\u8bbe\u7f6e\u4e00\u4e2aupvalue\u5c31\u53eb_ENV\uff0c\u8d77\u503c\u662fLUA_RIDX_GLOBALS\u7684\u5168\u5c40\u53d8\u91cf\u8868\uff0c\u4f60\u53ef\u4ee5lua_setupvalue\u8bbe\u7f6e\u8fd9\u4e2a\u51fd\u6570\u7684upvalue\uff0c\u5373\u4e0b\u68071\u7684upvalue\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u8fd9\u4e2a\u51fd\u6570\u7684_ENV\u8868\u5b58\u653e\u4f4d\u7f6e\uff08\u4f60\u53ef\u4ee5\u901a\u8fc7lua_setupvalue\u7684\u8fd4\u56de\u503c\u5370\u8bc1\u8fd9\u4e00\u70b9\uff09", 
            "title": "_ENV"
        }, 
        {
            "location": "/lua/lua1_data/#_g", 
            "text": "\u5168\u5c40\u73af\u5883.\nlua_State\u4f1a\u5728\u521b\u5efa\u65f6\u4fdd\u8bc1LUA_RIDX_GLOBALS\u7684\u5168\u5c40\u53d8\u91cf\u8868\u4e2d\u5305\u542b\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684_G\u5143\u7d20\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5728\u4e0d\u8c03\u7528lua_setupvalue\u7684\u60c5\u51b5\u4e0b\u8be5\u8fd4\u56de\u51fd\u6570\u7684_ENV['_G']\u662f\u6307\u5411\u81ea\u5df1\u7684\uff0c\u5373LUA_RIDX_GLOBALS\u8fd9\u4e2a\u5168\u5c40\u8868\u3002\uff08\u5176\u5b9e\u4f60\u7684lua\u89e3\u91ca\u5668\u5c31\u662f\u7b80\u5355\u7684lua_load\u540epcall\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u521a\u542f\u52a8lua_State\u6765\u8bf4\u662f\u6ca1\u6709_ENV\u7684\uff0c\u662flua\u89e3\u91ca\u5668load\u4f60\u7684\u4ee3\u7801\u65f6\u81ea\u52a8\u7ed9\u5e26\u4e0a\u7684_ENV\uff0c\u5176\u503c\u662flua_state\u7684LUA_RIDX_GLOBALS\u5168\u5c40\u8868\u3002\uff09\nlua_state\u542f\u52a8\u540e\u5728\u6ce8\u518c\u8868\u91ccLUA_RIDX_GLOBALS\u4e0b\u6807\u5b58\u653e\u7684\u5168\u5c40\u8868\u4e00\u5b9a\u6709\u4e00\u4e2a\u5143\u7d20\u662f\u6307\u5411\u81ea\u5df1\u7684\uff0c\u5373_G.", 
            "title": "_G"
        }, 
        {
            "location": "/lua/lua1_data/#_5", 
            "text": "", 
            "title": "\u9519\u8bef\u5904\u7406"
        }, 
        {
            "location": "/lua/lua1_data/#_6", 
            "text": "error (message [, level]) :", 
            "title": "\u629b\u51fa\u5f02\u5e38"
        }, 
        {
            "location": "/lua/lua1_data/#_7", 
            "text": "", 
            "title": "\u6355\u83b7"
        }, 
        {
            "location": "/lua/lua1_data/#pcall", 
            "text": "pcall (f [, arg1, \u00b7\u00b7\u00b7]) \n\u4ee5\u4fdd\u62a4\u6a21\u5f0f \u8c03\u7528\u51fd\u6570 f ,\u8fd4\u56de\u503c [flag,errorinfo] ,\u8fd0\u884c\u6b63\u5e38\u662f flag \u4e3a true  local  function er( ... )\n    error( error )\nend\nlocal flag,errorinfo = pcall(er)\nprint(flag,errorinfo)\n--false   ...:\\lua_error.lua:7: error", 
            "title": "pcall"
        }, 
        {
            "location": "/lua/lua1_data/#xpcall", 
            "text": "xpcall (f, msgh [, arg1, \u00b7\u00b7\u00b7]) \n\u4e0e pcall \u533a\u522b:\u81ea\u5b9a\u4e49\u6d88\u606f\u5904\u7406,\u4e0d\u8fd4\u56de errorinfo  local flag = xpcall(function() error('error..') end, function() print(debug.traceback()) end, 33)\nprint(flag)\n--[[\nstack traceback:\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in function  ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12 \n    [C]: in function 'error'\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in function  ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12 \n    [C]: in function 'xpcall'\n    ...:\\git\\code_research\\lua_study\\lua_code\\lua_error.lua:12: in main chunk\n    [C]: ?\n\nfalse\n]]--", 
            "title": "xpcall"
        }, 
        {
            "location": "/lua/lua1_data/#debug", 
            "text": "debug.traceback  :\u8f93\u51fa\u5806\u6808\u4fe1\u606f", 
            "title": "debug"
        }, 
        {
            "location": "/lua/lua1_data/#_8", 
            "text": "", 
            "title": "\u5143\u8868\u53ca\u5143\u65b9\u6cd5"
        }, 
        {
            "location": "/lua/lua1_data/#metatable", 
            "text": "\u4e0ejs\u539f\u578b\u94fe(prototype)\u7c7b\u4f3c   \"add\": + \u64cd\u4f5c\u3002 \u5982\u679c\u4efb\u4f55\u4e0d\u662f\u6570\u5b57\u7684\u503c\uff08\u5305\u62ec\u4e0d\u80fd\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff09\u505a\u52a0\u6cd5\uff0c Lua \u5c31\u4f1a\u5c1d\u8bd5\u8c03\u7528\u5143\u65b9\u6cd5\u3002 \u9996\u5148\u3001Lua \u68c0\u67e5\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\uff08\u5373\u4f7f\u5b83\u662f\u5408\u6cd5\u7684\uff09\uff0c \u5982\u679c\u8fd9\u4e2a\u64cd\u4f5c\u6570\u6ca1\u6709\u4e3a \"__add\" \u4e8b\u4ef6\u5b9a\u4e49\u5143\u65b9\u6cd5\uff0c Lua \u5c31\u4f1a\u63a5\u7740\u68c0\u67e5\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u3002 \u4e00\u65e6 Lua \u627e\u5230\u4e86\u5143\u65b9\u6cd5\uff0c \u5b83\u5c06\u628a\u4e24\u4e2a\u64cd\u4f5c\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5143\u65b9\u6cd5\uff0c \u5143\u65b9\u6cd5\u7684\u7ed3\u679c\uff08\u8c03\u6574\u4e3a\u5355\u4e2a\u503c\uff09\u4f5c\u4e3a\u8fd9\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u5982\u679c\u627e\u4e0d\u5230\u5143\u65b9\u6cd5\uff0c\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u3002   local met = {}\nmet.__add = function(op1, op2)\n   for _, item in pairs(op2) do\n      table.insert(op1, item)\n   end\n   return op1\nend\n\nlocal a = {1,2}\nlocal b={3,4}\nsetmetatable(a,met)\nlocal d = a +b\n\nfor k,v in pairs(d) do\n    print(k,v)\nend\n--[[\n1   1\n2   2\n3   3\n4   4\n]]    \"concat\": .. \uff08\u8fde\u63a5\uff09\u64cd\u4f5c\u3002 \u884c\u4e3a\u548c \"add\" \u64cd\u4f5c\u7c7b\u4f3c\uff0c \u4e0d\u540c\u7684\u662f Lua \u5728\u4efb\u4f55\u64cd\u4f5c\u6570\u5373\u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u4e5f\u4e0d\u662f\u6570\u5b57\uff08\u6570\u5b57\u603b\u80fd\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff09\u7684\u60c5\u51b5\u4e0b\u5c1d\u8bd5\u5143\u65b9\u6cd5\u3002    \"len\": # \uff08\u53d6\u957f\u5ea6\uff09\u64cd\u4f5c\u3002 \u5982\u679c\u5bf9\u8c61\u4e0d\u662f\u5b57\u7b26\u4e32\uff0cLua \u4f1a\u5c1d\u8bd5\u5b83\u7684\u5143\u65b9\u6cd5\u3002 \u5982\u679c\u6709\u5143\u65b9\u6cd5\uff0c\u5219\u8c03\u7528\u5b83\u5e76\u5c06\u5bf9\u8c61\u4ee5\u53c2\u6570\u5f62\u5f0f\u4f20\u5165\uff0c \u800c\u8fd4\u56de\u503c\uff08\u88ab\u8c03\u6574\u4e3a\u5355\u4e2a\uff09\u5219\u4f5c\u4e3a\u7ed3\u679c\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u4e00\u5f20\u8868\u4e14\u6ca1\u6709\u5143\u65b9\u6cd5\uff0c Lua \u4f7f\u7528\u8868\u7684\u53d6\u957f\u5ea6\u64cd\u4f5c\uff08\u53c2\u89c1 \u00a73.4.7\uff09\u3002 \u5176\u5b83\u60c5\u51b5\uff0c\u5747\u629b\u51fa\u9519\u8bef\u3002    \"index\": \u7d22\u5f15 table[key]\u3002 \u5f53 table \u4e0d\u662f\u8868\u6216\u662f\u8868 table \u4e2d\u4e0d\u5b58\u5728 key \u8fd9\u4e2a\u952e\u65f6\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u6b64\u65f6\uff0c\u4f1a\u8bfb\u51fa table \u76f8\u5e94\u7684\u5143\u65b9\u6cd5\u3002\n\u5c3d\u7ba1\u540d\u5b57\u53d6\u6210\u8fd9\u6837\uff0c \u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5143\u65b9\u6cd5\u5176\u5b9e\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u5f20\u8868\u3002 \u5982\u679c\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u4ee5 table \u548c key \u4f5c\u4e3a\u53c2\u6570\u8c03\u7528\u5b83\u3002 \u5982\u679c\u5b83\u662f\u4e00\u5f20\u8868\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u4ee5 key \u53d6\u7d22\u5f15\u8fd9\u5f20\u8868\u7684\u7ed3\u679c\u3002 \uff08\u8fd9\u4e2a\u7d22\u5f15\u8fc7\u7a0b\u662f\u8d70\u5e38\u89c4\u7684\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7d22\u5f15\uff0c \u6240\u4ee5\u8fd9\u6b21\u7d22\u5f15\u6709\u53ef\u80fd\u5f15\u53d1\u53e6\u4e00\u6b21\u5143\u65b9\u6cd5\u3002\uff09    \"newindex\": \u7d22\u5f15\u8d4b\u503c table[key] = value \u3002 \u548c\u7d22\u5f15\u4e8b\u4ef6\u7c7b\u4f3c\uff0c\u5b83\u53d1\u751f\u5728 table \u4e0d\u662f\u8868\u6216\u662f\u8868 table \u4e2d\u4e0d\u5b58\u5728 key \u8fd9\u4e2a\u952e\u7684\u65f6\u5019\u3002 \u6b64\u65f6\uff0c\u4f1a\u8bfb\u51fa table \u76f8\u5e94\u7684\u5143\u65b9\u6cd5\u3002\n\u540c\u7d22\u5f15\u8fc7\u7a0b\u90a3\u6837\uff0c \u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5143\u65b9\u6cd5\u5373\u53ef\u4ee5\u662f\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u5f20\u8868\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c \u5219\u4ee5 table\u3001 key\u3001\u4ee5\u53ca value \u4e3a\u53c2\u6570\u4f20\u5165\u3002 \u5982\u679c\u662f\u4e00\u5f20\u8868\uff0c Lua \u5bf9\u8fd9\u5f20\u8868\u505a\u7d22\u5f15\u8d4b\u503c\u64cd\u4f5c\u3002 \uff08\u8fd9\u4e2a\u7d22\u5f15\u8fc7\u7a0b\u662f\u8d70\u5e38\u89c4\u7684\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7d22\u5f15\u8d4b\u503c\uff0c \u6240\u4ee5\u8fd9\u6b21\u7d22\u5f15\u8d4b\u503c\u6709\u53ef\u80fd\u5f15\u53d1\u53e6\u4e00\u6b21\u5143\u65b9\u6cd5\u3002\uff09    \u4e00\u65e6\u6709\u4e86 \"newindex\" \u5143\u65b9\u6cd5\uff0c Lua \u5c31\u4e0d\u518d\u505a\u6700\u521d\u7684\u8d4b\u503c\u64cd\u4f5c\u3002 \uff08\u5982\u679c\u6709\u5fc5\u8981\uff0c\u5728\u5143\u65b9\u6cd5\u5185\u90e8\u53ef\u4ee5\u8c03\u7528 rawset \u6765\u505a\u8d4b\u503c\u3002\uff09   \"call\": \u51fd\u6570\u8c03\u7528\u64cd\u4f5c func(args)\u3002 \u5f53 Lua \u5c1d\u8bd5\u8c03\u7528\u4e00\u4e2a\u975e\u51fd\u6570\u7684\u503c\u7684\u65f6\u5019\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6 \uff08\u5373 func \u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff09\u3002 \u67e5\u627e func \u7684\u5143\u65b9\u6cd5\uff0c \u5982\u679c\u627e\u5f97\u5230\uff0c\u5c31\u8c03\u7528\u8fd9\u4e2a\u5143\u65b9\u6cd5\uff0c func \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff0c\u539f\u6765\u8c03\u7528\u7684\u53c2\u6570\uff08args\uff09\u540e\u4f9d\u6b21\u6392\u5728\u540e\u9762", 
            "title": "\u5143\u8868(metatable)"
        }, 
        {
            "location": "/lua/lua1_data/#_9", 
            "text": "Lua \u5b9e\u73b0\u4e86\u4e00\u4e2a\u589e\u91cf\u6807\u8bb0-\u626b\u63cf\u6536\u96c6\u5668\u3002 \u5b83\u4f7f\u7528\u8fd9\u4e24\u4e2a\u6570\u5b57\u6765\u63a7\u5236\u5783\u573e\u6536\u96c6\u5faa\u73af\uff1a \u5783\u573e\u6536\u96c6\u5668\u95f4\u6b47\u7387 \u548c \u5783\u573e\u6536\u96c6\u5668\u6b65\u8fdb\u500d\u7387\u3002 \u8fd9\u4e24\u4e2a\u6570\u5b57\u90fd\u4f7f\u7528\u767e\u5206\u6570\u4e3a\u5355\u4f4d \uff08\u4f8b\u5982\uff1a\u503c 100 \u5728\u5185\u90e8\u8868\u793a 1 \uff09\u3002  \u5783\u573e\u6536\u96c6\u5668\u95f4\u6b47\u7387\u63a7\u5236\u7740\u6536\u96c6\u5668\u9700\u8981\u5728\u5f00\u542f\u65b0\u7684\u5faa\u73af\u524d\u8981\u7b49\u5f85\u591a\u4e45\u3002 \u589e\u5927\u8fd9\u4e2a\u503c\u4f1a\u51cf\u5c11\u6536\u96c6\u5668\u7684\u79ef\u6781\u6027\u3002 \u5f53\u8fd9\u4e2a\u503c\u6bd4 100 \u5c0f\u7684\u65f6\u5019\uff0c\u6536\u96c6\u5668\u5728\u5f00\u542f\u65b0\u7684\u5faa\u73af\u524d\u4e0d\u4f1a\u6709\u7b49\u5f85\u3002 \u8bbe\u7f6e\u8fd9\u4e2a\u503c\u4e3a 200 \u5c31\u4f1a\u8ba9\u6536\u96c6\u5668\u7b49\u5230\u603b\u5185\u5b58\u4f7f\u7528\u91cf\u8fbe\u5230 \u4e4b\u524d\u7684\u4e24\u500d\u65f6\u624d\u5f00\u59cb\u65b0\u7684\u5faa\u73af\u3002  \u5783\u573e\u6536\u96c6\u5668\u6b65\u8fdb\u500d\u7387\u63a7\u5236\u7740\u6536\u96c6\u5668\u8fd0\u4f5c\u901f\u5ea6\u76f8\u5bf9\u4e8e\u5185\u5b58\u5206\u914d\u901f\u5ea6\u7684\u500d\u7387\u3002 \u589e\u5927\u8fd9\u4e2a\u503c\u4e0d\u4ec5\u4f1a\u8ba9\u6536\u96c6\u5668\u66f4\u52a0\u79ef\u6781\uff0c\u8fd8\u4f1a\u589e\u52a0\u6bcf\u4e2a\u589e\u91cf\u6b65\u9aa4\u7684\u957f\u5ea6\u3002 \u4e0d\u8981\u628a\u8fd9\u4e2a\u503c\u8bbe\u5f97\u5c0f\u4e8e 100 \uff0c \u90a3\u6837\u7684\u8bdd\u6536\u96c6\u5668\u5c31\u5de5\u4f5c\u7684\u592a\u6162\u4e86\u4ee5\u81f3\u4e8e\u6c38\u8fdc\u90fd\u5e72\u4e0d\u5b8c\u4e00\u4e2a\u5faa\u73af\u3002 \u9ed8\u8ba4\u503c\u662f 200 \uff0c\u8fd9\u8868\u793a\u6536\u96c6\u5668\u4ee5\u5185\u5b58\u5206\u914d\u7684\u201c\u4e24\u500d\u201d\u901f\u5de5\u4f5c\u3002  \u5982\u679c\u4f60\u628a\u6b65\u8fdb\u500d\u7387\u8bbe\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u5b57 \uff08\u6bd4\u4f60\u7684\u7a0b\u5e8f\u53ef\u80fd\u7528\u5230\u7684\u5b57\u8282\u6570\u8fd8\u5927 10% \uff09\uff0c \u6536\u96c6\u5668\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a stop-the-world \u6536\u96c6\u5668\u3002 \u63a5\u7740\u4f60\u82e5\u628a\u95f4\u6b47\u7387\u8bbe\u4e3a 200 \uff0c \u6536\u96c6\u5668\u7684\u884c\u4e3a\u5c31\u548c\u8fc7\u53bb\u7684 Lua \u7248\u672c\u4e00\u6837\u4e86\uff1a \u6bcf\u6b21 Lua \u4f7f\u7528\u7684\u5185\u5b58\u7ffb\u500d\u65f6\uff0c\u5c31\u505a\u4e00\u6b21\u5b8c\u6574\u7684\u6536\u96c6\u3002", 
            "title": "\u5783\u573e\u6536\u96c6"
        }, 
        {
            "location": "/lua/lua1_data/#_10", 
            "text": "\u4f7f\u7528 C API,\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5783\u573e\u6536\u96c6\u7684\u5143\u65b9\u6cd5, __gc ,\u6765\u505a\u4e00\u4e9b\u7279\u6b8a\u7684\u8d44\u6e90\u91ca\u653e\u64cd\u4f5c,\u6bd4\u5982\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u7b49,\u4e00\u4e2a userdata \u53ef\u88ab\u56de\u6536\uff0c\u82e5\u5b83\u7684 metatable \u4e2d\u6709 __gc \u8fd9\u4e2a\u57df\u3000\uff0c \u5783\u573e\u6536\u96c6\u5668\u5c31\u4e0d\u7acb\u5373\u6536\u56de\u5b83\u3002 \u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cLua \u628a\u5b83\u4eec\u653e\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\u3002 \u6700\u6536\u96c6\u7ed3\u675f\u540e\uff0cLua \u9488\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a userdata \u6267\u884c\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u7684\u7b49\u4ef7\u64cd\u4f5c\uff1a     function gc_event (udata)\n       local h = metatable(udata).__gc\n       if h then\n         h(udata)\n       end\n     end  \u5728\u6bcf\u4e2a\u5783\u573e\u6536\u96c6\u5468\u671f\u7684\u7ed3\u5c3e\uff0c\u6bcf\u4e2a\u5728\u5f53\u524d\u5468\u671f\u88ab\u6536\u96c6\u8d77\u6765\u7684 userdata \u7684\u7ed3\u675f\u5b50\u4f1a\u4ee5 \u5b83\u4eec\u6784\u9020\u65f6\u7684\u9006\u5e8f\u4f9d\u6b21\u8c03\u7528\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6536\u96c6\u5217\u8868\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5728\u7a0b\u5e8f\u4e2d\u88ab\u521b\u5efa\u7684 userdata \u7684 \u7ed3\u675f\u5b50\u4f1a\u88ab\u7b2c\u4e00\u4e2a\u8c03\u7528\u3002\n\u53c2\u8003: http://blog.codingnow.com/cloud/LuaReferObject", 
            "title": "\u5783\u573e\u6536\u96c6\u7684\u5143\u65b9\u6cd5"
        }, 
        {
            "location": "/lua/lua1_data/#_11", 
            "text": "\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u53ea\u88ab\u5f31\u5f15\u7528\u5f15\u7528\u5230\uff0c \u5783\u573e\u6536\u96c6\u5668\u5c31\u4f1a\u56de\u6536\u8fd9\u4e2a\u5bf9\u8c61\n\u4e00\u5f20\u8868\u7684\u5143\u8868\u4e2d\u7684  mode \u57df\u63a7\u5236\u7740\u8fd9\u5f20\u8868\u7684\u5f31\u5c5e\u6027\u3002 \u5f53  mode \u57df\u662f\u4e00\u4e2a\u5305\u542b\u5b57\u7b26 'k' \u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd9\u5f20\u8868\u7684\u6240\u6709\u952e\u7686\u4e3a\u5f31\u5f15\u7528\u3002 \u5f53 __mode \u57df\u662f\u4e00\u4e2a\u5305\u542b\u5b57\u7b26 'v' \u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd9\u5f20\u8868\u7684\u6240\u6709\u503c\u7686\u4e3a\u5f31\u5f15\u7528  \u503c\u4e3a\u5f31\u8868  local weakTable = {}\nweakTable[1] = function() print( i am the first element ) end\nweakTable[2] = function() print( i am the second element ) end\nweakTable[3] = {10, 20, 30}\n\nsetmetatable(weakTable, {__mode =  v })  --\u503c\u4e3a\u5f31\u8868\nprint(table.getn(weakTable))  --\u672agc\u524d3\u4e2a\n\nele = weakTable[1]  --\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u5f15\u7528\ncollectgarbage()\nprint(table.getn(weakTable))  --gc\u540e\u53ea\u5269\u7b2c\u4e00\u4e2a\u5143\u7d20\n\nele= nil   --\u5f15\u7528\u7f6e\u7a7a\ncollectgarbage()\nprint(table.getn(weakTable))  --\u5168\u90e8gc  \u952e\u4e3a\u5f31\u8868  local function getkeyn( t )\n    local count = 0\n    for k,v in pairs(t or {}) do\n     count= count+1\n   end\nreturn count\nend\n\nlocal weakKey= {}\nlocal t1={}\nlocal t2={}\nweakKey[t1] = 1\nweakKey[t2] = 2\n\nsetmetatable(weakKey,{__mode= k }) --\u952e\u4e3a\u5f31\u8868\nprint(getkeyn(weakKey)) --2\n\nt1= nil\ncollectgarbage()\nprint(getkeyn(weakKey)) --1", 
            "title": "\u5f31\u8868"
        }, 
        {
            "location": "/lua/lua1_data/#_12", 
            "text": "\u652f\u6301\u534f\u7a0b\uff0c\u4e5f\u53eb \u534f\u540c\u5f0f\u591a\u7ebf\u7a0b\u3002 \u4e00\u4e2a\u534f\u7a0b\u5728 Lua \u4e2d\u4ee3\u8868\u4e86\u4e00\u6bb5\u72ec\u7acb\u7684\u6267\u884c\u7ebf\u7a0b\u3002 \u7136\u800c\uff0c\u4e0e\u591a\u7ebf\u7a0b\u7cfb\u7edf\u4e2d\u7684\u7ebf\u7a0b\u7684\u533a\u522b\u5728\u4e8e\uff0c \u534f\u7a0b\u4ec5\u5728\u663e\u5f0f\u8c03\u7528\u4e00\u4e2a\u8ba9\u51fa\uff08yield\uff09\u51fd\u6570\u65f6\u624d\u6302\u8d77\u5f53\u524d\u7684\u6267\u884c.", 
            "title": "\u534f\u7a0b"
        }, 
        {
            "location": "/lua/lua1_data/#_13", 
            "text": "", 
            "title": "\u63a5\u53e3"
        }, 
        {
            "location": "/lua/lua1_data/#coroutinecreatef", 
            "text": "\u51fd\u6570\u53c2\u6570[\u63a5\u53d7\u5355\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3acoroutine\u7684\u4e3b\u51fd\u6570]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u4e00\u4e2athread\u5bf9\u8c61]\n\u51fd\u6570\u4f5c\u7528[\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\uff0c\u534f\u7a0b\u7684\u4e3b\u51fd\u6570\u5b9a\u4e49\u4e86\u8be5\u534f\u7a0b\u5185\u7684\u4efb\u52a1\u6d41\u7a0b]", 
            "title": "coroutine.create(f)"
        }, 
        {
            "location": "/lua/lua1_data/#coroutineresumeco-var1", 
            "text": "\u51fd\u6570\u53c2\u6570[\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1acoroutine.create\u7684\u8fd4\u56de\u503c\uff0c\u5373\u4e00\u4e2athread\u5bf9\u8c61]\n\u51fd\u6570\u53c2\u6570[\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1acoroutine\u4e2d\u6267\u884c\u9700\u8981\u7684\u53c2\u6570\uff0c\u662f\u4e00\u4e2a\u53d8\u957f\u53c2\u6570\uff0c\u53ef\u4ee5\u4f20\u4efb\u610f\u591a\u4e2a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56detrue\uff0c\u4e4b\u540e\u7684\u8fd4\u56de\u503c\u662f\u524d\u4e00\u4e2a\u8c03\u7528coroutine.yield\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u503c]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u9047\u5230\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56defalse\uff0c\u52a0\u4e0a\u9519\u8bef\u4fe1\u606f]\n\u51fd\u6570\u4f5c\u7528[\u5f53\u4f60\u7b2c\u4e00\u6b21\u8c03\u7528coroutine.rusume\u65b9\u6cd5\u65f6\uff0ccoroutine\u4ece\u4e3b\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u5f00\u59cb\u6267\u884c\uff0c\u4e4b\u540e\u5728coroutine\u5f00\u59cb\u6267\u884c\u540e\uff0c\u5b83\u4f1a\u4e00\u76f4\u8fd0\u884c\u5230\n\u81ea\u8eab\u7ec8\u6b62\u6216\u8005\u662fcoroutine\u7684\u4e0b\u4e00\u6b21yield\u51fd\u6570]", 
            "title": "coroutine.resume(co, [, var1, ...])"
        }, 
        {
            "location": "/lua/lua1_data/#coroutineyield", 
            "text": "\u51fd\u6570\u53c2\u6570[\u53d8\u957f\u53c2\u6570]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56detrue\uff0c\u4e4b\u540e\u7684\u8fd4\u56de\u503c\u662f\u524d\u4e00\u4e2a\u8c03\u7528coroutine.resume()\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u503c]\n\u51fd\u6570\u8fd4\u56de\u503c[\u5982\u679c\u7a0b\u5e8f\u9047\u5230\u8fd0\u884c\u9519\u8bef\uff0c\u5219\u8fd4\u56defalse\uff0c\u52a0\u4e0a\u9519\u8bef\u4fe1\u606f]\n\u51fd\u6570\u4f5c\u7528[\u6302\u8d77\u5f53\u524d\u6267\u884c\u7684\u534f\u7a0b]", 
            "title": "coroutine.yield(...)"
        }, 
        {
            "location": "/lua/lua1_data/#coroutinerunning", 
            "text": "\u51fd\u6570\u53c2\u6570[\u7a7a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u5f53\u524d\u534f\u7a0b\uff0c\u5982\u679c\u5b83\u88ab\u4e3b\u7ebf\u7a0b\u8c03\u7528\u7684\u8bdd\uff0c\u8fd4\u56denil]", 
            "title": "coroutine.running()"
        }, 
        {
            "location": "/lua/lua1_data/#coroutinestatus", 
            "text": "\u51fd\u6570\u53c2\u6570[\u7a7a]\n\u51fd\u6570\u8fd4\u56de\u503c[\u8fd4\u56de\u5f53\u524d\u534f\u7a0b\u7684\u72b6\u6001\uff0c\u6709suspended, running, normal, dead]", 
            "title": "coroutine.status()"
        }, 
        {
            "location": "/lua/lua1_data/#_14", 
            "text": "function foo (a)\n       print( [step2] foo , a)\n       return coroutine.yield(2*a)\n end\n\nlocal  co = coroutine.create(function (a,b)\n       print( [step1] co-body , a, b)\n       local r = foo(a+1)\n       print( [step4] co-body , r)\n       local r, s = coroutine.yield(a+b, a-b)\n       print( [step6] co-body , r, s)\n       return b,  end \n end)\n\n print( [step3] main , coroutine.resume(co, 1, 10))\n print( [step5] main , coroutine.resume(co,  r ))\n print( [step7] main , coroutine.resume(co,  x ,  y ))\n print( [step8] main , coroutine.resume(co,  x ,  y ))\n\n--[[\n[step1] co-body 1   10\n[step2] foo 2\n[step3] main    true    4\n[step4] co-body r\n[step5] main    true    11  -9\n[step6] co-body x   y\n[step7] main    true    10  end\n[step8] main    false   cannot resume dead coroutine\n]]--", 
            "title": "\u4f8b\u5b50"
        }, 
        {
            "location": "/swift/swift1_intro/", 
            "text": "swift\u57fa\u7840\u5165\u95e8\n\n\n\u73af\u5883\n\n\nPlayGround: Swift \u7684 playground \u5c31\u50cf\u662f\u4e00\u4e2a\u53ef\u4ea4\u4e92\u7684\u6587\u6863\uff0c\u5b83\u662f\u7528\u6765\u7ec3\u624b\u5b66swift,\u53ef\u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c,Xcode=\nFile =\n New =\n Playground.\n\n\n\u57fa\u7840\u8bed\u6cd5\n\n\n\u6ce8\u91ca\n\n\n//\u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\n\n/* \u8fd9\u4e5f\u662f\u4e00\u6761\u6ce8\u91ca\uff0c\n\u4f46\u8de8\u8d8a\u591a\u884c */\n\n/* \u8fd9\u662f\u7b2c\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca\u7684\u5f00\u5934\n\n/* \u8fd9\u662f\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u591a\u884c\u6ce8\u91ca */\n\n\u8fd9\u662f\u7b2c\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca\u7684\u7ed3\u5c3e */\n\n\n\n\n\u5206\u53f7\n\n\n\u4e0e\u5176\u5b83\u8bed\u8a00\u4e0d\u540c\u7684\u662f,Swift\u4e0d\u8981\u6c42\u5728\u6bcf\u884c\u8bed\u53e5\u7684\u7ed3\u5c3e\u4f7f\u7528\u5206\u53f7(;),\u4f46\u5f53\u4f60\u5728\u540c\u4e00\u884c\u4e66\u5199\u591a\u6761\u8bed\u53e5\u65f6,\u5fc5\u987b\u7528\u5206\u53f7\u9694\u5f00\uff1a\n\n\nvar myString = \nHello, World!\n; print(myString)\n\n\n\n\nSwift\u7f29\u8fdb\n\n\nSwift\u5bf9\u7a7a\u683c\u7684\u4f7f\u7528\u6709\u4e00\u5b9a\u7684\u8981\u6c42\uff0c\u4f46\u662f\u53c8\u4e0d\u50cfPython\u5bf9\u7f29\u8fdb\u7684\u8981\u6c42\u90a3\u4e48\u4e25\u683c\u3002\n\u5728Swift\u4e2d\uff0c\u8fd0\u7b97\u7b26\u4e0d\u80fd\u76f4\u63a5\u8ddf\u5728\u53d8\u91cf\u6216\u5e38\u91cf\u7684\u540e\u9762\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u62a5\u9519\uff1a\n\n\nlet a= 1 + 2 //error:prefix/postfix '=' is reserved \u8fd0\u7b97\u7b26\u4e0d\u80fd\u76f4\u63a5\u8ddf\u5728\u53d8\u91cf\u6216\u5e38\u91cf\u7684\u540e\n\u6b63\u786e\u5199\u6cd5:\nlet a = 1 + 2\n\nlet c = a|b  //error:'|' is not a  postfix unary operator \u64cd\u4f5c\u7b26\u4e24\u8fb9\u9700\u8981\u7a7a\u683c\n\u6b63\u786e\u5199\u6cd5:\nlet c = a | b\n\n\n\n\n\u6807\u8bc6\u7b26\n\n\n\n\n\u533a\u5206\u5927\u5c0f\u5199\uff0cMyname\u4e0emyname\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\uff1b\n\n\n\u6807\u8bc6\u7b26\u9996\u5b57\u7b26\u53ef\u4ee5\u4ee5\u4e0b\u5212\u7ebf\uff08_\uff09\u6216\u8005\u5b57\u6bcd\u5f00\u59cb\uff0c\u4f46\u4e0d\u80fd\u662f\u6570\u5b57\uff1b\n\n\n\u6807\u8bc6\u7b26\u4e2d\u5176\u4ed6\u5b57\u7b26\u53ef\u4ee5\u662f\u4e0b\u5212\u7ebf\uff08_\uff09\u3001\u5b57\u6bcd\u6216\u6570\u5b57\u3002\n\n\n\n\n\u6570\u636e\u7c7b\u578b\n\n\nInt,UInt,Double,Float,Boolean,String\n\n\n\u53d8\u91cf\u5b9a\u4e49\n\n\nlet a = 1  //\u5e38\u91cf\nvar b:int =  1 //\u53d8\u91cf\ntypealias myint = int //\u522b\u540d\uff0c\u6709\u70b9\u50cf\u5b8f\u5b9a\u4e49\n\n\n\n\n\u7c7b\u578b\u63a8\u65ad\n\n\n\u975e\u663e\u793a\u53d8\u91cf\u5b9a\u4e49\u65f6swift\u4f1a\u5904\u884c\u63a8\u65ad\u4f60\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5f53\u63a8\u65ad\u6d6e\u70b9\u6570\u7684\u7c7b\u578b\u65f6\uff0cSwift\u603b\u662f\u4f1a\u9009\u62e9Double\u800c\u4e0d\u662fFloat\u3002\n\n\nSwift \u53ef\u9009(Optionals)\u7c7b\u578b\n\n\n\u7ed9\u65e0\u9ed8\u8ba4\u503c\u7684\u5305\u88c5\u4e00\u4e2ani\u9ed8\u8ba4\u503c\n\n\nvar optionalInteger: Int?\n\u7b49\u4ef7\u4e8e\nvar optionalInteger: Optional\nInt\n\n\n\n\n\n\u611f\u53f9\u53f7\uff08!\uff09\u5f3a\u5236\u89e3\u6790\n\n\nvar myString:String?\nmyString = \nHello, Swift!\n\nif myString != nil {\n   // \u5f3a\u5236\u89e3\u6790\n   print( myString! )\n}else{\n   print(\nmyString \u503c\u4e3a nil\n)\n}\n\n\n\n\n\u81ea\u52a8\u89e3\u6790(!)\n\n\nvar myString:String!\nmyString = \nHello, Swift!\n\nif myString != nil {\n   print(myString)\n}else{\n   print(\nmyString \u503c\u4e3a nil\n)\n}\n\n\n\n\n\u53ef\u9009\u7ed1\u5b9a\n\u4f7f\u7528\u53ef\u9009\u7ed1\u5b9a\uff08optional binding\uff09\u6765\u5224\u65ad\u53ef\u9009\u7c7b\u578b\u662f\u5426\u5305\u542b\u503c\uff0c\u5982\u679c\u5305\u542b\u5c31\u628a\u503c\u8d4b\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5e38\u91cf\u6216\u8005\u53d8\u91cf\u3002\u53ef\u9009\u7ed1\u5b9a\u53ef\u4ee5\u7528\u5728if\u548cwhile\u8bed\u53e5\u4e2d\u6765\u5bf9\u53ef\u9009\u7c7b\u578b\u7684\u503c\u8fdb\u884c\u5224\u65ad\u5e76\u628a\u503c\u8d4b\u7ed9\u4e00\u4e2a\u5e38\u91cf\u6216\u8005\u53d8\u91cf\u3002\n\n\nvar myString:String?\nmyString = \nHello, Swift!\n\nif let yourString = myString {\n   print(\n\u4f60\u7684\u5b57\u7b26\u4e32\u503c\u4e3a - \\(yourString)\n)\n}else{\n   print(\n\u4f60\u7684\u5b57\u7b26\u4e32\u6ca1\u6709\u503c\n)\n}\n\n\n\n\n\u63a7\u5236\u7b26\n\n\nfunc a() -\n Bool\n{\n    print(\na\n)\n    return true\n}\n\nfunc b() -\n Bool\n{\n    print(\nb\n)\n    return false\n}\nif (a() || b())\n{\n    print(\nc\n)\n}\n\n\n\n\nerror", 
            "title": "swift\u57fa\u7840\u5165\u95e8"
        }, 
        {
            "location": "/swift/swift1_intro/#swift", 
            "text": "", 
            "title": "swift\u57fa\u7840\u5165\u95e8"
        }, 
        {
            "location": "/swift/swift1_intro/#_1", 
            "text": "PlayGround: Swift \u7684 playground \u5c31\u50cf\u662f\u4e00\u4e2a\u53ef\u4ea4\u4e92\u7684\u6587\u6863\uff0c\u5b83\u662f\u7528\u6765\u7ec3\u624b\u5b66swift,\u53ef\u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c,Xcode= File =  New =  Playground.", 
            "title": "\u73af\u5883"
        }, 
        {
            "location": "/swift/swift1_intro/#_2", 
            "text": "", 
            "title": "\u57fa\u7840\u8bed\u6cd5"
        }, 
        {
            "location": "/swift/swift1_intro/#_3", 
            "text": "//\u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\n\n/* \u8fd9\u4e5f\u662f\u4e00\u6761\u6ce8\u91ca\uff0c\n\u4f46\u8de8\u8d8a\u591a\u884c */\n\n/* \u8fd9\u662f\u7b2c\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca\u7684\u5f00\u5934\n\n/* \u8fd9\u662f\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u591a\u884c\u6ce8\u91ca */\n\n\u8fd9\u662f\u7b2c\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca\u7684\u7ed3\u5c3e */", 
            "title": "\u6ce8\u91ca"
        }, 
        {
            "location": "/swift/swift1_intro/#_4", 
            "text": "\u4e0e\u5176\u5b83\u8bed\u8a00\u4e0d\u540c\u7684\u662f,Swift\u4e0d\u8981\u6c42\u5728\u6bcf\u884c\u8bed\u53e5\u7684\u7ed3\u5c3e\u4f7f\u7528\u5206\u53f7(;),\u4f46\u5f53\u4f60\u5728\u540c\u4e00\u884c\u4e66\u5199\u591a\u6761\u8bed\u53e5\u65f6,\u5fc5\u987b\u7528\u5206\u53f7\u9694\u5f00\uff1a  var myString =  Hello, World! ; print(myString)", 
            "title": "\u5206\u53f7"
        }, 
        {
            "location": "/swift/swift1_intro/#swift_1", 
            "text": "Swift\u5bf9\u7a7a\u683c\u7684\u4f7f\u7528\u6709\u4e00\u5b9a\u7684\u8981\u6c42\uff0c\u4f46\u662f\u53c8\u4e0d\u50cfPython\u5bf9\u7f29\u8fdb\u7684\u8981\u6c42\u90a3\u4e48\u4e25\u683c\u3002\n\u5728Swift\u4e2d\uff0c\u8fd0\u7b97\u7b26\u4e0d\u80fd\u76f4\u63a5\u8ddf\u5728\u53d8\u91cf\u6216\u5e38\u91cf\u7684\u540e\u9762\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u62a5\u9519\uff1a  let a= 1 + 2 //error:prefix/postfix '=' is reserved \u8fd0\u7b97\u7b26\u4e0d\u80fd\u76f4\u63a5\u8ddf\u5728\u53d8\u91cf\u6216\u5e38\u91cf\u7684\u540e\n\u6b63\u786e\u5199\u6cd5:\nlet a = 1 + 2\n\nlet c = a|b  //error:'|' is not a  postfix unary operator \u64cd\u4f5c\u7b26\u4e24\u8fb9\u9700\u8981\u7a7a\u683c\n\u6b63\u786e\u5199\u6cd5:\nlet c = a | b", 
            "title": "Swift\u7f29\u8fdb"
        }, 
        {
            "location": "/swift/swift1_intro/#_5", 
            "text": "\u533a\u5206\u5927\u5c0f\u5199\uff0cMyname\u4e0emyname\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\uff1b  \u6807\u8bc6\u7b26\u9996\u5b57\u7b26\u53ef\u4ee5\u4ee5\u4e0b\u5212\u7ebf\uff08_\uff09\u6216\u8005\u5b57\u6bcd\u5f00\u59cb\uff0c\u4f46\u4e0d\u80fd\u662f\u6570\u5b57\uff1b  \u6807\u8bc6\u7b26\u4e2d\u5176\u4ed6\u5b57\u7b26\u53ef\u4ee5\u662f\u4e0b\u5212\u7ebf\uff08_\uff09\u3001\u5b57\u6bcd\u6216\u6570\u5b57\u3002", 
            "title": "\u6807\u8bc6\u7b26"
        }, 
        {
            "location": "/swift/swift1_intro/#_6", 
            "text": "Int,UInt,Double,Float,Boolean,String", 
            "title": "\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/swift/swift1_intro/#_7", 
            "text": "let a = 1  //\u5e38\u91cf\nvar b:int =  1 //\u53d8\u91cf\ntypealias myint = int //\u522b\u540d\uff0c\u6709\u70b9\u50cf\u5b8f\u5b9a\u4e49", 
            "title": "\u53d8\u91cf\u5b9a\u4e49"
        }, 
        {
            "location": "/swift/swift1_intro/#_8", 
            "text": "\u975e\u663e\u793a\u53d8\u91cf\u5b9a\u4e49\u65f6swift\u4f1a\u5904\u884c\u63a8\u65ad\u4f60\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5f53\u63a8\u65ad\u6d6e\u70b9\u6570\u7684\u7c7b\u578b\u65f6\uff0cSwift\u603b\u662f\u4f1a\u9009\u62e9Double\u800c\u4e0d\u662fFloat\u3002", 
            "title": "\u7c7b\u578b\u63a8\u65ad"
        }, 
        {
            "location": "/swift/swift1_intro/#swift-optionals", 
            "text": "\u7ed9\u65e0\u9ed8\u8ba4\u503c\u7684\u5305\u88c5\u4e00\u4e2ani\u9ed8\u8ba4\u503c  var optionalInteger: Int?\n\u7b49\u4ef7\u4e8e\nvar optionalInteger: Optional Int   \u611f\u53f9\u53f7\uff08!\uff09\u5f3a\u5236\u89e3\u6790  var myString:String?\nmyString =  Hello, Swift! \nif myString != nil {\n   // \u5f3a\u5236\u89e3\u6790\n   print( myString! )\n}else{\n   print( myString \u503c\u4e3a nil )\n}  \u81ea\u52a8\u89e3\u6790(!)  var myString:String!\nmyString =  Hello, Swift! \nif myString != nil {\n   print(myString)\n}else{\n   print( myString \u503c\u4e3a nil )\n}  \u53ef\u9009\u7ed1\u5b9a\n\u4f7f\u7528\u53ef\u9009\u7ed1\u5b9a\uff08optional binding\uff09\u6765\u5224\u65ad\u53ef\u9009\u7c7b\u578b\u662f\u5426\u5305\u542b\u503c\uff0c\u5982\u679c\u5305\u542b\u5c31\u628a\u503c\u8d4b\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5e38\u91cf\u6216\u8005\u53d8\u91cf\u3002\u53ef\u9009\u7ed1\u5b9a\u53ef\u4ee5\u7528\u5728if\u548cwhile\u8bed\u53e5\u4e2d\u6765\u5bf9\u53ef\u9009\u7c7b\u578b\u7684\u503c\u8fdb\u884c\u5224\u65ad\u5e76\u628a\u503c\u8d4b\u7ed9\u4e00\u4e2a\u5e38\u91cf\u6216\u8005\u53d8\u91cf\u3002  var myString:String?\nmyString =  Hello, Swift! \nif let yourString = myString {\n   print( \u4f60\u7684\u5b57\u7b26\u4e32\u503c\u4e3a - \\(yourString) )\n}else{\n   print( \u4f60\u7684\u5b57\u7b26\u4e32\u6ca1\u6709\u503c )\n}", 
            "title": "Swift \u53ef\u9009(Optionals)\u7c7b\u578b"
        }, 
        {
            "location": "/swift/swift1_intro/#_9", 
            "text": "func a() -  Bool\n{\n    print( a )\n    return true\n}\n\nfunc b() -  Bool\n{\n    print( b )\n    return false\n}\nif (a() || b())\n{\n    print( c )\n}", 
            "title": "\u63a7\u5236\u7b26"
        }, 
        {
            "location": "/swift/swift1_intro/#error", 
            "text": "", 
            "title": "error"
        }, 
        {
            "location": "/php/php1_intro/", 
            "text": "PHP web\u57fa\u7840\u51fd\u6570\u89e3\u8bfb\n\n\n\u4e00\u4e9b\u7528\u6cd5\n\n\n\n\nerror_reporting(E_ALL ^ E_NOTICE);\n :\u62a5\u544a\u9664E_NOTICE\u5916\u7684\u6240\u6709\u6d88\u606f\n\n\n@set_time_limit(0);\n :\u8bbe\u7f6e\u4ee3\u7801\u6700\u5927\u6267\u884c\u65f6\u95f4\n\n\n\u63a7\u5236\u811a\u672c\u4e2d\u6570\u636e\u7684\u8f93\u51fa\n\n\n\n\nob_start();\n ob_flush();\nob_clean();\n\n\n\n\n\n\n\n\n\u5b9a\u4e49\u5e38\u91cf\n\ndefine('IA_ROOT', str_replace(\"\\\\\",'/', dirname(__FILE__)));\n\n\n\n\n\n\nheader\n\n\n\n\n\n\nheader('content-type: text/html; charset=utf-8'); //\u8bbe\u7f6e\u7f16\u7801\nheader('location: ./index.php'); //\u8df3\u8f6c\nheader('location: ?refresh');//\u5237\u65b0\n\n\n\n\n\n\n\n\nsetcookie\n\nsetcookie('action', 'env');\n\n\n\n\n\n\nexit();\n\n\n\n\n\n\nexit(json_encode($vars)); //\u9000\u51fa\u5e76\u8f93\u51fa\u4e00\u6bb5\u4fe1\u606f\n\n\n\n\n\n\nextension_loaded\n\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5f00\u542f\n\n\n\n\n\u4f5c\u7528\u57df\n\n\n\u51fd\u6570\u4f5c\u7528\u57df,\u4e0e\u62ec\u53f7\u65e0\u5173\n\n\n\u57fa\u7840\u8bed\u6cd5\n\n\n?php\n// \u6b64\u5904\u662f PHP \u4ee3\u7801\n?\n\n\n\n\n\n\u6ce8\u91ca\n\n\n?php\n// \u8fd9\u662f\u5355\u884c\u6ce8\u91ca\n\n# \u8fd9\u4e5f\u662f\u5355\u884c\u6ce8\u91ca\n\n/*\n\u8fd9\u662f\u591a\u884c\u6ce8\u91ca\u5757\n\u5b83\u6a2a\u8de8\u4e86\n\u591a\u884c\n*/\n?", 
            "title": "\u57fa\u7840\u4ecb\u7ecd"
        }, 
        {
            "location": "/php/php1_intro/#php-web", 
            "text": "", 
            "title": "PHP web\u57fa\u7840\u51fd\u6570\u89e3\u8bfb"
        }, 
        {
            "location": "/php/php1_intro/#_1", 
            "text": "error_reporting(E_ALL ^ E_NOTICE);  :\u62a5\u544a\u9664E_NOTICE\u5916\u7684\u6240\u6709\u6d88\u606f  @set_time_limit(0);  :\u8bbe\u7f6e\u4ee3\u7801\u6700\u5927\u6267\u884c\u65f6\u95f4  \u63a7\u5236\u811a\u672c\u4e2d\u6570\u636e\u7684\u8f93\u51fa   ob_start();\n ob_flush();\nob_clean();    \u5b9a\u4e49\u5e38\u91cf define('IA_ROOT', str_replace(\"\\\\\",'/', dirname(__FILE__)));    header    header('content-type: text/html; charset=utf-8'); //\u8bbe\u7f6e\u7f16\u7801\nheader('location: ./index.php'); //\u8df3\u8f6c\nheader('location: ?refresh');//\u5237\u65b0    setcookie setcookie('action', 'env');    exit();    exit(json_encode($vars)); //\u9000\u51fa\u5e76\u8f93\u51fa\u4e00\u6bb5\u4fe1\u606f   extension_loaded\n\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5f00\u542f", 
            "title": "\u4e00\u4e9b\u7528\u6cd5"
        }, 
        {
            "location": "/php/php1_intro/#_2", 
            "text": "\u51fd\u6570\u4f5c\u7528\u57df,\u4e0e\u62ec\u53f7\u65e0\u5173", 
            "title": "\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/php/php1_intro/#_3", 
            "text": "?php\n// \u6b64\u5904\u662f PHP \u4ee3\u7801\n?", 
            "title": "\u57fa\u7840\u8bed\u6cd5"
        }, 
        {
            "location": "/php/php1_intro/#_4", 
            "text": "?php\n// \u8fd9\u662f\u5355\u884c\u6ce8\u91ca\n\n# \u8fd9\u4e5f\u662f\u5355\u884c\u6ce8\u91ca\n\n/*\n\u8fd9\u662f\u591a\u884c\u6ce8\u91ca\u5757\n\u5b83\u6a2a\u8de8\u4e86\n\u591a\u884c\n*/\n?", 
            "title": "\u6ce8\u91ca"
        }
    ]
}